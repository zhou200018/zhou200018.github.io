<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>适合文科的高薪职业</title>
      <link href="/archives/752c0f24.html"/>
      <url>/archives/752c0f24.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>项目经理</p><blockquote><p>推荐的书籍：</p><ol><li>《俞军产品方法论》</li><li>《用户体验要素以用户为中心的产品设计》</li></ol></blockquote></li><li><p>运营</p><blockquote><p>推荐的书籍：</p><ol><li>《运营之光》</li><li>《从到开始做运营》</li></ol></blockquote></li><li><p>市场</p><blockquote><ol><li>《营销管理》</li><li>《定位》</li><li>《整合营销传播》</li></ol></blockquote></li><li><p>销售</p><blockquote><ol><li>《世界上最伟大的推销员》</li><li>《销售巨人》</li></ol></blockquote></li><li><p>人事行政</p><blockquote><ol><li>《人力资源管理概论》</li><li>《管理实践》</li></ol></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 职场 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 职场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毕业论文降重法</title>
      <link href="/archives/fc037389.html"/>
      <url>/archives/fc037389.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>将标红部分导入到<a href="https://www.deepl.com/translator">Deepl</a>，翻译成英文，将翻译好的英文粘贴到<a href="https://quillbot.com/">Quillbot</a>，再将同义词选择性更换，最后将内容粘贴到<a href="https://www.deepl.com/translator">Deepl</a>中翻译成中文即可。</p></li><li><p>是将标红内容粘贴到<a href="https://www.zaobiao.net/">早标网</a>,将系统生成的同义词选择性地替换，然后修改一下逻辑即可降重</p></li><li><p>将标红的内容粘贴至<a href="https://paperface.cn/">paperface</a>中直接一键降重</p><p>最红进入<a href="https://cx.cnki.net/">知网</a>查重</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕业设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库规范</title>
      <link href="/archives/6447eece.html"/>
      <url>/archives/6447eece.html</url>
      
        <content type="html"><![CDATA[<p><strong>适用场景</strong>：并发量大、数据量大的互联网业务</p><p><strong>一、基础规范</strong></p><p><strong>（1）必须使用InnoDB存储引擎</strong></p><p>解读：支持事务、行级锁、并发性能更好、CPU及内存缓存页优化使得资源利用率更高</p><p><strong>（2）必须使用UTF8字符集</strong></p><p>解读：万国码，无需转码，无乱码风险，节省空间</p><p><strong>（3）数据表、数据字段必须加入中文注释</strong></p><p>解读：N年后谁tm知道这个r1,r2,r3字段是干嘛的</p><p><strong>（4）禁止使用存储过程、视图、触发器、Event</strong></p><p>解读：高并发大数据的互联网业务，架构设计思路是“解放数据库CPU，将计算转移到服务层”，并发量大的情况下，这些功能很可能将数据库拖死，业务逻辑放到服务层具备更好的扩展性，能够轻易实现“增机器就加性能”。数据库擅长存储与索引，CPU计算还是上移吧</p><p><strong>（5）禁止存储大文件或者大照片</strong></p><p>解读：为何要让数据库做它不擅长的事情？大文件和照片存储在文件系统，数据库里存URI多好</p><p><strong>二、命名规范</strong></p><p><strong>（6）只允许使用内网域名，而不是ip连接数据库</strong></p><p><strong>（7）线上环境、开发环境、测试环境数据库内网域名遵循命名规范</strong></p><p>业务名称：xxx</p><p>线上环境：dj.xxx.db</p><p>开发环境：dj.xxx.rdb</p><p>测试环境：dj.xxx.tdb</p><p><strong>从库</strong>在名称后加-s标识，<strong>备库</strong>在名称后加-ss标识</p><p>线上从库：dj.xxx-s.db</p><p>线上备库：dj.xxx-sss.db</p><p><strong>（8）库名、表名、字段名：小写，下划线风格，不超过32个字符，必须见名知意，禁止拼音英文混用</strong></p><p><strong>（9）表名t_xxx，非唯一索引名idx_xxx，唯一索引名uniq_xxx</strong></p><p><strong>三、表设计规范</strong></p><p><strong>（10）单实例表数目必须小于500</strong></p><p><strong>（11）单表列数目必须小于30</strong></p><p><strong>（12）表必须有主键，例如自增主键</strong></p><p>解读：</p><p>a）主键递增，数据行写入可以提高插入性能，可以避免page分裂，减少表碎片提升空间和内存的使用</p><p>b）主键要选择较短的数据类型， Innodb引擎普通索引都会保存主键的值，较短的数据类型可以有效的减少索引的磁盘空间，提高索引的缓存效率</p><p>c） 无主键的表删除，在row模式的主从架构，会导致备库夯住</p><p><strong>（13）禁止使用外键，如果有外键完整性约束，需要应用程序控制</strong></p><p>解读：外键会导致表与表之间耦合，update与delete操作都会涉及相关联的表，十分影响sql 的性能，甚至会造成死锁。高并发情况下容易造成数据库性能，大数据高并发业务场景数据库使用以性能优先</p><p><strong>四、字段设计规范</strong></p><p><strong>（14）必须把字段定义为NOT NULL并且提供默认值</strong></p><p>解读：</p><p>a）null的列使索引/索引统计/值比较都更加复杂，对MySQL来说更难优化</p><p>b）null 这种类型MySQL内部需要进行特殊处理，增加数据库处理记录的复杂性；同等条件下，表中有较多空字段的时候，数据库的处理性能会降低很多</p><p>c）null值需要更多的存储空，无论是表还是索引中每行中的null的列都需要额外的空间来标识</p><p>d）对null 的处理时候，只能采用is null或is not null，而不能采用=、in、&lt;、&lt;&gt;、!=、not in这些操作符号。如：where name!=’shenjian’，如果存在name为null值的记录，查询结果就不会包含name为null值的记录</p><p><strong>（15）禁止使用TEXT、BLOB类型</strong></p><p>解读：会浪费更多的磁盘和内存空间，非必要的大量的大字段查询会淘汰掉热数据，导致内存命中率急剧降低，影响数据库性能</p><p><strong>（16）禁止使用小数存储货币</strong></p><p>解读：使用整数吧，小数容易导致钱对不上</p><p><strong>（17）必须使用varchar(20)存储手机号</strong></p><p>解读：</p><p>a）涉及到区号或者国家代号，可能出现+-()</p><p>b）手机号会去做数学运算么？</p><p>c）varchar可以支持模糊查询，例如：like“138%”</p><p><strong>（18）禁止使用ENUM，可使用TINYINT代替</strong></p><p>解读：</p><p>a）增加新的ENUM值要做DDL操作</p><p>b）ENUM的内部实际存储就是整数，你以为自己定义的是字符串？</p><p><strong>五、索引设计规范</strong></p><p><strong>（19）单表索引建议控制在5个以内</strong></p><p><strong>（20）单索引字段数不允许超过5个</strong></p><p>解读：字段超过5个时，实际已经起不到有效过滤数据的作用了</p><p><strong>（21）禁止在更新十分频繁、区分度不高的属性上建立索引</strong></p><p>解读：</p><p>a）更新会变更B+树，更新频繁的字段建立索引会大大降低数据库性能</p><p>b）“性别”这种区分度不大的属性，建立索引是没有什么意义的，不能有效过滤数据，性能与全表扫描类似</p><p><strong>（22）建立组合索引，必须把区分度高的字段放在前面</strong></p><p>解读：能够更加有效的过滤数据</p><p><strong>六、SQL使用规范</strong></p><p><strong>（23）禁止使用SELECT *，只获取必要的字段，需要显示说明列属性</strong></p><p>解读：</p><p>a）读取不需要的列会增加CPU、IO、NET消耗</p><p>b）不能有效的利用覆盖索引</p><p>c）使用SELECT *容易在增加或者删除字段后出现程序BUG</p><p><strong>（24）禁止使用INSERT INTO t_xxx VALUES(xxx)，必须显示指定插入的列属性</strong></p><p>解读：容易在增加或者删除字段后出现程序BUG</p><p><strong>（25）禁止使用属性隐式转换</strong></p><p>解读：SELECT uid FROM t_user WHERE phone=13812345678 会导致全表扫描，而不能命中phone索引，猜猜为什么？（这个线上问题不止出现过一次）</p><p><strong>（26）禁止在WHERE条件的属性上使用函数或者表达式</strong></p><p>解读：SELECT uid FROM t_user WHERE from_unixtime(day)&gt;=’2017-02-15’ 会导致全表扫描</p><p>正确的写法是：SELECT uid FROM t_user WHERE day&gt;= unix_timestamp(‘2017-02-15 00:00:00’)</p><p><strong>（27）禁止负向查询，以及%开头的模糊查询</strong></p><p>解读：</p><p>a）负向查询条件：NOT、!=、&lt;&gt;、!&lt;、!&gt;、NOT IN、NOT LIKE等，会导致全表扫描</p><p>b）%开头的模糊查询，会导致全表扫描</p><p><strong>（28）禁止大表使用JOIN查询，禁止大表使用子查询</strong></p><p>解读：会产生临时表，消耗较多内存与CPU，极大影响数据库性能</p><p><strong>（29）禁止使用OR条件，必须改为IN查询</strong></p><p>解读：旧版本Mysql的OR查询是不能命中索引的，即使能命中索引，为何要让数据库耗费更多的CPU帮助实施查询优化呢？</p><p><strong>（30）应用程序必须捕获SQL异常，并有相应处理</strong></p>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL service </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>指令获取已连接wife密码</title>
      <link href="/archives/adc79f08.html"/>
      <url>/archives/adc79f08.html</url>
      
        <content type="html"><![CDATA[<p>运行CMD（命令提示符）</p><p>然后输入命令“<strong>netsh wlan show profiles</strong>”，按回车，即能显示所有的已连接的wifi名称。</p><p>最后输入命令“netsh wlan show profiles name=”<strong>wifi名称</strong>“ key=clear” 回车.</p><blockquote><p>如果你能记住wifi名称，直接输入令“netsh wlan show profiles name=”<strong>wifi名称</strong>“ key=clear</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 指令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>衣物护理</title>
      <link href="/archives/a7b53799.html"/>
      <url>/archives/a7b53799.html</url>
      
        <content type="html"><![CDATA[<p>1.姨妈渍</p><blockquote><p>1.冷水浸泡3-5分钟</p><p>2.硫磺皂涂抹，搓洗干净</p></blockquote><p>2.油渍</p><blockquote><p>1.洗洁精2-3泵</p><p>2.牙膏</p><p>3.热水搓洗</p></blockquote><p>3.笔迹</p><blockquote><p>1.酒精浸湿</p><p>2.护手霜抹几下</p><p>3.倒上肥皂水</p><p>4.用指甲刮擦，刷掉泡泡</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习路线</title>
      <link href="/archives/78259bf9.html"/>
      <url>/archives/78259bf9.html</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>我是一个四非非科班，主要做智慧生物，农业的研究生。讲一讲对java后端和秋招的看法：</p><p>总结而言今年就是一坨狗屎。我是从六月份开始就秋招了。 （感觉像是夏招，很无语。投了几个月简历，可能有两百个厂了吧。）</p><p>经历的大厂只有字节提前批（挂），蔚来提前批（挂），携程（oc，非常过年了）。小厂根本简历都不过。中小厂还有两三个在流程中。我技术面好像没被挂过，但是综合排序我肯定比价垃圾。</p><p>排序挂。其实在九月份我已经摆烂了。题也不刷，八股文也不想看，技术也学不进去。感觉没意义，想着好多场笔试a了也没机会面试。但是不知道为啥携程让我进去了。</p><p>厦门电子学院视频：怒怼辅导员。破防了。   我笔试没挂。没面试</p><p>但是携程其实也不简单。四题笔试后面两题都很难，大约要做三题以上才能进去。</p><p>面试也是大厂风范，难的很，尤其一面，把我虐哭了。redis底层数据结构。ES排序底层。</p><p>二面倒是很不错，我就一点点没回答上来。</p><p>hr小姐姐贼漂亮，贼有耐心。</p><p>英语考试也不难（有些section难的很，普遍不难）。</p><p><strong>学习java的好处：</strong></p><ul><li><p>研究要用java。IoT。</p></li><li><p>Java后端开发是一个前景很好，工资很高的工作。</p></li></ul><p><strong>坏处：</strong></p><ul><li>学习难度其实不低，学习周期也很长。需要持之以恒的学习。而且很多非科班，科班都在学。找工作十有八九简历就被刷了。更别说后面的笔试，面试，排序等。</li><li>工作996。很容易被裁员。应届生有时候无法转正。 还有些容易被毁约。</li><li>我是2022年秋招，目前就拿到了携程的oc。今年的秋招大家肯定是知道，有史以来最难的一次。但是以后可能会更难。因为我是16年开始读的大学。毕业刚好疫情，研究生大量扩招（30%）。然而今年全球经济形势不好，疫情问题，国内互联网大环境不好等各方面原因导致企业hc大量缩减（70%）。感觉这个行业最近有点饱和。太难了。</li></ul><h1 id="JAVA基础（可能要一两个月）"><a href="#JAVA基础（可能要一两个月）" class="headerlink" title="JAVA基础（可能要一两个月）"></a>JAVA基础（可能要一两个月）</h1><h2 id="宋红康的java"><a href="#宋红康的java" class="headerlink" title="宋红康的java"></a><a href="https://www.bilibili.com/video/BV1Kb411W75N/?spm_id_from=333.337.search-card.all.click">宋红康的java</a></h2><ul><li>优点：比较全，比较深入和详细</li><li>缺点：废话比较多，有时候感觉听相声似的。学习周期较长。资料比较烂。</li></ul><p>或者可以看看黑马的，（有时候不太深入，资料顶呱呱）其他的。学完后一定要多练。</p><h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><p><strong>在学习完java的容器之后就可以学习了</strong>（23种，大部分挺重要）</p><p>可以巩固java基础的同时，学习设计模式。<strong>面试重点。开发重点</strong>。</p><p><a href="https://www.bilibili.com/video/BV1Np4y1z7BU/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">黑马的</a>：他的类图有些是画错的。这个很讨厌，需要看看弹幕自己改改。其他的很不错。课件也很清楚。</p><h1 id="数据结构与算法（一直学）"><a href="#数据结构与算法（一直学）" class="headerlink" title="数据结构与算法（一直学）"></a>数据结构与算法（一直学）</h1><p><strong>在学习完java的容器之后就可以学习了</strong></p><p>可以先进行书籍的阅读，或者视频的观看（视频没啥推荐的，做的都一般，可以看看<a href="https://www.bilibili.com/video/BV1E4411H73v/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">韩顺平</a>的入个门吧，但是他讲得不清不楚的），对数据结构与算法有个笼统的概念后再进行刷题。</p><p>这个是需要持之以恒，不畏困难，不断练习的。</p><p><strong>敲门砖</strong></p><p>笔试：很少有原题</p><p>面试：通常lc原题+他们内部一些，比较难的题。</p><h2 id="代码随想录"><a href="#代码随想录" class="headerlink" title="代码随想录"></a><a href="https://www.programmercarl.com/">代码随想录</a></h2><ul><li>优点：写的比较详细，并且很适合刚刷leetcode，或者刚学算法的同学们入门。还有各种语言的答案</li><li>缺点：缺少某些数据结构与算法的专栏。比如<strong>图</strong>。（其实图笔试面试也会考的）。</li></ul><h2 id="宫水姐的刷题笔记"><a href="#宫水姐的刷题笔记" class="headerlink" title="宫水姐的刷题笔记"></a><a href="https://github.com/SharingSource/LogicStack-LeetCode">宫水姐的刷题笔记</a></h2><ul><li>优点：把leetcode的很多题目进行分类，并且写了题解，公众号也有一些算法的博客，比如（dp，路径规划）。</li><li>缺点：她的题解和代码好多很简略，晦涩难懂，变量没有见文知意，有时候没有注释。需要有一定基础才能看得懂。</li></ul><h2 id="AcWing"><a href="#AcWing" class="headerlink" title="AcWing"></a><a href="https://www.acwing.com/">AcWing</a></h2><ul><li>优点：练习的好网站。不是核心代码模式（ acm，可以拿来练习笔试）。还有很多经典题目。（比如背包问题，这个lc没有典型背包问题）</li><li>缺点：没有很多学习资料。</li></ul><h2 id="Leetcode"><a href="#Leetcode" class="headerlink" title="Leetcode"></a><a href="https://leetcode.cn/">Leetcode</a></h2><ul><li>优点：核心代码模式（便于练习）。企业面试重点，很多企业都是原题，然后再出一些比较难的你没见过的题。有很多很好的书可以阅读。本人就是读上面的书学会的数据结构与算法。</li><li>缺点：核心代码模式（笔试一般不是核心代码）。借阅书需要钱，可以申请学生优惠，有些书写的一坨屎，但有些书写的很好，需要自己斟酌。</li></ul><h2 id="牛客"><a href="#牛客" class="headerlink" title="牛客"></a><a href="https://www.nowcoder.com/landing">牛客</a></h2><ul><li>优点：可以练大厂原题，找工作，找面经比较好。acm和核心代码都有，看是什么栏目的。</li><li>缺点：题目少。</li></ul><h2 id="codetop"><a href="#codetop" class="headerlink" title="codetop"></a><a href="https://codetop.cc/home">codetop</a></h2><ul><li>把企业的热点题排名了，秋招前必刷。</li></ul><h1 id="计算机网络（一定要学，没基础的话可能要花很久时间）"><a href="#计算机网络（一定要学，没基础的话可能要花很久时间）" class="headerlink" title="计算机网络（一定要学，没基础的话可能要花很久时间）"></a>计算机网络（一定要学，没基础的话可能要花很久时间）</h1><p>推荐可以java基础学完后学，也可以放到后面学，<strong>但是一定要学</strong></p><p>学习的话：<strong>看书+王道考研</strong>，有个笼统的概念。</p><p>然后可以背诵：<a href="https://xiaolincoding.com/">小林coding</a>，leetocde书。</p><h1 id="操作系统原理（一定要学，没基础的话可能要花很久时间）"><a href="#操作系统原理（一定要学，没基础的话可能要花很久时间）" class="headerlink" title="操作系统原理（一定要学，没基础的话可能要花很久时间）"></a>操作系统原理（一定要学，没基础的话可能要花很久时间）</h1><p>推荐可以java基础学完后学，也可以放到后面学，<strong>但是一定要学</strong></p><p>学习的话：<strong>看书+王道考研</strong>，有个笼统的概念。</p><p>然后可以背诵：<a href="https://xiaolincoding.com/">小林coding</a></p><h1 id="MySQL（或许是比Java更重要的语言）"><a href="#MySQL（或许是比Java更重要的语言）" class="headerlink" title="MySQL（或许是比Java更重要的语言）"></a>MySQL（或许是比Java更重要的语言）</h1><ul><li>需要学习基础的语法。某些厂商面试笔试会让你写一些简单的查询。（leetcode）（牛客）（多练）</li><li>需要学习底层的一些原理。（<strong>重中之重</strong>）面试必问。尤其是SQL的事务底层，优化，索引，锁，MVCC，日志等等。（看不懂没事，学了就懂了）</li></ul><p><a href="https://www.bilibili.com/video/BV1iq4y1u7vj/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">宋红康的MySQL</a></p><ul><li>优点：面面俱到。</li><li>缺点：资料不全，废话多。</li></ul><p><a href="https://www.bilibili.com/video/BV1Kr4y1i7ru/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">黑马的MySQL</a>（推荐）</p><ul><li>优点：言简意赅，快速学习，有完整pdf资料。</li><li>缺点：有些不是很深入，需要额外学习，但是知识点都用。这个需要自己找资料补充。</li></ul><h1 id="JavaWeb（食之无味，弃之可惜）"><a href="#JavaWeb（食之无味，弃之可惜）" class="headerlink" title="JavaWeb（食之无味，弃之可惜）"></a>JavaWeb（食之无味，弃之可惜）</h1><p>Javaweb东西纷繁复杂，但是不难。主要是通过JavaWeb让我们了解前端后端是干嘛的。</p><p>前端：html，css，Jsp，JavaScript等。现在新版的视频可能还会教vue啥的组件。（了解即可）</p><p>后端：JavaEE和Web的一些组件和知识点（这个是重点，比如什么是Servlet，Session，Cookie），Resuful风格。</p><p>学习的话，可以找尚硅谷或者黑马最新的<strong>Javaweb</strong>看看。</p><p>我当时看的都是很老的。没啥推荐的。抓住重点，跟着视频把小项目做了。快速过。</p><h1 id="JDBC-MyBatis"><a href="#JDBC-MyBatis" class="headerlink" title="JDBC+MyBatis"></a>JDBC+MyBatis</h1><h2 id="JDBC（食之无味，弃之可惜）"><a href="#JDBC（食之无味，弃之可惜）" class="headerlink" title="JDBC（食之无味，弃之可惜）"></a>JDBC（食之无味，弃之可惜）</h2><p>JDBC是持久层的技术，没有被框架所封装，用起来比较复杂。我认为还是需要学习一下的，不是面试重点。快速过。快速过。</p><p><a href="https://www.bilibili.com/video/BV1eJ411c7rf/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">宋红康的JDBC</a></p><h2 id="MyBaits"><a href="#MyBaits" class="headerlink" title="MyBaits"></a>MyBaits</h2><p>持久层框架，帮我们封装好了JDBC，屏蔽了底层细节。通常和Spring搭配，是后端的坚实基础。不是面试重点。</p><p>我当时看的都比较老了。推荐可以看看<a href="https://www.bilibili.com/video/BV1VP4y1c7j7/?spm_id_from=333.337.search-card.all.click">尚硅谷最新的视频</a>。或者看看<a href="https://www.bilibili.com/video/BV1Fi4y1S7ix/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">黑马的一站式视频</a>。新版一般都还行。</p><h1 id="Spring-SpringMVC-SpringBoot"><a href="#Spring-SpringMVC-SpringBoot" class="headerlink" title="Spring+SpringMVC+SpringBoot"></a>Spring+SpringMVC+SpringBoot</h1><ul><li><p>Spring是我们后端的核心重点，<strong>面试必问</strong>，其IOC, AOP，注解开发，事务传播等的特性需要我们尤其掌握。并且它还有很多很多别的知识点。重中之重。（三级缓存）。</p><ul><li>可以看看尚硅谷或者黑马一站式视频</li></ul></li><li><p>SpringMVC就是Spring为我们提供的M<strong>V</strong>C Web框架，但是现在前后端分离是趋势，<strong>View</strong>这个也不太会出现在后端了。（面试问的不多，一次请求 mvc处理的）</p><ul><li>可以看看尚硅谷或者黑马一站式视频</li></ul></li><li><p>SpringBoot就是Spring的增强版，开箱即用的Spring，可以快速地搭建一个Spring的Web项目，自带容器（tomcat以及其他，可以更换），提供很多starter，可以自动装配等。需要会用。（问的不多）</p><ul><li><p>有些底层需要知道。面试会问如自动装配原理，SpringBoot启动原理，如何自己写一个starter等。</p></li><li><p><a href="https://www.bilibili.com/video/BV15b4y1a7yG/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">黑马的</a>（推荐）</p></li><li><p><a href="https://www.bilibili.com/video/BV19K4y1L7MT/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">尚硅谷雷神</a></p><ul><li>雷神讲的呢，比较乱，我不太喜欢。虽然他技术应该很好。</li></ul></li></ul></li></ul><h1 id="一些其他技术"><a href="#一些其他技术" class="headerlink" title="一些其他技术"></a>一些其他技术</h1><p>1.Git/GitHub：用于管理项目。面试不会问。但是自己做项目或者进公司必须要会。（看<a href="https://www.bilibili.com/video/BV1MU4y1Y7h5/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">黑马</a>或者<a href="https://www.bilibili.com/video/BV1vy4y1s7k6/?spm_id_from=333.337.search-card.all.click">尚硅谷</a>）</p><p>2.Linux：会基本的命令和操作。Linux内核开发其实Java考察的不多。可以看看小林coding的面经。<a href="https://www.bilibili.com/video/BV17T4y1F7WV?p=47&vd_source=9d12de043564864c043c95536122f255">Shell脚本</a>学有余力可以学习。是个加分项。   可以看看<a href="https://www.bilibili.com/video/BV1Sv411r7vd/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">老韩的</a>。（重中之重）</p><p>3.<a href="https://www.bilibili.com/video/BV1gr4y1U7CY?p=9&vd_source=9d12de043564864c043c95536122f255">Dokcer</a>：容器技术。可以快速地在Linux中搭建环境，和部署项目。面试不会问。但是自己做项目或者进公司必须要会。</p><h1 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h1><h2 id="Redis（重中之重）"><a href="#Redis（重中之重）" class="headerlink" title="Redis（重中之重）"></a>Redis（重中之重）</h2><p>Redis作为NoSQL，充分利用Ram，快速高效，可分布式。常用于作为缓存，分布式ID，分布式锁等。</p><p><a href="https://www.bilibili.com/video/BV1cr4y1671t/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">黑马的</a></p><p>特别牛逼的一套课程。无论是基础还是应用还是底层都面面俱到。好好看看Redis数据结构以及相应的底层，分布式锁等面试必问。</p><p>学有余力可以学习一下<strong>lua脚本</strong>。在<strong>Redis</strong>中还是很有用的。（加分项）</p><h2 id="Mongdb数据库"><a href="#Mongdb数据库" class="headerlink" title="Mongdb数据库"></a>Mongdb数据库</h2><p>文档型数据库，做项目也会用得到。面试问的少。学习比较快。推荐自己看看视频学一学，会用应该就行。</p><h2 id="MQ系列（重中之重）"><a href="#MQ系列（重中之重）" class="headerlink" title="MQ系列（重中之重）"></a>MQ系列（重中之重）</h2><h3 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h3><p>作为一个学生，我推荐学这个。因为资料多。相对来讲各方面也不错。延迟低使它的特点。</p><p><a href="https://www.bilibili.com/video/BV1LQ4y127n4/?spm_id_from=333.337.search-card.all.click">黑马的SpringCloud教程中涵盖了</a>。也是比较全面的。推荐</p><h3 id="Kafka"><a href="#Kafka" class="headerlink" title="Kafka"></a>Kafka</h3><p>大数据常用，非大数据也用。学有余力可以学一学。优先级排在阿里的MQ前面。</p><h3 id="RocketMQ"><a href="#RocketMQ" class="headerlink" title="RocketMQ"></a>RocketMQ</h3><p>阿里的，学有余力可以学。（双十一）</p><h2 id="ELK"><a href="#ELK" class="headerlink" title="ELK"></a>ELK</h2><p>ELK技术栈包括：ElasticSearch + Kibana + Logstash</p><h3 id="ElasticSearch"><a href="#ElasticSearch" class="headerlink" title="ElasticSearch"></a>ElasticSearch</h3><p>搜索引擎，多用于全文匹配。弥补MySQL模糊匹配，全文匹配的劣势。<a href="https://www.bilibili.com/video/BV1LQ4y127n4/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">黑马的Cloud视频</a>也有讲，但那只是会用。很多底层面试会问。<strong>比如查询时候排序的底层公式</strong>。所以需要看看<a href="https://www.bilibili.com/video/BV1hh411D7sb/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">尚硅谷的视频</a>。</p><h3 id="Kibana"><a href="#Kibana" class="headerlink" title="Kibana"></a>Kibana</h3><p>可视化界面，可以对我们的ES进行监控，测试等。</p><h3 id="Logstash"><a href="#Logstash" class="headerlink" title="Logstash"></a>Logstash</h3><p>日志收集，可以将收集过来的日志放到ES中，用Kibana去看。</p><p>一个项目，AOP可以日志。</p><p>对于ELK日志系统我推荐自己做一个AOP+ELK的日志系统。可以模仿<a href="https://github.com/macrozheng/mall">mall</a>的日志系统。</p><h1 id="一个好的项目"><a href="#一个好的项目" class="headerlink" title="一个好的项目"></a>一个好的项目</h1><p>你也可以找黑马尚硅谷的项目，作为练手。但是很难作为一个面试项目写上去。</p><p>也可以找github的项目，作为练手。有时候可以作为一个面试项目写上去。（<a href="https://javaguide.cn/">JavaGuide</a>有一些项目介绍。Github的项目其实还是得靠大家自己去挖掘和检索，并且看文档，看源码硬啃）</p><p>建议：在原有的项目基础上，可以添加一些组件，一些功能，一些优化，一些大厂的解决方案。从测试到部署最好都自己实践一遍。面试可以准备一个造轮子的项目（偏底层）+一个web后端的项目（必须要有）（这个后端最好能部署，最好有cloud版本）。</p><h1 id="SpringCloud（面试我都没人问我，但是一定要学）"><a href="#SpringCloud（面试我都没人问我，但是一定要学）" class="headerlink" title="SpringCloud（面试我都没人问我，但是一定要学）"></a>SpringCloud（面试我都没人问我，但是一定要学）</h1><p><strong>分布式微服务是</strong>现在中厂，大厂主流。其底层原理纷繁复杂。</p><ul><li>分布式：简单来讲就是把你的项目分布到各个服务器，充分利用多个电脑。<ul><li>如果喜欢分布式，学有余力可以看看<a href="https://www.bilibili.com/video/BV1R7411t71W/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">MIT6.824</a>（需要学习<strong>golang</strong>，英语牛逼，可以看的懂论文）</li></ul></li><li>微服务：简单来讲就是把你的项目中的好多业务拆分成一个个小业务，便于开发，一个团队只用维护一个业务，还能单独部署。</li><li>一个Cloud项目：一定要自己写一个。可以是之前boot项目的cloud版。</li></ul><p><a href="https://www.bilibili.com/video/BV1LQ4y127n4/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">强推黑马的这个老师，我不知道他叫啥，资料齐全，很深入，没有废话。</a></p><h1 id="SpringSecurity-Oauth2（有点复杂，学有余力可以看看）"><a href="#SpringSecurity-Oauth2（有点复杂，学有余力可以看看）" class="headerlink" title="SpringSecurity+Oauth2（有点复杂，学有余力可以看看）"></a>SpringSecurity+Oauth2（有点复杂，学有余力可以看看）</h1><p>认证和授权。我觉得这个框架很难用，主要是资料也不多。网上视频也一般。需要自己研究。研究会了就好了。</p><p><a href="https://www.bilibili.com/video/BV1VE411h7aL/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">黑马的</a></p><p>而且建议去github找一些开源后台管理项目。看看他们怎么用的。这样就学的好一点，快一点。比如<a href="https://github.com/macrozheng/mall">mall</a>。</p><h1 id="Java一些核心技术"><a href="#Java一些核心技术" class="headerlink" title="Java一些核心技术"></a>Java一些核心技术</h1><h2 id="JVM（重中之重）"><a href="#JVM（重中之重）" class="headerlink" title="JVM（重中之重）"></a>JVM（重中之重）</h2><p>Java虚拟机。是Java为什么这么牛逼的原因。一门好的语言其实不一定是因为它的语法啥的。Java这么牛肯定是因为JVM+很好的社区。  面试重中之重。</p><ul><li>可以看<a href="https://www.bilibili.com/video/BV1PJ411n7xZ/?spm_id_from=333.337.search-card.all.click">宋红康的</a>，还是比较啰嗦长，没有什么文档，但是比较全可以先只看 p01-p203  ，p266-p301。其他p实操。</li><li><a href="https://www.bilibili.com/video/BV1yE411Z7AP/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">黑马的</a>，应该是满老师的。他的Netty 和 JUC也很不错。没什么废话，文档齐全。我没看过他的JVM，但是很多人推荐。学的块。</li><li>看书：深入理解java虚拟机  周志明老师（推荐一定看，我没看过。我准备之后看看）</li></ul><h2 id="JUC（重中之重）"><a href="#JUC（重中之重）" class="headerlink" title="JUC（重中之重）"></a>JUC（重中之重）</h2><p>Java并发包。面试重中之重。</p><ul><li><a href="https://www.bilibili.com/video/BV16J411h7Rd/?spm_id_from=333.337.search-card.all.click">黑马的</a>，特别深入并且全程高能无废话。文档清晰。但是缺点就是没有<strong>异步编程</strong>，需要自行学习。尚硅谷，javaguide异步编程。</li><li>刷lc的多线程题。  哲学家问题。读写者。（有时候会问的）</li></ul><h2 id="Netty（加分项）"><a href="#Netty（加分项）" class="headerlink" title="Netty（加分项）"></a>Netty（加分项）</h2><p>网络编程技术。学有余力可以看看Netty。但是Java的<strong>IO模型一定要会</strong>。AIO BIO <strong>NIO</strong></p><ul><li>先看看<a href="https://www.bilibili.com/video/BV1gz4y1C7RK/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">IO模型</a>，然后看看<a href="https://www.bilibili.com/video/BV1py4y1E7oA/?spm_id_from=333.337.search-card.all.click&vd_source=9d12de043564864c043c95536122f255">Netty</a>，最后做一个<a href="https://github.com/Snailclimb/guide-rpc-framework">RPC项目</a>。（可以写到简历上）有点点烂大街。</li></ul><h1 id="一些小推荐"><a href="#一些小推荐" class="headerlink" title="一些小推荐"></a>一些小推荐</h1><p>（不太全，但是作为一个开发人员，要增加自己的检索能力，多找资料）</p><p><a href="https://csdiy.wiki/%E5%B9%B6%E8%A1%8C%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/MIT6.824/">CS自学指南</a>（这个嘛。大家可以尝试一下。都是美国课程，很牛逼，偏向基础构架）</p><p><a href="https://javaguide.cn/">Javaguide</a>（java第一星）</p><p><a href="https://xiaolincoding.com/">小林coding</a>（java三大天书 顶尖八股）</p><p><a href="https://tech.meituan.com/">美团技术团队</a>（微信上的腾讯技术团队等大厂技术团队帖子多看看，<strong>可以放到项目里的</strong>。）</p><h1 id="一些小建议"><a href="#一些小建议" class="headerlink" title="一些小建议"></a>一些小建议</h1><ul><li>八股文肯定要背的，但是推荐一路学下来，自己记笔记后，参照javaguide或者网上一些八股文整理整理。其实很多视频教程都是八股文的考点。（我有将近二十万字的笔记，不过没整理好，如果有空整理好，我会分享给大家吧）。</li><li>算法一定要一直练。（秋招的时候，我有<strong>650</strong>题左右）。敲门砖。（分门别类的做，也要记笔记，热点题多刷，我很多题目做了好几遍，都上交了几十遍了）。  </li><li>实习特别重要。一定要去实习，并且是后端。（我没有实习，妈的全靠笔试面试硬抗，搞得我几个月下来没oc，很绝望）</li><li>项目很重要。一个或多个自己或者工作中的项目很重要。最好能部署，可以访问到。并且增加了很多自己的想法，可以和面试官唠嗑。</li></ul><h1 id="K8S等云原生技术（我没学，学有余力可以学一学）"><a href="#K8S等云原生技术（我没学，学有余力可以学一学）" class="headerlink" title="K8S等云原生技术（我没学，学有余力可以学一学）"></a>K8S等云原生技术（我没学，学有余力可以学一学）</h1><p>可以看看<a href="https://www.bilibili.com/video/BV13Q4y1C7hS/?spm_id_from=333.337.search-card.all.click">尚硅谷的视频</a></p><h1 id="一些大数据相关知识"><a href="#一些大数据相关知识" class="headerlink" title="一些大数据相关知识"></a>一些大数据相关知识</h1><p>我没学，但是很多岗位会要求，面试也会问问。可以学一学，这里不多做介绍。</p>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目详情</title>
      <link href="/archives/97a3119f.html"/>
      <url>/archives/97a3119f.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231194034.png" alt="img"></p><p> <img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231194113.png" alt="img"></p><p>　　2020-06-10更新</p><p>　　之前调整过前端文件结构布局，现在重新更新说明一下</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231194215.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目详情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目介绍经验贴</title>
      <link href="/archives/de43521.html"/>
      <url>/archives/de43521.html</url>
      
        <content type="html"><![CDATA[<p><strong>不要乱介绍项目经验！小心扣分！</strong></p><p>放弃很简单呀，一句话就完事。但是要做成点事可太难了，主要坚持，不断努力就有希望。也不是鸡汤，道理就是这个道理。成功说起来容易，做起来难。</p><p>没有谁是容易的，你看我吧，早上5点起床，忙碌一天，晚上回家做饭，9点之前陪小孩学习、洗刷、哄小孩睡觉。10点到11点搞下文章。然后睡觉。</p><p>生活都是为了碎银几两。这就是生活的真相：</p><p>**真正的英雄主义是在看清生活的本质之后,依然热爱它-**<strong>罗曼罗兰</strong></p><h2 id="1、在面试前准备项目描述，别害怕，因为面试官什么都不知道"><a href="#1、在面试前准备项目描述，别害怕，因为面试官什么都不知道" class="headerlink" title="1、在面试前准备项目描述，别害怕，因为面试官什么都不知道"></a><strong>1、在面试前准备项目描述，别害怕，因为面试官什么都不知道</strong></h2><p>面试官是人，不是神，拿到你的简历的时候，是没法核实你的项目细节的。</p><p>更何况，你做的项目是以月为单位算的，而面试官最多用 30 分钟来从你的简历上了解你的项目经验，所以你对项目的熟悉程度要远远超过面试官，所以你一点也不用紧张。</p><blockquote><p>“</p><p>适当包装是个很正常的事情，没必要有心理包袱，有几个企业能把百千万级并发项目放给在校生独自做？</p><p>”</p></blockquote><p>既然面试官无法了解你的底细，那么他们怎么来验证你的项目经验和技术？下面总结了一些常用的提问方式。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231194418.png" alt="图片"></p><h2 id="2、准备项目的各种细节，一旦被问倒了，就说明你没做过"><a href="#2、准备项目的各种细节，一旦被问倒了，就说明你没做过" class="headerlink" title="2、准备项目的各种细节，一旦被问倒了，就说明你没做过"></a><strong>2、准备项目的各种细节，一旦被问倒了，就说明你没做过</strong></h2><p>一般来说，在面试前，大家应当准备项目描述的说辞，自信些，因为这部分你说了算，流利些，因为你经过充分准备后，可以知道你要说些什么。而且这些是你实际的项目经验（不是学习经验，也不是培训经验），那么一旦让面试官感觉你都说不上来，那么可信度就很低了。</p><p>不少人是拘泥于“项目里做了什么业务，以及代码实现的细节”，这就相当于把后继提问权直接交给面试官。下表列出了一些不好的回答方式。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231194450.png" alt="图片"></p><p>在避免上述不好的回答的同时，大家可以按下表所给出的要素准备项目介绍</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231194639.png" alt="图片"></p><p>面试前，你一定要准备，一定要有自信，但也要避免如下的一些情况。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231194722.png" alt="图片"></p><h2 id="3、不露痕迹地说出面试官爱听的话"><a href="#3、不露痕迹地说出面试官爱听的话" class="headerlink" title="3、不露痕迹地说出面试官爱听的话"></a><strong>3、不露痕迹地说出面试官爱听的话</strong></h2><p>在项目介绍的时候（当然包括后继的面试），面试官其实很想要听一些关键点，只要你说出来，而且回答相关问题比较好，这绝对是加分项。我在面试别人的时候，一旦这些关键点得到确认，我是绝对会在评语上加上一笔的。</p><p>下面列些面试官爱听的关键点和对应的说辞。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231194814.png" alt="图片"></p><h2 id="4、一定要主动，面试官没有义务挖掘你的亮点"><a href="#4、一定要主动，面试官没有义务挖掘你的亮点" class="headerlink" title="4、一定要主动，面试官没有义务挖掘你的亮点"></a><strong>4、一定要主动，面试官没有义务挖掘你的亮点</strong></h2><p>面试时，面试官往往会特别提问：你项目里有什么亮点？或者你作为应聘者，有什么其他加分项能帮你成功应聘到这个岗位。即使这样问，还有些人直接说没有。</p><p>我这样问已经是处于角色错位了，作为面试者，应当主动说出，而不是等着问，但请注意，说的时候要有技巧，找机会说，通常是找一些开放性的问题说。</p><p>比如：在这个项目里用到了什么技术？你除了说一些基本的技术，比如 Spring MVC，Hibernate，还有数据库方面的常规技术时，还得说，用到了 Java 内存管理，这样能减少对虚拟机内存的压力，或者说用到了大数据处理技术等。</p><p>也就是说，得找一切机会说出你拿得出手的而且当前也非常热门的技术。</p><p><strong>记住：面试官不是你的亲戚，面试官很忙，能挖掘出你的亮点的面试官很少，而说出你的亮点是你的义务。</strong></p><p>我在面试别人过程中，根据不同的情况一般会给出如下的评语。</p><ul><li><p>回答很简答，但回答里能证明出他对框架等技术确实是做过，我会在评语里些“对框架了解一般，不知道一些深层次的知识（我都问了多次了你都回答很简答，那么对不起了，我只能这么写。</p><p>或许你确实技术很强，那也没办法，谁让你不肯说呢？）”，同时会加一句“表达能力很一般，沟通能力不强”，这样即使他通过技术面试，后面的面试他也会很吃力。</p></li><li><p>回答很简单，通过回答我没法验证他是在项目里做过这个技术，还是仅仅在平时学习中学过这个技术。</p><p>我就会写“在简历中说用过 XX 技术，但对某些细节说不上来，没法看出在项目里用到这个技术”，如果这个技术是职务必需点，那么他通过面试的可能性就非常小。</p></li><li><p>回答很简单，而且只通过嗯啊之类的虚词回答，经过提醒还这样，我会敷衍几句结束面试，直接写“技术很薄弱，没法通过面试”。</p><p>虽然通过回答能很好地展示自己的技能，但逻辑调理不清晰，那么我会让他通过技术面试，但会写上“技能很好，但表达能力一般（或有待提高），请后继面试经理斟酌”。这样通过后继综合面试的机会就一般了，毕竟综合面试会着重考察表达能力交往能力等非技术因素。</p></li></ul><p>不管怎样，一旦回答简单，不主动说出你的擅长点，或没有条理很清楚地说出你的亮点，就算我让你通过面试，也不会写上“框架细节了解比较深，数据库应用比较熟练”等之类的好评语，你即使通过技术和后面的综合面试，工资也是比较低的。</p><h2 id="5、一旦有低级错误，可能会直接出局"><a href="#5、一旦有低级错误，可能会直接出局" class="headerlink" title="5、一旦有低级错误，可能会直接出局"></a><strong>5、一旦有低级错误，可能会直接出局</strong></h2><p>面试过程中有些方面你是绝对不能出错，所以你在准备过程中需要尤其注意如下的因素。下面列了些会导致你直接出局的错误回答。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231194900.png" alt="图片"></p><h2 id="6、引导篇：准备些加分点，在介绍时有意提到，但别说全"><a href="#6、引导篇：准备些加分点，在介绍时有意提到，但别说全" class="headerlink" title="6、引导篇：准备些加分点，在介绍时有意提到，但别说全"></a><strong>6、引导篇：准备些加分点，在介绍时有意提到，但别说全</strong></h2><p>在做项目介绍的时候，你可以穿插说出一些你的亮点，但请记得，不论在介绍项目还是在回答问题，你当前的职责不是说明亮点而是介绍项目，一旦你详细说，可能会让面试官感觉你跑题了。</p><blockquote><p>“</p><p>引导 or 扩展太多某些面试官甚至会觉得烦。。。。。。</p><p>”</p></blockquote><p>所以这时你可以一笔带过，比如你可以说，“我们的项目对数据要求比较大，忙的时候平均每小时要处理几十万条数据”，这样就可以把面试官引入“大数据”的方向。</p><p>你在面试前可以根据职位的需求，准备好这种“一笔带过”的话。比如这个职位的需求点是 Spring MVC 框架，大数据高并发，要有数据库调优经验，那么介绍以往项目时，你就最好突出这些方面你的实际技能。</p><h2 id="7、你可以引导，但不能自说自话"><a href="#7、你可以引导，但不能自说自话" class="headerlink" title="7、你可以引导，但不能自说自话"></a><strong>7、你可以引导，但不能自说自话</strong></h2><p>如果你真的想应聘的话，一定要事先准备，只要别露出太明显的痕迹，面试官不会写上“似乎有准备，没法考察真实技能”这种话，更何况未必每个面试官都能感觉出你准备过。但你不能凭着有准备而太强势，毕竟面试是面试官主导的。</p><p>有时说话太多，主动扩展，问他数据库用什么，不仅回答数据库是什么，自己做了什么，甚至顺便会把大数据处理技术都说出来。其实可能会过犹不及，面试官就会重点考察你说的每个细节，因为怀疑你说的都是你从网上看的，而不是你项目中用到的。</p><p>不过话说回来，他如果仅仅说，数据量比较大，但点到为止，不继续说后面的话，我就会深入去问，他自然有机会表达。同时请注意，一般在面试过程中，<strong>一旦你亮出加分点，但面试官没接嘴，这个加分点可能就不是项目必备的，也不是他所关注的，当前你就可以别再说了，或者等到你提问题的时候再说</strong>。</p>]]></content>
      
      
      <categories>
          
          <category> 毕业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目介绍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洗稿</title>
      <link href="/archives/25a2702c.html"/>
      <url>/archives/25a2702c.html</url>
      
        <content type="html"><![CDATA[<p>其实用处比较有限，因为单纯的同意词替换很难达到表达准确，正确的做法是：对段落或单句在熟悉并理解的基础上进行同意复述，也就是俗称的洗稿；更具有操作性的方法是：将原文翻译成外国语（这里建议是小语种，但不能过于冷门，俄语，德语或日语较好），再从外国语翻译回中文（不建议多次翻译），再人工将翻译过后蹩脚的全文重新整理一次，基本上重复率会低很多。<br>另外，亲测知网和万方的查重算法，一般只要黏贴复制都能被识别，即使部分词意进行了替换仍能被识别，但是段落同意替换则基本不会被识别，所以最好的查重的手段是，熟悉若干篇论文或专利后，用自己的话进行复述，也就是俗称的洗稿，是相对轻松可靠的方法</p>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕业设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站部署</title>
      <link href="/archives/b9f5adde.html"/>
      <url>/archives/b9f5adde.html</url>
      
        <content type="html"><![CDATA[<h1 id="一个网站部署的完整流程（包教包会）"><a href="#一个网站部署的完整流程（包教包会）" class="headerlink" title="一个网站部署的完整流程（包教包会）"></a>一个网站部署的完整流程（包教包会）</h1><ul><li>备案</li><li>解析</li><li>一丶服务器</li><li>二丶域名</li><li>三丶上传网站源码</li></ul><h2 id="备案"><a href="#备案" class="headerlink" title="备案"></a><strong>备案</strong></h2><p>所谓的网站备案其实是网站的ICP备案的简称，国家相关规定如下：《互联网信息服务管理办法》指出互联网信息服务分为经营性和非经营性两类。国家对经营性互联网信息服务实行许可制度；对非经营性互联网信息服务实行备案制度。未取得许可或者未履行备案手续的，不得从事互联网信息服务。</p><p>一般来说，备案指的是域名进行备案，而不是服务器进行备案。一个网站是否备案，是取决于网站所用空间是国内还是国外的. 如果是国内主机，网站域名需要备案，才能通过域名访问到你的网站。</p><p>如果是国外主机，网站域名是不用备案的，也可以通过域名访问。</p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a><strong>解析</strong></h2><p>域名解析是把域名指向网站空间IP，让人们通过注册的域名可以方便地访问到网站的一种服务。IP地址是网络上标识站点的数字地址，为了方便记忆，采用域名来代替IP地址标识站点地址。域名解析就是域名到IP地址的转换过程。域名的解析工作由DNS服务器完成。</p><p>了解完这些之后，我们可以进行实际操作。</p><h2 id="一丶服务器"><a href="#一丶服务器" class="headerlink" title="一丶服务器"></a><strong>一丶服务器</strong></h2><p>服务器是提供计算服务器、网络服务的一种设备。当我们访问一个网站时，点击这个网站会发出访问请求，服务器会响应服务请求，并相对应地进行处理，反馈相对应的数据。</p><p>如果我们想要把自己的网站让别人也能看到，那就必须要放到服务器上。而比较常见的分为个人服务器，企业级服务器。一般我们需要的是个人服务器。现在人们用的比较多的服务器有：阿里云，腾讯云，百度云等。在这里我以阿里云为例进行讲解（其他几款流程也大致相同）。</p><h4 id="1-到阿里云官网挑选购买服务器。"><a href="#1-到阿里云官网挑选购买服务器。" class="headerlink" title="1. 到阿里云官网挑选购买服务器。"></a>1. 到阿里云官网挑选购买服务器。</h4><p>注册什么的有支付宝一般没什么问题，略过</p><p>对于小白来说，个人服务器一般有两种选择，一种是云服务器 ECS ，一种是轻量应用服务器。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231195355.png"></p><p>ECS云服务器</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231195423.png" alt="图片"></p><p>轻量应用服务器</p><p>两者区别不大，前者类似于纯净版系统，需要有一定的运维技术，配置起来较为繁琐；后者类似于基础版系统，易用易上手。在性能上，后者将系统盘升级为SSD，容量减小一半，提升了性能。相同CPU，在内存相同的情况下，单来比较磁盘读写性能,可见速度的提升明显。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200103.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200140.png" alt="图片"></p><p>购买界面</p><blockquote><p>注意：在阿里云需要购买3个月以上的服务器才可以申请备案（ECS云服务器中按量付费购买的服务器也不可以申请备案），需要备案的小白要注意了。</p></blockquote><p>当然，如果你还是学生的话，阿里云有“云翼扶持计划”。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200213.png" alt="图片"></p><p>购买成功后，我们需要进行服务器的配置。</p><h4 id="2-配置属于自己的服务器。"><a href="#2-配置属于自己的服务器。" class="headerlink" title="2. 配置属于自己的服务器。"></a>2. 配置属于自己的服务器。</h4><p>当你购买了服务器后，就可以到右上角的控制台去查看。</p><p>这里是你自己的控制台，你所购买的产品都可以在这里查看。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200243.png" alt="图片"></p><p>点击“远程连接”后</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200309.png" alt="1"></p><p>因为进入控制台后，大部分的操作都需要“管理员权限”，所以首先先切换成“管理员”。输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo su root</span><br></pre></td></tr></table></figure><p>这里的“root”是默认管理员的名字，需要看自己管理员的名字进行更改。</p><p>接下来进入到usr文件夹下，输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr</span><br></pre></td></tr></table></figure><blockquote><p>注意，这里cd /usr中间是有一个空格的，否则无法进入。</p></blockquote><p>在usr文件夹下创建一个文件夹，例如：java，用来存放后面用到的tomcat和java的jdk包。输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir java</span><br></pre></td></tr></table></figure><p>再输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure><p>就可以查看到usr下所有的文件夹，以及java文件夹是否创建成功。</p><p>因为涉及到jdk,tomcat的安装和解压，为了方便操作，我们需要下载一个软件——xftp（或者filezilla也行），顺便下载java的jdk压缩包，和tomcat的压缩包，具体的可以去官网下载，不细说。</p><p>安装成功后打开xftp，新建会话。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200355.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200447.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200515.png" alt="图片"></p><p>确认之后即可。</p><p>将下载好的JDK和tomcat的压缩包复制粘贴到xftp中右侧的<code>usr/java</code>目录下。（这里我已经粘贴解压好，本来是空的）。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200540.png" alt="图片"></p><p>然后回到命令行控制台，查看一下文件夹是否成功粘贴到java文件夹下。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200601.png" alt="图片"></p><p>成功后可以解压这两个压缩包在此目录下，分别输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -xzvf  jdk-xxxxx.tar.gz</span><br><span class="line"></span><br><span class="line">tar -xzvf apache-tomcat-xxxxxx.tar.gz</span><br></pre></td></tr></table></figure><p>xxxx是你自己下载的压缩包对应名字。</p><p>如果觉得解压后的文件夹名字太长，需要更改，输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv 更改前名字 更改后名字</span><br></pre></td></tr></table></figure><p>成功后如下图</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200619.png" alt="图片"></p><p>然后开始配置一些必需变量，输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200639.png" alt="图片"></p><p>这里需要在里面添加环境变量，直接在控制台输入。当然，为了方便，可以从xftp中找到profile文件导出，修改后再导入覆盖。</p><p>右键导出，在结尾增加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JAVA_HOME=/usr/java/你的jdk文件夹名</span><br><span class="line">PATH=/usr/java/你的jdk文件夹名/bin:$PATH</span><br><span class="line">CLASSPATH=.:/usr/java/你的jdk文件夹名/lib/dt.jar:/usr/java/你的jdk文件夹名/lib/tools.jar</span><br><span class="line">CATALINA_HOME=/usr/java/你的tomcat文件夹名</span><br><span class="line">export JAVA_HOME PATH CLASSPATH CATALINA_HOME</span><br></pre></td></tr></table></figure><p>修改成功导入即可。</p><p>然后在控制台启动配置，输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>然后再输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">javac</span><br></pre></td></tr></table></figure><p>如果显示下图，去启动tomcat。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200704.png" alt="图片"></p><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/java/你的tomcat文件夹名/bin</span><br></pre></td></tr></table></figure><p>启动tomcat：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><p>如果也出现如下图，恭喜你，你的服务器已经配置成功！！</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200732.png" alt="图片"></p><h2 id="二丶域名"><a href="#二丶域名" class="headerlink" title="二丶域名"></a><strong>二丶域名</strong></h2><p>域名，是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位。</p><p>IP地址，是Internet主机的作为路由寻址用的数字型标识，人不容易记忆，因而产生了域名这一种字符型标识。</p><p>通俗的说域名就相当于一个家庭的门牌号码，别人通过这个号码可以很容易的找到你。这也意味着在全世界没有重复的域名。当然，此时没有域名也可以使用IP地址来访问你的网站。</p><h4 id="1-购买属于自己的域名。"><a href="#1-购买属于自己的域名。" class="headerlink" title="1.购买属于自己的域名。"></a>1.购买属于自己的域名。</h4><p>可以到阿里云官网进行域名购买，购买前需要先查询你想购买的域名名字是否已经被人注册。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200755.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200821.png" alt="图片"></p><p>选择自己心仪的域名进行注册购买。</p><h4 id="2-域名的配置。"><a href="#2-域名的配置。" class="headerlink" title="2.域名的配置。"></a>2.域名的配置。</h4><p>域名购买成功后，可以进入到自己的控制台查看。</p><p>由于刚购买的域名，所以需要实名认证，点击（2）后填写相关资料后提交，大概1个工作日内会有你的“专属商务经理”给你打电话进行实名认证资料和核实，没问题的话一般3-5个工作日内就会认证成功。</p><p>然后就要进行域名的备案了。</p><p>这里需要注意一下：如果你购买的服务器在中国大陆内，就需要进行域名备案才能将域名配置到服务器，如果不是，就可以忽略“备案”这一步。</p><p>具体备案步骤可以点击这里查看（<code>https://help.aliyun.com/knowledge_detail/36922.html?spm=a2c4g.11186623.6.558.30ba1ff5Iku2Fj</code> ），比较详细，我就不细说了。</p><p>备案需要10~20个工作日，在这期间我们可以先进行域名的解析。</p><p>在控制台点击“解析”</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200845.png" alt="图片"></p><h5 id="这里有两种快速域名解析的方法："><a href="#这里有两种快速域名解析的方法：" class="headerlink" title="这里有两种快速域名解析的方法："></a>这里有两种快速域名解析的方法：</h5><p>网站域名解析：</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200906.png" alt="图片"></p><p>邮箱域名解析：</p><p>点击“确认”，解析成功。</p><h2 id="三丶上传网站源码"><a href="#三丶上传网站源码" class="headerlink" title="三丶上传网站源码"></a><strong>三丶上传网站源码</strong></h2><p>我们可以通过FTP类的工具帮助我们更加方便地上传源码到服务器上，目前国外用的较多的是FileZilla，国内用的多的是XFTP工具，putty等。这里我以xftp5为例。</p><p>先前我们已经远程连接过自己的服务器了，这里直接连接即可。</p><p>连接成功之后我们会找到这样一个文件夹（这里的java文件夹是解压jdk和tomcat所在的文件夹）：</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231200932.png" alt="图片"></p><p>进入到上面绿色框中的文件夹内，其余的东西不需要动，将你做好的整个网站源码放到新的文件夹里（注意最好全英命名），通过FTP传输进来。</p><p>然后你可以通过你的域名+文件夹名+html单页面名即可访问你的网页（例如：<code>www.域名.com/webapps</code>里你存放网页的文件夹名/index）。</p><p>这时候你的网站基本部署完毕了！</p><p>注意：如果你的网页不加端口号就通过IP地址和域名来访问网页，这时候需要尝试修改一下端口，修改到80端口，然后重启一下tomcat 再试一下。tomcat 默认配置文件为 server.xml ，将其中的8080修改为80，然后重启tomcat 再试一下，因为默认只有80端口可以不加端口号进行访问。</p>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网上读研</title>
      <link href="/archives/84da21b0.html"/>
      <url>/archives/84da21b0.html</url>
      
        <content type="html"><![CDATA[<p>文献阅读</p><p> 阅读工具：zotero</p><p>   阅读方法</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231201338.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231201406.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231201431.png" alt="img"></p><p>实验技术</p><p>  中文网站：</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231201610.png"></p><p>  英文网站：</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231201719.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231201858.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231202112.png"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231202147.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231202245.png"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231202319.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231202359.png"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231202439.png" alt="img"></p><p>论文写作与投稿</p><p>​    写作</p><p>   多看别人的进行模仿：根据自己的研究确定选题，模仿类似的文章框架，之后填充内容修改</p><p>   书籍推荐：《如何成为学术论文写作高手》《学术期刊论文写作必修课》</p><p>​     投稿改稿：思唯学苑</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231202511.png" alt="img"></p><p>科研进阶大师课（以审稿人视角审视，针对九点审稿要素总结相应退稿原因进行分析）</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231202542.png" alt="img"></p><p>科研绘图：visio (直接导入word可再编辑）AI（高级，花里胡哨）</p><p>科研思维：不要闭门造车，不要局限于自己的领域， 可以看大佬的公开课，听取大佬建议学习观念上的东西，知乎有实际方法，另一方面，主动关心科研动态，和前辈多交流</p>]]></content>
      
      
      <categories>
          
          <category> 研究生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搜索激活码小技巧-Google</title>
      <link href="/archives/fdddbf6b.html"/>
      <url>/archives/fdddbf6b.html</url>
      
        <content type="html"><![CDATA[<p>想要搜索出某个软件的激活码：</p><p>可以尝试  软件名+94FBR</p>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 激活码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速新建uml类图</title>
      <link href="/archives/b893aefb.html"/>
      <url>/archives/b893aefb.html</url>
      
        <content type="html"><![CDATA[<h1 id="IDEA中一个被低估的功能，一键把项目代码绘制成UML类图"><a href="#IDEA中一个被低估的功能，一键把项目代码绘制成UML类图" class="headerlink" title="IDEA中一个被低估的功能，一键把项目代码绘制成UML类图"></a>IDEA中一个被低估的功能，一键把项目代码绘制成UML类图</h1><p>最近在开发的过程当中，对于已有的代码，想将相关类绘制成UML类图，虽然现在有很多UML类图的优秀软件，比如ProcessOn（可视化编辑）、draw.io（可视化编辑）、PlantUML(代码生成)，其实看到这里我就想IDEA中有没有像PlantUML一样的自动生成的插件，本着怀疑的态度百度了一下，果然IDEA还是很强大的，这个插件都是自带的，接下稍微讲述如何利用IDEA生成UML类图的教程。</p><p>说之前先说一下Diagram这个单词，意思是图表; 示意图; 图解; [数] 线图的意思。</p><ul><li>打开设置 File-&gt;Setting或windows下按Ctrl+Alt+S</li><li>在搜索框中输入Diagram，如下图：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231202717.png" alt="图片"></p><p>如上所示，我们主要关心的只有Java Class Diagrams下面的几个单选框，分别对应红字部分，一般的UML类图只需要知道成员变量、构造器和方法（前面三个），其他的随意，设置好了之后我们就来演示一下，</p><ul><li>选择需要的类文件，在编辑器中打开它</li><li>按Ctrl + Shift + Alt + U或Ctrl + Alt + U或右键选择，生成类Uml关联图，如下图：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231202753.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231202835.png"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231202911.png"></p><p>上面的是类的UML图，下面的support包的UML图：</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231202951.png"></p><p>局限性：虽然这个很是方便，但是也有他自己的局限性，首先这个功能只能是根据类来自动生成的，所以对于设计类的时候就不行了，还是需要正规的UML图软件，还有就是对于专业的UML软件来说，这种自动生成的东西可能表达并不是非常的准确直观，特别是对于UML图有严格要求的人来说，显得格外重要。</p>]]></content>
      
      
      <categories>
          
          <category> QuickStart </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>口红显卡</title>
      <link href="/archives/98d3ecc2.html"/>
      <url>/archives/98d3ecc2.html</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>完美日记</th><th>GTX1650</th></tr></thead><tbody><tr><td>欧莱雅</td><td>RTX2060</td></tr><tr><td>MAC、NARS</td><td>RTX2070</td></tr><tr><td>兰蔻、雅诗兰黛</td><td>RTX2080</td></tr><tr><td>杨树林、香奈儿、迪奥、阿玛尼</td><td>RTX3070</td></tr><tr><td>TF、CPB</td><td>RTX3080</td></tr><tr><td>罗卜丁</td><td>RTX3090</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>键鼠推荐</title>
      <link href="/archives/bf165348.html"/>
      <url>/archives/bf165348.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/%E9%94%AE%E9%BC%A0%E6%8E%A8%E8%8D%90.png"></p>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单学生信息管理系统（python版）</title>
      <link href="/archives/a5dbcbfb.html"/>
      <url>/archives/a5dbcbfb.html</url>
      
        <content type="html"><![CDATA[<h1 id="简易学生信息管理系统（Python版）"><a href="#简易学生信息管理系统（Python版）" class="headerlink" title="简易学生信息管理系统（Python版）"></a>简易学生信息管理系统（Python版）</h1><h2 id="一、系统简介"><a href="#一、系统简介" class="headerlink" title="一、系统简介"></a>一、系统简介</h2><p>实现一个学生信息的管理系统：主要功能有：</p><ol><li>添加学生信息</li><li>删除学生信息</li><li>修改学生信息</li><li>查询学生信息</li><li>显示学生信息</li><li>退出当前系统</li></ol><h2 id="二、步骤分析"><a href="#二、步骤分析" class="headerlink" title="二、步骤分析"></a>二、步骤分析</h2><ol><li>显示功能界面</li><li>用户输入功能序号</li><li>对不同序号的功能实现具体函数（3.1 定义函数、3.2 调用函数）</li></ol><h2 id="三、需求实现"><a href="#三、需求实现" class="headerlink" title="三、需求实现"></a>三、需求实现</h2><ol><li>显示功能界面<code>info_print()</code></li><li>用户输入功能序号 <code>user_num = eval(input(&#39;请输入功能序号：&#39;))</code></li><li>按照用户输入的功能序号，执行不同的功能(函数)</li><li>添加学生信息<code>add_info()</code></li><li>删除学生信息<code>del_info()</code></li><li>修改学生信息<code>modify_info()</code></li><li>查询学生信息<code>search_info()</code></li><li>显示学生信息<code>print_all()</code></li></ol><h2 id="四、具体实现"><a href="#四、具体实现" class="headerlink" title="四、具体实现"></a>四、具体实现</h2><p>系统功能需要循环使用，直到用户输入6，才退出系统 功能界面部分：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 定义一个函数</span><br><span class="line">def info_print():</span><br><span class="line">    print(&#x27;--------请选择功能-----&#x27;)</span><br><span class="line">    print(&#x27;1、添加学生&#x27;)</span><br><span class="line">    print(&#x27;2、删除学生&#x27;)</span><br><span class="line">    print(&#x27;3、修改学生&#x27;)</span><br><span class="line">    print(&#x27;4、查询学生&#x27;)</span><br><span class="line">    print(&#x27;5、显示所有学生&#x27;)</span><br><span class="line">    print(&#x27;6、退出系统&#x27;)</span><br><span class="line">    print(&#x27;-&#x27; * 20)</span><br><span class="line"></span><br><span class="line"># 等待存储所有学生的信息</span><br><span class="line">info = []</span><br></pre></td></tr></table></figure><p>主要部分代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">while True:</span><br><span class="line">    # 1、显示功能界面</span><br><span class="line">    info_print()</span><br><span class="line">    </span><br><span class="line">    # 2、用户输入功能序号</span><br><span class="line">    user_num = eval(input(&#x27;请输入功能序号：&#x27;))</span><br><span class="line"></span><br><span class="line">    # 3、按照用户输入的功能序号，执行不同的功能(函数)</span><br><span class="line">    # 如果用户输入1，就执行添加学生的功能</span><br><span class="line">    if user_num == 1:</span><br><span class="line">        # print(&#x27;添加学生&#x27;)</span><br><span class="line">    elif user_num == 2:</span><br><span class="line">        # print(&#x27;删除学生&#x27;)</span><br><span class="line">    elif user_num == 3:</span><br><span class="line">        # print(&#x27;修改学生&#x27;)</span><br><span class="line">    elif user_num == 4:</span><br><span class="line">       # print(&#x27;查询学生&#x27;)</span><br><span class="line">    elif user_num == 5:</span><br><span class="line">        # print(&#x27;显示所有学生&#x27;)</span><br><span class="line">    elif user_num == 6:</span><br><span class="line">        exit_flag = input(&quot;确定要退出吗？yes/no?&quot;)</span><br><span class="line">        if exit_flag == &#x27;yes&#x27;:</span><br><span class="line">            break</span><br><span class="line">        # print(&#x27;退出系统&#x27;)</span><br><span class="line">    else:</span><br><span class="line">        print(&#x27;输入的功能序号有误！&#x27;)</span><br></pre></td></tr></table></figure><p>那么根据上面的代码，需要实现具体的功能函数，主要代码部分如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">while True:</span><br><span class="line">    # 1、显示功能界面</span><br><span class="line">    info_print()</span><br><span class="line"></span><br><span class="line">    # 2、用户输入功能序号</span><br><span class="line">    user_num = eval(input(&#x27;请输入功能序号：&#x27;))</span><br><span class="line"></span><br><span class="line">    # 3、按照用户输入的功能序号，执行不同的功能(函数)</span><br><span class="line">    # 如果用户输入1，就执行添加学生的功能</span><br><span class="line">    if user_num == 1:</span><br><span class="line">        add_info()</span><br><span class="line">        # print(&#x27;添加学生&#x27;)</span><br><span class="line">    elif user_num == 2:</span><br><span class="line">        del_info()</span><br><span class="line">        # print(&#x27;删除学生&#x27;)</span><br><span class="line">    elif user_num == 3:</span><br><span class="line">        modify_info()</span><br><span class="line">        # print(&#x27;修改学生&#x27;)</span><br><span class="line">    elif user_num == 4:</span><br><span class="line">        search_info()</span><br><span class="line">        # print(&#x27;查询学生&#x27;)</span><br><span class="line">    elif user_num == 5:</span><br><span class="line">        print_all()</span><br><span class="line">        # print(&#x27;显示所有学生&#x27;)</span><br><span class="line">    elif user_num == 6:</span><br><span class="line">        exit_flag = input(&quot;确定要退出吗？yes/no?&quot;)</span><br><span class="line">        if exit_flag == &#x27;yes&#x27;:</span><br><span class="line">            break</span><br><span class="line">        # print(&#x27;退出系统&#x27;)</span><br><span class="line">    else:</span><br><span class="line">        print(&#x27;输入的功能序号有误！&#x27;)</span><br></pre></td></tr></table></figure><h4 id="4-1-添加学生信息的函数"><a href="#4-1-添加学生信息的函数" class="headerlink" title="4.1 添加学生信息的函数"></a>4.1 添加学生信息的函数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def add_info():</span><br><span class="line">    &quot;&quot;&quot;添加学生函数&quot;&quot;&quot;</span><br><span class="line">    # 接受用户输入学生信息</span><br><span class="line">    # 1、用户输入：学号、姓名、手机号</span><br><span class="line">    new_id = input(&quot;输入学号：&quot;)</span><br><span class="line">    new_name = input(&quot;输入姓名：&quot;)</span><br><span class="line">    new_tel = input(&quot;输入手机号：&quot;)</span><br><span class="line"></span><br><span class="line">    # 2、判断是否添加这个学生，如果学生姓名已经存在报错提示，如果不存在则添加数据</span><br><span class="line">    global info</span><br><span class="line">    # 2.1 不允许姓名重复：判断用户输入的姓名如果和列表里面字典的name值是相等的，则提示姓名重复</span><br><span class="line">    for i in info:</span><br><span class="line">        if new_name == i[&#x27;name&#x27;]:</span><br><span class="line">            print(&quot;此用户已经存在，请勿重复添加&quot;)</span><br><span class="line">            # return 退出当前函数，后面添加信息的代码不执行</span><br><span class="line">            return</span><br><span class="line">    # 如果用户输入的姓名不存在，则添加该学生信息</span><br><span class="line">    info_dict = &#123;&lt;!-- --&gt;&#x27;id&#x27;: new_id, &#x27;name&#x27;: new_name, &#x27;tel&#x27;: new_tel&#125;</span><br><span class="line">    # 将用户输入的数据追加到字典</span><br><span class="line"></span><br><span class="line">    # 将这个学生的字典数据追加到列表</span><br><span class="line">    info.append(info_dict)</span><br><span class="line">    print(info)</span><br></pre></td></tr></table></figure><h4 id="4-2-删除学生信息的函数"><a href="#4-2-删除学生信息的函数" class="headerlink" title="4.2 删除学生信息的函数"></a>4.2 删除学生信息的函数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def del_info():</span><br><span class="line">    &quot;&quot;&quot;删除学生&quot;&quot;&quot;</span><br><span class="line">    # 1、用户输入要删除的学生的姓名</span><br><span class="line">    del_name = input(&quot;请输入要删除的学生的姓名：&quot;)</span><br><span class="line"></span><br><span class="line">    global info</span><br><span class="line">    # 2、判断学生是否存在</span><br><span class="line">    # 2.1 声明info是全局变量</span><br><span class="line">    # 2.2 遍历列表</span><br><span class="line">    # 2.3 判断学生是否存在，存在则执行删除信息，break：不允许重名，那么删除了一个，后面的不需要再遍历；不存在则提示</span><br><span class="line">    for i in info:</span><br><span class="line">        if del_name == i[&#x27;name&#x27;]:</span><br><span class="line">            info.remove(i)</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        print(&#x27;该学生不存在！&#x27;)</span><br><span class="line"></span><br><span class="line">    print(info)</span><br></pre></td></tr></table></figure><h4 id="4-3-修改学生信息的函数"><a href="#4-3-修改学生信息的函数" class="headerlink" title="4.3 修改学生信息的函数"></a>4.3 修改学生信息的函数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def modify_info():</span><br><span class="line">    &quot;&quot;&quot;修改函数&quot;&quot;&quot;</span><br><span class="line">    # 1、用户输入要修改的学生的姓名</span><br><span class="line">    modify_name = input(&quot;请输入要修改的学生的姓名：&quot;)</span><br><span class="line">    global info</span><br><span class="line"></span><br><span class="line">    # 2、判断学生是否存在，如果输入的姓名存在则修改手机号，否则则提示</span><br><span class="line">    for i in info:</span><br><span class="line">        if modify_name == i[&#x27;name&#x27;]:</span><br><span class="line">            i[&#x27;tel&#x27;] = input(&quot;请输入新的手机号：&quot;)</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;该学生不存在&quot;)</span><br><span class="line"></span><br><span class="line">    print(info)</span><br></pre></td></tr></table></figure><h4 id="4-4-查询学生信息的函数"><a href="#4-4-查询学生信息的函数" class="headerlink" title="4.4 查询学生信息的函数"></a>4.4 查询学生信息的函数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def search_info():</span><br><span class="line">    &quot;&quot;&quot;查询学生信息&quot;&quot;&quot;</span><br><span class="line">    # 1、输入要查找的学生姓名</span><br><span class="line">    search_name = input(&quot;请输入要查找的学生姓名：&quot;)</span><br><span class="line"></span><br><span class="line">    global info</span><br><span class="line"></span><br><span class="line">    # 2、判断学生是否存在，如果输入的姓名存在则显示该学生的信息，否则则提示</span><br><span class="line">    for i in info:</span><br><span class="line">        if search_name == i[&#x27;name&#x27;]:</span><br><span class="line">            print(&quot;找到该学生的信息如下：&quot;)</span><br><span class="line">            print(f&quot;该学生的学号是&#123;i[&#x27;id&#x27;]&#125;,姓名是&#123;i[&#x27;name&#x27;]&#125;,手机号是&#123;i[&#x27;tel&#x27;]&#125;&quot;)</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;该学生不存在！&quot;)</span><br></pre></td></tr></table></figure><h4 id="4-5-显示所有学生信息"><a href="#4-5-显示所有学生信息" class="headerlink" title="4.5 显示所有学生信息"></a>4.5 显示所有学生信息</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def print_all():</span><br><span class="line">    &quot;&quot;&quot;显示所有学生信息&quot;&quot;&quot;</span><br><span class="line">    print(&#x27;学号\t姓名\t手机号&#x27;)</span><br><span class="line">    for i in info:</span><br><span class="line">        print(f&quot;&#123;i[&#x27;id&#x27;]&#125;\t&#123;i[&#x27;name&#x27;]&#125;\t&#123;i[&#x27;tel&#x27;]&#125;&quot;)</span><br></pre></td></tr></table></figure><h2 id="五、运行效果"><a href="#五、运行效果" class="headerlink" title="五、运行效果"></a>五、运行效果</h2><ol><li>添加和删除学生信息：<img src="https://mmbiz.qpic.cn/mmbiz_jpg/iaahNUMjJc7te10TBAL8INJNeibXmVCxbOIGg1ia6xeTdicGjWibtcD1rwpkibqKvPLYQibKyxBMbEvBR0RfCBrslp7Kw/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片">1.  修改和查询学生信息<img src="https://mmbiz.qpic.cn/mmbiz_jpg/iaahNUMjJc7te10TBAL8INJNeibXmVCxbOg54mOgbP7q6AHp8scF0ebNkd3iaRFVExHz0fQT11gQVPcckX4U1Fyhw/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片">1.  显示所有学生信息和退出系统<img src="https://mmbiz.qpic.cn/mmbiz_jpg/iaahNUMjJc7te10TBAL8INJNeibXmVCxbOOxTHUXLzOzwClwpQJKrKLcicbqy5O8Rzrc5e1HnXux6ic1Dkn9KHOf9w/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片"></li></ol><h2 id="六、完整代码"><a href="#六、完整代码" class="headerlink" title="六、完整代码"></a>六、完整代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义一个函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">info_print</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;--------请选择功能-----&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;1、添加学生&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;2、删除学生&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;3、修改学生&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;4、查询学生&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;5、显示所有学生&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;6、退出系统&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span> * <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待存储所有学生的信息</span></span><br><span class="line">info = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1、添加学生信息的函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_info</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;添加学生函数&quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 接受用户输入学生信息</span></span><br><span class="line">    <span class="comment"># 1、用户输入：学号、姓名、手机号</span></span><br><span class="line">    new_id = <span class="built_in">input</span>(<span class="string">&quot;输入学号：&quot;</span>)</span><br><span class="line">    new_name = <span class="built_in">input</span>(<span class="string">&quot;输入姓名：&quot;</span>)</span><br><span class="line">    new_tel = <span class="built_in">input</span>(<span class="string">&quot;输入手机号：&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2、判断是否添加这个学生，如果学生姓名已经存在报错提示，如果不存在则添加数据</span></span><br><span class="line">    <span class="keyword">global</span> info</span><br><span class="line">    <span class="comment"># 2.1 不允许姓名重复：判断用户输入的姓名如果和列表里面字典的name值是相等的，则提示姓名重复</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> info:</span><br><span class="line">        <span class="keyword">if</span> new_name == i[<span class="string">&#x27;name&#x27;</span>]:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;此用户已经存在，请勿重复添加&quot;</span>)</span><br><span class="line">            <span class="comment"># return 退出当前函数，后面添加信息的代码不执行</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">    <span class="comment"># 如果用户输入的姓名不存在，则添加该学生信息</span></span><br><span class="line">    info_dict = &#123;&lt;!-- --&gt;<span class="string">&#x27;id&#x27;</span>: new_id, <span class="string">&#x27;name&#x27;</span>: new_name, <span class="string">&#x27;tel&#x27;</span>: new_tel&#125;</span><br><span class="line">    <span class="comment"># 将用户输入的数据追加到字典</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将这个学生的字典数据追加到列表</span></span><br><span class="line">    info.append(info_dict)</span><br><span class="line">    <span class="built_in">print</span>(info)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、删除学生的信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">del_info</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;删除学生&quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 1、用户输入要删除的学生的姓名</span></span><br><span class="line">    del_name = <span class="built_in">input</span>(<span class="string">&quot;请输入要删除的学生的姓名：&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">global</span> info</span><br><span class="line">    <span class="comment"># 2、判断学生是否存在</span></span><br><span class="line">    <span class="comment"># 2.1 声明info是全局变量</span></span><br><span class="line">    <span class="comment"># 2.2 遍历列表</span></span><br><span class="line">    <span class="comment"># 2.3 判断学生是否存在，存在则执行删除信息，break：不允许重名，那么删除了一个，后面的不需要再遍历；不存在则提示</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> info:</span><br><span class="line">        <span class="keyword">if</span> del_name == i[<span class="string">&#x27;name&#x27;</span>]:</span><br><span class="line">            info.remove(i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;该学生不存在！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(info)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、修改学生的信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">modify_info</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;修改函数&quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 1、用户输入要修改的学生的姓名</span></span><br><span class="line">    modify_name = <span class="built_in">input</span>(<span class="string">&quot;请输入要修改的学生的姓名：&quot;</span>)</span><br><span class="line">    <span class="keyword">global</span> info</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2、判断学生是否存在，如果输入的姓名存在则修改手机号，否则则提示</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> info:</span><br><span class="line">        <span class="keyword">if</span> modify_name == i[<span class="string">&#x27;name&#x27;</span>]:</span><br><span class="line">            i[<span class="string">&#x27;tel&#x27;</span>] = <span class="built_in">input</span>(<span class="string">&quot;请输入新的手机号：&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;该学生不存在&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(info)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4、查询学生信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">search_info</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;查询学生信息&quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 1、输入要查找的学生姓名</span></span><br><span class="line">    search_name = <span class="built_in">input</span>(<span class="string">&quot;请输入要查找的学生姓名：&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">global</span> info</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2、判断学生是否存在，如果输入的姓名存在则显示该学生的信息，否则则提示</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> info:</span><br><span class="line">        <span class="keyword">if</span> search_name == i[<span class="string">&#x27;name&#x27;</span>]:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;找到该学生的信息如下：&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;该学生的学号是<span class="subst">&#123;i[<span class="string">&#x27;id&#x27;</span>]&#125;</span>,姓名是<span class="subst">&#123;i[<span class="string">&#x27;name&#x27;</span>]&#125;</span>,手机号是<span class="subst">&#123;i[<span class="string">&#x27;tel&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;该学生不存在！&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5、显示所有学生信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">print_all</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;显示所有学生信息&quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;学号\t姓名\t手机号&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> info:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;i[<span class="string">&#x27;id&#x27;</span>]&#125;</span>\t<span class="subst">&#123;i[<span class="string">&#x27;name&#x27;</span>]&#125;</span>\t<span class="subst">&#123;i[<span class="string">&#x27;tel&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 系统功能需要循环使用，直到用户输入6，才退出系统</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 1、显示功能界面</span></span><br><span class="line">    info_print()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2、用户输入功能序号</span></span><br><span class="line">    user_num = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入功能序号：&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3、按照用户输入的功能序号，执行不同的功能(函数)</span></span><br><span class="line">    <span class="comment"># 如果用户输入1，就执行添加学生的功能</span></span><br><span class="line">    <span class="keyword">if</span> user_num == <span class="number">1</span>:</span><br><span class="line">        add_info()</span><br><span class="line">        <span class="comment"># print(&#x27;添加学生&#x27;)</span></span><br><span class="line">    <span class="keyword">elif</span> user_num == <span class="number">2</span>:</span><br><span class="line">        del_info()</span><br><span class="line">        <span class="comment"># print(&#x27;删除学生&#x27;)</span></span><br><span class="line">    <span class="keyword">elif</span> user_num == <span class="number">3</span>:</span><br><span class="line">        modify_info()</span><br><span class="line">        <span class="comment"># print(&#x27;修改学生&#x27;)</span></span><br><span class="line">    <span class="keyword">elif</span> user_num == <span class="number">4</span>:</span><br><span class="line">        search_info()</span><br><span class="line">        <span class="comment"># print(&#x27;查询学生&#x27;)</span></span><br><span class="line">    <span class="keyword">elif</span> user_num == <span class="number">5</span>:</span><br><span class="line">        print_all()</span><br><span class="line">        <span class="comment"># print(&#x27;显示所有学生&#x27;)</span></span><br><span class="line">    <span class="keyword">elif</span> user_num == <span class="number">6</span>:</span><br><span class="line">        exit_flag = <span class="built_in">input</span>(<span class="string">&quot;确定要退出吗？yes/no?&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> exit_flag == <span class="string">&#x27;yes&#x27;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># print(&#x27;退出系统&#x27;)</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;输入的功能序号有误！&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单鉴别苹果手机版本</title>
      <link href="/archives/8a53f0d7.html"/>
      <url>/archives/8a53f0d7.html</url>
      
        <content type="html"><![CDATA[<p>苹果型号代表手机的版本：</p><table><thead><tr><th>CH/A</th><th>国行</th><th>ZP/A</th><th>港版</th></tr></thead><tbody><tr><td>KH/A</td><td>韩版</td><td>LL/A</td><td>美版</td></tr><tr><td>DN/A</td><td>德版</td><td>TA/A</td><td>台版</td></tr><tr><td>RS/A</td><td>俄罗斯版</td><td>GR/A</td><td>希腊版</td></tr><tr><td>IP/A</td><td>意大利版</td><td>PP/A</td><td>菲律宾版</td></tr></tbody></table><p>苹果的型号号码</p><table><thead><tr><th>N开头是</th><th>官换机</th></tr></thead><tbody><tr><td>M开头是</td><td>零售机</td></tr><tr><td>F开头是</td><td>官翻机</td></tr><tr><td>3A开头是</td><td>展示机</td></tr></tbody></table><p>只有零售机是一手机器</p><p>售后经历解决技巧–玩客锅锅</p><h1 id="售后技巧"><a href="#售后技巧" class="headerlink" title="售后技巧"></a>售后技巧</h1><p><strong>入手原则</strong>：认准百亿补贴的标志+收货必须录像全程开箱+有问题坚决售后<br><strong>录像开箱要求</strong>：一镜头到底，有问题地方特写，有问题千万别激活。<br>先录入清晰的物流面单，再录入完整的六面证明未拆，录入手机包装MEI/SN等<br>参数页、拆开手机包装、拿出手机检查机身外观有无磕碰划痕瑕疵、摄像头有无进灰、点亮<br>屏幕查看有无明显显示问题和坏点等质量问题、以上均无问题再下一步激活使用，有问题<br>绝对不激活直接申请售后。<br><strong>售后申请流程</strong>：直接申请售后换、默认店铺拒绝（实证店几乎很难达不到平台的处理力度）、申请平台介入、<br>主流各基本都适用平台处理明显不合理时12315调解<br>售后录像退回以防万一</p><h1 id="常见售后问题-amp-解决方案"><a href="#常见售后问题-amp-解决方案" class="headerlink" title="常见售后问题&amp;解决方案"></a>常见售后问题&amp;解决方案</h1><p><strong>大规律</strong>：补贴的iPhone:换货很少见（今双11未激活换变多），留+补偿，退+补偿<br><strong>1、外观磕碰划痕瑕疵（非屏幕上）（最常见最多的类型）</strong><br>按正常流程售后换，店铺一般拒绝，一般店铺主动提30-50补，申请平台介入，实证多数不换给补偿总200左右，东东<br>双11两案例200左右。申请退，未激活很爽快，错过活动，有的退有补偿。<br>划痕屏幕上的极少，不要激活，遇到坚决退或换建议换，换比较罕见（今年双11换货比之前增加不少案例），<br>一般是退或者加补偿，能换就换。若激活则一般是妥协折中补偿且力度比未激活的小。<br><strong>建议</strong>：非屏幕上、不太严重的瑕疵建议申请换，若不能满足换，补偿勉为其难同意。</p><p><strong>2、摄像头模组进灰</strong><br>按正常流程售后退或换建议换！较严重，售后麻烦很难退（激活后）！未激活无法确定是否影响使用，且影响出二手。<br>建议申请换（不建议留+补偿），店铺一般拒绝（今年双11遇到几例可换货比以前友好不少），平台介入后和商家多次<br>沟通解决。<br>摄像进灰未激活：我门遇到过几例未激活成功换的，未激活相当重要。如不换，未激活的一般是退，退也不难。<br>进灰退换现很可能也需苹果售后检测单，进灰实证能开到。摄像进灰已激活：多数人观察不仔细导致激活后发现，实<br>证退换相当困难麻烦，一般是接受补偿200</p><p><strong>3、屏幕色差、模糊噪点等硬件质量问题</strong><br>按流程正常售后申请换或者退，建议是换。<br>此类极少，大多数激活后发现，比较主观（色差）、复杂售后周期长、概率低，问题存在自己开检测单或商家代检，<br>售后不难，屏幕色差主观、不同屏幕供应商的差异，以苹果售后检测为准。申请售后换、默认店铺拒绝要苹果售后检测<br>单，有售后点可去开检测报告单省事（非返厂检测，返回商家会返厂检测），若无条件申请平台介入请求商家代检，苹果<br>售后能检测出问题则售后成功，像色差检测无问题则失败退回。<br>屏幕质量问题极少，今年双11期间目前遇到共3例。</p><p><strong>4、IMEI SN等三码不一致等错乱问题</strong><br>按流程售后退或换，建议换或接受补偿：极罕见但存在，遇到换个心态当好事，售后简单，额外补偿给力。<br><strong>5、延迟发货问题</strong><br>个别店铺未在承诺期发货！普通售后流程暂时没有较好效果。<br>平台没有类似隔壁超时未发货赔30%最高500的规则来加强约束店铺吗？</p><p><strong>6、激活后发现问题</strong><br>(产品质量问题除外主要指品控问题)激活后发现问题，拍视频看不见问题，有问题为何激活？<br>激活后手机处理麻烦，售后方案按经验需妥协折中，需要磨嘴皮，几乎都解决了。<br><strong>7、七天无理由退货</strong><br>全新未拆封无理由退流程简单，几乎都没问题，建议收到退回都录像，包装好防止盒子出现问题，比如磕角！！</p><h1 id="iPhone手机壳推荐"><a href="#iPhone手机壳推荐" class="headerlink" title="iPhone手机壳推荐"></a>iPhone手机壳推荐</h1><ol><li>pitaka</li><li>凯夫拉</li></ol><h2 id="记好这3步，让你的新iPhone-安全下车"><a href="#记好这3步，让你的新iPhone-安全下车" class="headerlink" title="记好这3步，让你的新iPhone 安全下车"></a>记好这3步，让你的新iPhone 安全下车</h2><ol><li>输入<code>*#06#</code>获取IMEI编码，接着和卡槽上方的数字对比</li></ol><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20230203204157.png"></p><ol start="2"><li>打开关于本机，先看型号号码，接着点击型号号码，获取影藏型号，对比卡槽侧面的数字，如果一致，说明入网型号匹配</li><li>长按复制序列号，进入苹果官网，技术支持，参看保修状态，如果是新机的话，则会显示未激活</li></ol>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>豆豆处理方法-圆圆</title>
      <link href="/archives/32718f23.html"/>
      <url>/archives/32718f23.html</url>
      
        <content type="html"><![CDATA[<h1 id="近期照片"><a href="#近期照片" class="headerlink" title="近期照片"></a>近期照片</h1><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/%E8%BF%91%E6%9C%9F%E7%85%A7%E7%89%87.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/01.jpg"></p><h1 id="不同豆豆类型-丘疹豆、红肿豆、结节豆-囊肿豆"><a href="#不同豆豆类型-丘疹豆、红肿豆、结节豆-囊肿豆" class="headerlink" title="不同豆豆类型-丘疹豆、红肿豆、结节豆/囊肿豆"></a>不同豆豆类型-丘疹豆、红肿豆、结节豆/囊肿豆</h1><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/02.jpg"></p><h1 id="丘疹豆"><a href="#丘疹豆" class="headerlink" title="丘疹豆"></a>丘疹豆</h1><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/03.jpg"></p><h1 id="红肿豆"><a href="#红肿豆" class="headerlink" title="红肿豆"></a>红肿豆</h1><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/04-1.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/04-2.jpg"></p><h1 id="结节豆-囊肿豆"><a href="#结节豆-囊肿豆" class="headerlink" title="结节豆/囊肿豆"></a>结节豆/囊肿豆</h1><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/05.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 猪猪boy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔电降温</title>
      <link href="/archives/2f38e819.html"/>
      <url>/archives/2f38e819.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/%E7%AC%94%E7%94%B5%E9%99%8D%E6%B8%A9.png"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/%E7%AC%94%E7%94%B5%E9%99%8D%E6%B8%A92.png"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/%E7%A1%85%E8%84%82.png"></p>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> computer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>痘印没烦恼</title>
      <link href="/archives/88b8bb6d.html"/>
      <url>/archives/88b8bb6d.html</url>
      
        <content type="html"><![CDATA[<h1 id="巧巧："><a href="#巧巧：" class="headerlink" title="巧巧："></a>巧巧：</h1><ol><li><p>新品，发布时间：2022-12-14 18:01</p><p>诠润新品b5面膜</p><p>凡可杏仁酸精华</p><p>科洱美修护精华</p></li><li><p>好物分享，发布时间：2022-12-26 18:45</p><p>质润壬二酸凝露</p></li><li><p><strong>年度爱用物</strong>，发布时间：2022-12-31 11:54</p><p><code>听研水煮蛋（平滑肌肤）</code>，朴理2号（抗炎退红），<code>优时颜微笑眼霜</code>，瑷尔博士微晶水，相宜本草红景天面霜</p></li><li><p>经典好物，发布时间：2023-01-12 18:07</p><p>HR黑绷带（修护，抗老，紧紧），科颜氏白泥，修丽可色修精华（修护炎症红、敏M红）</p></li><li><p><strong>过年回家也要带的好物推荐</strong>，发布时间：2023-01-14 17:56</p><p><code>诠润b5精华（可以用作替代水+精华，补水保湿维稳，护肤万金油）</code>，<code>听研水煮蛋（平滑肌肤，十分推荐我的命）</code>，<code>优时颜微笑眼霜</code>,诠润b5乳液面膜（偏急救类型，补水保湿维稳），丸美蝴蝶眼膜，相宜本草防晒</p></li><li><p>美妆团队爱用，发布时间：2023-01-23 17:50</p><p>科兰黎vc精华</p></li><li><p><strong>新年宝藏</strong>，2023-01-29 18:03</p><p>lumene极地面霜清爽版</p></li><li></li></ol><p>抗氧提亮</p><blockquote><p>HBN发光水（打底）+抗氧精华+（抗氧霜/乳液）</p></blockquote><p>抗老嘭嘭</p><blockquote><p>反重力水乳+丸美小金针（–主打胶原蛋白）+乳（米加面霜–主打玻色因）</p></blockquote><p>修复维稳</p><blockquote><p>B5(补水保湿)+修护的乳</p></blockquote><p>平滑肌肤</p><blockquote><p>反重力水乳/菌菇水+<code>听研水煮蛋精华</code>+乳/霜</p></blockquote><p>妮维雅630精华</p><p>乘法一号祛痘精华</p><p>年度爱用香水推荐</p><p>1.阿蒂仙 寻找蝴蝶  铃兰茉莉栀子花香<br>2.马吉拉 爵士酒廊  甜味烟草味朗姆酒味<br>3.解放橘郡 像你的人 薄荷莫吉托，夏日男高<br>4.佩枪 隐衫之欲   皂香奶香伪体香</p><h1 id="抱不动圆圆讲座"><a href="#抱不动圆圆讲座" class="headerlink" title="抱不动圆圆讲座"></a>抱不动圆圆讲座</h1><h3 id="预防反复长痘："><a href="#预防反复长痘：" class="headerlink" title="预防反复长痘："></a>预防反复长痘：</h3><p>菜鸟家的姜黄素精华、达尔肤净豆精华</p><blockquote><p>预算足的冲：达尔肤净豆精华</p><p>预算不足的选：姜番</p></blockquote><h4 id="含酸面膜："><a href="#含酸面膜：" class="headerlink" title="含酸面膜："></a>含酸面膜：</h4><p>达尔肤冻膜、绿芙芙</p><h3 id="闭口："><a href="#闭口：" class="headerlink" title="闭口："></a>闭口：</h3><p>肌活糙米水-》研译的精彩精华-》惜玥b5</p><p>周护理：达尔服酸膜</p><h4 id="top："><a href="#top：" class="headerlink" title="top："></a>top：</h4><blockquote><p>1.糙米水湿敷15s加擦拭平滑效果更好</p><p>2.研译精华全脸1/3泵，闭口严重区域可以在局部叠加使用</p><p>3.顽固闭口需要搭配达尔肤冻膜一起解决</p></blockquote><h3 id="红痘印："><a href="#红痘印：" class="headerlink" title="红痘印："></a>红痘印：</h3><p> 当红痘印在你脸上&lt;一个月：</p><blockquote><p>使用油橄榄（言之有物）</p></blockquote><p> 当红痘印在你脸上&gt;一个月：</p><blockquote><p>使用米蓓尔小蓝帽</p></blockquote><h4 id="米蓓尔小蓝帽-》肤纯壬二酸"><a href="#米蓓尔小蓝帽-》肤纯壬二酸" class="headerlink" title="米蓓尔小蓝帽-》肤纯壬二酸"></a>米蓓尔小蓝帽-》肤纯壬二酸</h4><h3 id="黑痘印："><a href="#黑痘印：" class="headerlink" title="黑痘印："></a>黑痘印：</h3><p>vc+提亮精华+果酸棉片</p><p>可以使用<strong>惜月vc</strong>（惜月vc包含亮亮精华）+果酸棉片</p><blockquote><p>用法：</p><p>​    vc早上用预防变黑</p><p>​    提亮精华晚上用</p><p>​    果酸棉片局部擦拭黑痘印区域（一周三次晚用）</p></blockquote><h4 id="米蓓尔小蓝帽-》惜月vc-》新碧小蓝帽防晒"><a href="#米蓓尔小蓝帽-》惜月vc-》新碧小蓝帽防晒" class="headerlink" title="米蓓尔小蓝帽-》惜月vc-》新碧小蓝帽防晒"></a>米蓓尔小蓝帽-》惜月vc-》新碧小蓝帽防晒</h4><h4 id="top"><a href="#top" class="headerlink" title="top:"></a>top:</h4><blockquote><p>1.小蓝帽、vc用量一定要足！一次各一泵</p><p>2.小蓝帽、vc预先挤在手掌充分混合，上脸更好吸收</p><p>3.耐受情况下可以在晚间使用若美欣棉片擦拭黑痘印区域加快淡化速度</p></blockquote><h1 id="油痘肌综合护理性价比版（出油、痘印反复、红痘印）"><a href="#油痘肌综合护理性价比版（出油、痘印反复、红痘印）" class="headerlink" title="油痘肌综合护理性价比版（出油、痘印反复、红痘印）"></a>油痘肌综合护理性价比版（出油、痘印反复、红痘印）</h1><h3 id="痘印（红褐黑）"><a href="#痘印（红褐黑）" class="headerlink" title="痘印（红褐黑）"></a>痘印（红褐黑）</h3><h4 id="白天："><a href="#白天：" class="headerlink" title="白天："></a>白天：</h4><blockquote><p>达尔肤净豆-》激活糙米水-》米蓓尔小蓝帽-》糙米控油乳</p></blockquote><h4 id="晚上："><a href="#晚上：" class="headerlink" title="晚上："></a>晚上：</h4><blockquote><p> 达尔肤净豆-》激活糙米水-》米蓓尔小蓝帽-》糙米控油乳</p></blockquote><p>周护理：达尔服酸膜</p><h4 id="top：-1"><a href="#top：-1" class="headerlink" title="top："></a>top：</h4><blockquote><p>1.达尔肤净痘精华需全脸使用，一次两泵，用在洗脸后第一步（达尔肤净痘精华可以和姜番套组二选一，都是改善【反复】+【长痘】的！如果只是痘肌维稳可以把达尔肤净痘精华直接替换成姜黄）</p><p>2.肤纯壬二酸需要全脸（重点）薄擦，点擦效果不好</p><p>3.耐受型油痘肌建议使用达尔肤冻膜维持皮肤稳定，每周不超过三次</p></blockquote><h3 id="闭口：-1"><a href="#闭口：-1" class="headerlink" title="闭口："></a>闭口：</h3><p>肌活糙米水-》研译的精彩精华-》惜玥b5</p><p>周护理：达尔服酸膜</p><h4 id="top：-2"><a href="#top：-2" class="headerlink" title="top："></a>top：</h4><blockquote><p>1.糙米水湿敷15s加擦拭平滑效果更好</p><p>2.研译精华全脸1/3泵，闭口严重区域可以在局部叠加使用</p><p>3.顽固闭口需要搭配达尔肤冻膜一起解决</p></blockquote><ol><li><p>发布时间：2022-12-29 17:00</p><p>易科美点痘仪</p></li><li><p>省钱攻略，发布时间：2023-01-14 16:59</p><p>适乐肤c乳</p><p>当妮留香珠</p></li><li><p><strong>年度好用</strong>，发布时间：2023-01-18 17:10</p><p>达尔肤冻膜，达尔肤三修，果壳无患子洁面，肤纯20%壬二酸面霜</p></li><li><p>溪木源祛痘膏，发布时间：2023-01-20 20:57</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 猪猪boy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ipa网盘</title>
      <link href="/archives/b17e1a4c.html"/>
      <url>/archives/b17e1a4c.html</url>
      
        <content type="html"><![CDATA[<p>ios最佳APP软件</p><blockquote><p>特斯那</p><p>weather</p></blockquote><p>ios快捷网站</p><p><a href="https://www.rcuts.com/">https://www.rcuts.com/</a><br><a href="https://sharecuts.cn/">https://sharecuts.cn/</a><br><a href="https://jiejinghe.com/">https://jiejinghe.com/</a><br><a href="https://jiejingku.net/">https://jiejingku.net/</a><br><a href="https://iphone8.vip/">https://iphone8.vip/</a><br><a href="https://shortcuts.sspai.com/">https://shortcuts.sspai.com</a><br><a href="https://www.kejicut.com/">https://www.kejicut.com/</a></p><p><a href="https://pan.wxqqurl.cn/ak/share">https://pan.wxqqurl.cn/ak/share</a><br><a href="https://app.fwzs.top/">https://app.fwzs.top/</a><br><a href="https://pgyy.vip/index.aspx">https://pgyy.vip/index.aspx</a><br><a href="https://ukzs.org/">https://ukzs.org/</a><br><a href="https://p.aoo.pub/%E9%BB%91%E7%A7%91%E6%8A%80%E4%BA%91%E7%9B%98">https://p.aoo.pub/黑科技云盘</a><br><a href="https://srloud.com/%E8%8B%B9%E6%9E%9Cios">https://srloud.com/苹果ios</a> 自签应用<br><a href="https://iosapp6.top/">https://iosapp6.top/</a><br><a href="https://pan.iosi.vip/">https://pan.iosi.vip</a><br><a href="https://www.123pan.com/s/QajA-4Axmh">https://www.123pan.com/s/QajA-4Axmh</a><br><a href="https://pan.ios98.com/">https://pan.ios98.com</a></p><p>浪神官网<br><a href="https://xina.ss03.cn/">https://xina.ss03.cn</a><br>电话助手iOS15公测版 同步更新发布<br>源：<a href="https://apt.htv123.com/">https://apt.htv123.com</a><br>电话助手官方源：<br><a href="https://apt.htv123.com/">https://apt.htv123.com</a><br>小苹果源：<br><a href="https://apt.cydiabc.top/">https://apt.cydiabc.top</a><br>Netskao源：<br><a href="https://repo.initnil.com/">https://repo.initnil.com</a><br>冷冷源（新地址）:<br><a href="https://lenglengyu.com/">https://lenglengyu.com</a><br>嗨客源（汉化补丁)：<br><a href="http://repo.qgtlr.com/">http://repo.qgtlr.com/</a><br>Apptools插件作者源：<br><a href="https://flex2areo.github.io/">https://flex2areo.github.io</a></p><p>安装源<br><a href="https://lenglengyu.com/">https://lenglengyu.com/</a><br>安装插件Crick it<br><a href="http://limneos.net/repo/">http://limneos.net/repo/</a><br>安装插件 Glow</p>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea教程-创建一个maven版的javaweb项目</title>
      <link href="/archives/c98b4038.html"/>
      <url>/archives/c98b4038.html</url>
      
        <content type="html"><![CDATA[<h1 id="【IDEA教程】详解-IDEA-创建一个-Maven-版的-Java-Web-项目"><a href="#【IDEA教程】详解-IDEA-创建一个-Maven-版的-Java-Web-项目" class="headerlink" title="【IDEA教程】详解 IDEA 创建一个 Maven 版的 Java Web 项目"></a>【IDEA教程】详解 IDEA 创建一个 Maven 版的 Java Web 项目</h1><h3 id="操作演示"><a href="#操作演示" class="headerlink" title="操作演示"></a><strong>操作演示</strong></h3><p>打开 IDEA，点击上面的 <code>NEw Project</code></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231203233.png" alt="图片"></p><p>选择左侧的 <code>Maven</code>，在点击下方的 <code>Next</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231203258.png" alt="图片"></p><p>对项目进行命名，并且选择存放的本地位置，然后点击下面的 Finish。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231203326.png" alt="图片"></p><p>这时候，Maven 版的 Java Web 项目就已经创建好了。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231203347.png" alt="图片"></p><p>这里我看到左边的文件目录，打开 <code>src</code> 再打开 <code>main</code>，这里已经自动为大家创建好了 Java 目录和 resources 目录。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231203414.png" alt="图片"></p><p>现在我们需要手动在 main 目录下创建 webapp 目录，并且在 webapp 目录下创建 WEB-INF 目录。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231203443.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231203506.png" alt="图片"></p><p>现在我们点击上方菜单栏的 <code>File</code> ，再点击 <code>Project Structure</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231203527.png" alt="图片"></p><p>选择左侧的 <code>Modules</code> ，再点击 <code>+</code> 按钮，往下划添加 <code>Web</code> 模块。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231203556.png" alt="图片"></p><p>按照图片上的标识，点击 <code>-</code>按钮，默认的两项都删除了。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231203620.png" alt="图片"></p><p>删除之后，我们点击上方 <code>+</code> 按钮，添加新内容，web.xml文件指向之前创建WEB-INF目录。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231203700.png" alt="图片"></p><p>再点击下面的 <code>+</code> 按钮，将web目录设置为之前创建的webapp目录。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231203811.png" alt="图片"></p><p>确定之后，我们再看到左侧的文件目录，webapp目录图标变了，并且WEB-INF目录下创建了一个web.xml文件。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231203847.png" alt="图片"></p><p>现在我们配置 TomCat，我们跟着下方图片的标识，点击 IDEA 右上角。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231203912.png" alt="图片"></p><p>点击左上角的 <code>+</code> 按钮，鼠标往下滑选择 <code>Tomcat Server</code> ，再选择 <code>Local</code>（本地的Tomcat）。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231203938.png" alt="图片"></p><p>选择本地Tomcat根目录，如果你本地的 Tomcat没问题的话，就会自动识别到版本号。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231204003.png" alt="图片"></p><p>紧接着，点击上面的 <code>Deployment</code> ，点击 <code>+</code> 按钮，并且选择 <code>Artifact...</code></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231204031.png" alt="图片"></p><p>点击 <code>Apply</code> ，再带点击 <code>OK</code> ，就好了，此时我们就把 IDEA 配置好了。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231204056.png" alt="图片"></p><p>现在我们的项目已经配置好了，来验证一下。</p><p>在<code>webapp</code>目录下创建一个 html 文件，这里命名为 index.html</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231204119.png" alt="图片"></p><p>在你新建的 html 文件中，添加些内容，这里我就简单的加了一句 Hello World。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231204201.png" alt="图片"></p><p>然后点击 右上角的运行按钮，稍等一会儿，就会你电脑默认浏览器中打开这个页面。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231204226.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> QuickStart </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker镜像构建保姆级入门实践指南</title>
      <link href="/archives/2ed7a2e6.html"/>
      <url>/archives/2ed7a2e6.html</url>
      
        <content type="html"><![CDATA[<h1 id="【云原生】镜像构建实战操作（Dockerfile）"><a href="#【云原生】镜像构建实战操作（Dockerfile）" class="headerlink" title="【云原生】镜像构建实战操作（Dockerfile）"></a><a href="https://www.cnblogs.com/liugp/p/16629535.html">【云原生】镜像构建实战操作（Dockerfile）</a></h1><p>目录</p><ul><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#%E4%B8%80%E6%A6%82%E8%BF%B0">一、概述</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#%E4%BA%8Cdockerfile%E7%BB%93%E6%9E%84">二、Dockerfile结构</a></li><li>三、常用Dockerfile操作指令<ul><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#1%E9%95%9C%E5%83%8F%E6%9E%84%E5%BB%BAdocker-build">1）镜像构建（docker build）</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#2%E8%BF%90%E8%A1%8C%E5%AE%B9%E5%99%A8%E6%B5%8B%E8%AF%95docker-run">2）运行容器测试（docker run）</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#3arg">3）ARG</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#4from">4）FROM</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#5maintainer%E5%B7%B2%E5%BC%83%E7%94%A8">5）MAINTAINER（已弃用）</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#6volume">6）VOLUME</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#7run">7）RUN</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#8copy">8）COPY</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#9add">9）ADD</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#10env">10）ENV</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#11workdir">11）WORKDIR</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#12user">12）USER</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#13expose">13）EXPOSE</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#14cmd">14）CMD</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#15entrypoint">15）ENTRYPOINT</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#16healthcheck">16）HEALTHCHECK</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#17onbuild">17）ONBUILD</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#18label">18）LABEL</a></li></ul></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#%E5%9B%9Barg-%E5%92%8C-env-%E7%9A%84%E5%8C%BA%E5%88%AB">四、ARG 和 ENV 的区别</a></li><li>五、CMD，ENTRYPOINT，command，args场景测试<ul><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#1command%E5%92%8Cargs%E4%B8%8D%E5%AD%98%E5%9C%A8%E5%9C%BA%E6%99%AF%E6%B5%8B%E8%AF%95">1）command和args不存在场景测试</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#2command%E5%AD%98%E5%9C%A8%E4%BD%86args%E5%AD%98%E5%9C%A8%E5%9C%BA%E6%99%AF%E6%B5%8B%E8%AF%95">2）command存在，但args存在场景测试</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#3command%E4%B8%8D%E5%AD%98%E5%9C%A8%E4%BD%86args%E5%AD%98%E5%9C%A8%E5%9C%BA%E6%99%AF%E6%B5%8B%E8%AF%95">3）command不存在，但args存在场景测试</a></li><li><a href="https://www.cnblogs.com/liugp/p/16629535.html#4command%E5%92%8Cargs%E9%83%BD%E5%AD%98%E5%9C%A8%E5%9C%BA%E6%99%AF%E6%B5%8B%E8%AF%95">4）command和args都存在场景测试</a></li></ul></li></ul><h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><blockquote><p><code>Dockerfile</code> 是一个用来<strong>构建镜像的文本文件</strong>，文本内容包含了一条条构建镜像所需的指令和说明。</p></blockquote><p>官方文档：<a href="https://docs.docker.com/engine/reference/builder/">https://docs.docker.com/engine/reference/builder/</a><br>Dockerfile 示例：<a href="https://github.com/dockerfile/">https://github.com/dockerfile/</a></p><p><img src="https://img-blog.csdnimg.cn/c88e9e9920404024ad2f814f13b664c4.png" alt="在这里插入图片描述"></p><h2 id="二、Dockerfile结构"><a href="#二、Dockerfile结构" class="headerlink" title="二、Dockerfile结构"></a>二、Dockerfile结构</h2><p>Dockerfile结构主要分为四部分：</p><ul><li>基础镜像信息</li><li>维护者信息</li><li>镜像操作指令</li><li>容器启动时执行指令 （CMD/ENTRYPOINT)</li></ul><blockquote><p>【温馨提示】Dockerfile每行支持一条指令，每条指令可携带多个参数(支持&amp;&amp;），支持使用以“#“号开头的注释（jason文件不支持#注释），但是也非必须满足上面的四点。</p></blockquote><h2 id="三、常用Dockerfile操作指令"><a href="#三、常用Dockerfile操作指令" class="headerlink" title="三、常用Dockerfile操作指令"></a>三、常用Dockerfile操作指令</h2><ul><li><code>ARG</code>—— 定义创建镜像过程中使用的变量 ，唯一一个可以在FROM之前定义 。</li><li><code>FROM</code>——基于某个镜像， <code>FROM</code>前面只能有一个或多个<code>ARG</code>指令 。</li><li><code>MAINTAINER</code>（已弃用） —— 镜像维护者姓名或邮箱地址 。</li><li><code>VOLUME</code> —— 指定容器挂载点到宿主机自动生成的目录或其他容器</li><li><code>RUN</code>——执行镜像里的命令，跟在liunx执行命令一样，只需要在前面加上RUN关键词就行。</li><li><code>COPY</code>——复制本地（宿主机）上的文件到镜像。</li><li><code>ADD</code>——复制并解压（宿主机）上的压缩文件到镜像。</li><li><code>ENV</code>——设置环境变量。</li><li><code>WORKDIR</code> —— 为 RUN、CMD、ENTRYPOINT、COPY 和 ADD 设置工作目录，就是切换目录 。</li><li><code>USER</code> —— 为RUN、CMD、和 ENTRYPOINT 执行命令指定运行用户。</li><li><code>EXPOSE</code> —— 声明容器的服务端口（仅仅是声明） 。</li><li><code>CMD</code>—— 容器启动后执行的命令 ，多个CMD只会执行最后一个，跟ENTRYPOINT的区别是，CMD可以作为ENTRYPOINT的参数，且会被yaml文件里的command覆盖。</li><li><code>ENTRYPOINT</code>—— 容器启动后执行的命令 ，多个只会执行最后一个。</li><li><code>HEALTHCHECH</code> —— 健康检查 。</li><li><code>ONBUILD</code>——它后面跟的是其它指令，比如 <code>RUN</code>, <code>COPY</code> 等，而这些指令，在当前镜像构建时并不会被执行。只有当以当前镜像为基础镜像，去构建下一级镜像的时候才会被执行。</li><li><code>LABEL</code>——LABEL 指令用来给镜像添加一些元数据（metadata），以键值对的形式 ，替换MAINTAINER。</li></ul><h3 id="1）镜像构建（docker-build）"><a href="#1）镜像构建（docker-build）" class="headerlink" title="1）镜像构建（docker build）"></a>1）镜像构建（docker build）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t text:v1 . --no-cache</span><br><span class="line"><span class="comment"># 要在构建后将映像标记到多个存储库中，请在运行命令-t时添加多个参数</span></span><br><span class="line">docker build -t shykes/myapp:1.0.2 -t shykes/myapp:latest .</span><br><span class="line"></span><br><span class="line"><span class="comment">### 参数解释</span></span><br><span class="line"><span class="comment"># -t：指定镜像名称</span></span><br><span class="line"><span class="comment"># . ：当前目录Dockerfile</span></span><br><span class="line"><span class="comment"># -f：指定Dockerfile路径</span></span><br><span class="line"><span class="comment">#  --no-cache：不缓存</span></span><br></pre></td></tr></table></figure><h3 id="2）运行容器测试（docker-run）"><a href="#2）运行容器测试（docker-run）" class="headerlink" title="2）运行容器测试（docker run）"></a>2）运行容器测试（docker run）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 非交互式运行</span></span><br><span class="line">docker run centos:7.4.1708 /bin/echo <span class="string">&quot;Hello world&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 交互式执行</span></span><br><span class="line"><span class="comment"># -t: 在新容器内指定一个伪终端或终端。</span></span><br><span class="line"><span class="comment">#-i: 允许你对容器内的标准输入 (STDIN) 进行交互。</span></span><br><span class="line"><span class="comment"># 会登录到docker环境中，交互式</span></span><br><span class="line">docker run -it centos:7.4.1708 /bin/bash</span><br><span class="line"><span class="comment"># -d：后台执行，加了 -d 参数默认不会进入容器</span></span><br><span class="line">docker run -itd centos:7.4.1708 /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment">### 进入容器</span></span><br><span class="line"><span class="comment"># 在使用 -d 参数时，容器启动后会进入后台。此时想要进入容器，可以通过以下指令进入：</span></span><br><span class="line"><span class="comment">#docker exec -it ：推荐大家使用 docker exec -it 命令，因为此命令会退出容器终端，但不会导致容器的停止。</span></span><br><span class="line"><span class="comment">#docker attach：容器退出，会导致容器的停止。</span></span><br><span class="line">docker <span class="built_in">exec</span> -it  b2c0235dc53 /bin/bash</span><br><span class="line">docker attach  b2c0235dc53</span><br></pre></td></tr></table></figure><h3 id="3）ARG"><a href="#3）ARG" class="headerlink" title="3）ARG"></a>3）ARG</h3><blockquote><p>构建参数，与 ENV 作用一致。不过作用域不一样。ARG 设置的环境变量仅对 Dockerfile 内有效，也就是说只有 docker build 的过程中有效，构建好的镜像内不存在此环境变量。 唯一一个可以在FROM之前定义 。 构建命令 docker build 中可以用 –build-arg &lt;参数名&gt;=&lt;值&gt; 来覆盖。</p></blockquote><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ARG &lt;参数名&gt;[=&lt;默认值&gt;]</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在FROM之前定义ARG，只在 FROM 中生效</span></span><br><span class="line">ARG VERSION=laster</span><br><span class="line">FROM centos:<span class="variable">$&#123;VERSION&#125;</span></span><br><span class="line"><span class="comment"># 在FROM之后使用，得重新定义，不需要赋值</span></span><br><span class="line">ARG VERSION</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="variable">$VERSION</span> &gt;/tmp/image_version</span><br></pre></td></tr></table></figure><h3 id="4）FROM"><a href="#4）FROM" class="headerlink" title="4）FROM"></a>4）FROM</h3><blockquote><p>定制的镜像都是基于 FROM 的镜像 ，【必选项】</p></blockquote><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM [--platform=&lt;platform&gt;] &lt;image&gt; [AS &lt;name&gt;]</span><br><span class="line">FROM [--platform=&lt;platform&gt;] &lt;image&gt;[:&lt;tag&gt;] [AS &lt;name&gt;]</span><br><span class="line">FROM [--platform=&lt;platform&gt;] &lt;image&gt;[@&lt;digest&gt;] [AS &lt;name&gt;]</span><br></pre></td></tr></table></figure><blockquote><p>如果引用多平台图像，可选<code>--platform</code>标志可用于指定图像的平台。<code>FROM</code>例如，<code>linux/amd64</code>、 <code>linux/arm64</code>或<code>windows/amd64</code>。默认情况下，使用构建请求的目标平台。全局构建参数可用于此标志的值，例如允许您将阶段强制为原生构建平台 ( <code>--platform=$BUILDPLATFORM</code>)，并使用它交叉编译到阶段内的目标平台。</p></blockquote><p>示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ARG VERSION=latest</span><br><span class="line">FROM busybox:<span class="variable">$VERSION</span></span><br><span class="line"><span class="comment"># FROM --platform=&quot;linux/amd64&quot; busybox:$VERSION</span></span><br><span class="line">ARG VERSION</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="variable">$VERSION</span> &gt; image_version</span><br></pre></td></tr></table></figure><h3 id="5）MAINTAINER（已弃用）"><a href="#5）MAINTAINER（已弃用）" class="headerlink" title="5）MAINTAINER（已弃用）"></a>5）MAINTAINER（已弃用）</h3><blockquote><p>镜像维护者信息</p></blockquote><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MAINTAINER &lt;name&gt;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LABEL org.opencontainers.image.authors=<span class="string">&quot;SvenDowideit@home.org.au&quot;</span></span><br></pre></td></tr></table></figure><h3 id="6）VOLUME"><a href="#6）VOLUME" class="headerlink" title="6）VOLUME"></a>6）VOLUME</h3><blockquote><p>定义匿名数据卷。在启动容器时忘记挂载数据卷，会自动挂载到匿名卷。</p></blockquote><p>作用：</p><ul><li>避免重要的数据，因容器重启而丢失，这是非常致命的。</li><li>避免容器不断变大。</li><li>在启动容器 docker run 的时候，我们可以通过 -v 参数修改挂载点。</li></ul><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 后面路径是容器内的路径，对应宿主机的目录是随机的</span></span><br><span class="line">VOLUME [<span class="string">&quot;&lt;路径1&gt;&quot;</span>, <span class="string">&quot;&lt;路径2&gt;&quot;</span>...]</span><br><span class="line">VOLUME &lt;路径&gt;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM ubuntu</span><br><span class="line">RUN <span class="built_in">mkdir</span> /myvol</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span> &gt; /myvol/greeting</span><br><span class="line">VOLUME /myvol</span><br></pre></td></tr></table></figure><h3 id="7）RUN"><a href="#7）RUN" class="headerlink" title="7）RUN"></a>7）RUN</h3><blockquote><p>用于执行后面跟着的命令行命令。</p></blockquote><p>语法格式：</p><ul><li><code>RUN</code>（<em>shell</em>形式，命令在 shell 中运行，默认<code>/bin/sh -c</code>在 Linux 或<code>cmd /S /C</code>Windows 上）</li><li><code>RUN [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</code>（<em>执行</em>形式）</li></ul><p>示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 以下三种写法等价</span></span><br><span class="line">RUN /bin/bash -c <span class="string">&#x27;source $HOME/.bashrc; \</span></span><br><span class="line"><span class="string">echo $HOME&#x27;</span></span><br><span class="line"></span><br><span class="line">RUN /bin/bash -c <span class="string">&#x27;source $HOME/.bashrc; echo $HOME&#x27;</span></span><br><span class="line"></span><br><span class="line">RUN [<span class="string">&quot;/bin/bash&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;source <span class="variable">$HOME</span>/.bashrc; echo <span class="variable">$HOME</span>&quot;</span>]</span><br></pre></td></tr></table></figure><h3 id="8）COPY"><a href="#8）COPY" class="headerlink" title="8）COPY"></a>8）COPY</h3><blockquote><p>拷贝（宿主机）文件或目录到容器中，跟ADD类似，但不具备自动下载或解压的功能 。 所有新文件和目录都使用 0 的 UID 和 GID 创建，除非可选<code>--chown</code>标志指定给定的用户名、组名或 UID/GID 组合以请求复制内容的特定所有权。</p></blockquote><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">COPY [--<span class="built_in">chown</span>=&lt;user&gt;:&lt;group&gt;] &lt;src&gt;... &lt;dest&gt;</span><br><span class="line">COPY [--<span class="built_in">chown</span>=&lt;user&gt;:&lt;group&gt;] [<span class="string">&quot;&lt;src&gt;&quot;</span>,... <span class="string">&quot;&lt;dest&gt;&quot;</span>]</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加所有以“hom”开头的文件：</span></span><br><span class="line">COPY hom* /mydir/</span><br><span class="line"><span class="comment"># ?替换为任何单个字符，例如“home.txt”。</span></span><br><span class="line">COPY hom?.txt /mydir/</span><br><span class="line"><span class="comment"># 使用相对路径，并将“test.txt”添加到&lt;WORKDIR&gt;/relativeDir/：</span></span><br><span class="line">COPY test.txt relativeDir/</span><br><span class="line"><span class="comment"># 使用绝对路径，并将“test.txt”添加到/absoluteDir/</span></span><br><span class="line">COPY test.txt /absoluteDir/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改文件权限</span></span><br><span class="line">COPY --<span class="built_in">chown</span>=55:mygroup files* /somedir/</span><br><span class="line">COPY --<span class="built_in">chown</span>=bin files* /somedir/</span><br><span class="line">COPY --<span class="built_in">chown</span>=1 files* /somedir/</span><br><span class="line">COPY --<span class="built_in">chown</span>=10:11 files* /somedir/</span><br></pre></td></tr></table></figure><h3 id="9）ADD"><a href="#9）ADD" class="headerlink" title="9）ADD"></a>9）ADD</h3><blockquote><p>拷贝文件或目录到容器中，如果是URL或压缩包便会自动下载或自动解压 。</p></blockquote><p>ADD 指令和 COPY 的使用格类似（同样需求下，官方推荐使用 COPY）。功能也类似，不同之处如下：</p><ul><li><strong>ADD 的优点</strong>：在执行 &lt;源文件&gt; 为 tar 压缩文件的话，压缩格式为 gzip, bzip2 以及 xz 的情况下，会自动复制并解压到 &lt;目标路径&gt;。</li><li><strong>ADD 的缺点</strong>：在不解压的前提下，无法复制 tar 压缩文件。会令镜像构建缓存失效，从而可能会令镜像构建变得比较缓慢。具体是否使用，可以根据是否需要自动解压来决定。</li></ul><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ADD [--<span class="built_in">chown</span>=&lt;user&gt;:&lt;group&gt;] &lt;src&gt;... &lt;dest&gt;</span><br><span class="line">ADD [--<span class="built_in">chown</span>=&lt;user&gt;:&lt;group&gt;] [<span class="string">&quot;&lt;src&gt;&quot;</span>,... <span class="string">&quot;&lt;dest&gt;&quot;</span>]</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 通配符</span></span><br><span class="line">ADD hom* /mydir/</span><br><span class="line"><span class="comment"># 相对路径，拷贝到WORKDIR目录下relativeDir/</span></span><br><span class="line">ADD test.txt relativeDir/</span><br><span class="line"><span class="comment"># 绝对路径</span></span><br><span class="line">ADD test.txt /absoluteDir/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改权限</span></span><br><span class="line">ADD --<span class="built_in">chown</span>=55:mygroup files* /somedir/</span><br><span class="line">ADD --<span class="built_in">chown</span>=bin files* /somedir/</span><br><span class="line">ADD --<span class="built_in">chown</span>=1 files* /somedir/</span><br><span class="line">ADD --<span class="built_in">chown</span>=10:11 files* /somedir/</span><br></pre></td></tr></table></figure><p>ADD 和 COPY 的区别和使用场景：</p><ul><li>ADD 支持添加远程 url 和自动提取压缩格式的文件，COPY 只允许从本机中复制文件</li><li>COPY 支持从其他构建阶段中复制源文件(–from)</li><li>根据官方 Dockerfile 最佳实践，除非真的需要从远程 url 添加文件或自动提取压缩文件才用 ADD，其他情况一律使用 COPY</li></ul><h3 id="10）ENV"><a href="#10）ENV" class="headerlink" title="10）ENV"></a>10）ENV</h3><blockquote><p>设置环境变量，定义了环境变量，那么在后续的指令中，就可以使用这个环境变量。</p></blockquote><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENV &lt;key1&gt;=&lt;value1&gt; &lt;key2&gt;=&lt;value2&gt;...</span><br><span class="line"><span class="comment"># 省略&quot;=&quot;此语法不允许在单个ENV指令中设置多个环境变量，并且可能会造成混淆。</span></span><br><span class="line">ENV &lt;key&gt; &lt;value&gt;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENV JAVA_HOME=/usr/local/jdk</span><br><span class="line">ENV MY_NAME=<span class="string">&quot;John Doe&quot;</span> MY_DOG=Rex\ The\ Dog \</span><br><span class="line">    MY_CAT=fluffy</span><br><span class="line"><span class="comment"># 此语法不允许在单个ENV指令中设置多个环境变量，并且可能会造成混淆。</span></span><br><span class="line">ENV JAVA_HOME /usr/local/jdk</span><br></pre></td></tr></table></figure><h3 id="11）WORKDIR"><a href="#11）WORKDIR" class="headerlink" title="11）WORKDIR"></a>11）WORKDIR</h3><blockquote><p>指定工作目录。用 WORKDIR 指定的工作目录，会在构建镜像的每一层中都存在。（WORKDIR 指定的工作目录，必须是提前创建好的）。</p></blockquote><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WORKDIR &lt;工作目录路径&gt;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM busybox</span><br><span class="line">ENV FOO=/bar</span><br><span class="line">WORKDIR <span class="variable">$&#123;FOO&#125;</span>   <span class="comment"># WORKDIR /bar</span></span><br></pre></td></tr></table></figure><h3 id="12）USER"><a href="#12）USER" class="headerlink" title="12）USER"></a>12）USER</h3><blockquote><p>用于指定执行后续命令的用户和用户组，这边只是切换后续命令执行的用户（用户和用户组必须提前已经存在）。</p></blockquote><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">USER &lt;用户名&gt;[:&lt;用户组&gt;]</span><br><span class="line">USER &lt;UID&gt;[:&lt;GID&gt;]</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM busybox</span><br><span class="line">RUN groupadd --system --gid=9999 admin &amp;&amp; useradd --system --home-dir /home/admin --uid=9999 --gid=admin admin</span><br><span class="line">USER admin:admin</span><br><span class="line"><span class="comment"># USER 9999:9999</span></span><br></pre></td></tr></table></figure><h3 id="13）EXPOSE"><a href="#13）EXPOSE" class="headerlink" title="13）EXPOSE"></a>13）EXPOSE</h3><blockquote><p>暴露端口 ，仅仅只是声明端口。</p></blockquote><p>作用：</p><ul><li>帮助镜像使用者理解这个镜像服务的守护端口，以方便配置映射。</li><li>在运行时使用随机端口映射时，也就是 docker run -P 时，会自动随机映射 EXPOSE 的端口。</li></ul><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 默认情况下，EXPOSE假定 TCP。</span></span><br><span class="line">EXPOSE &lt;port&gt; [&lt;port&gt;/&lt;protocol&gt;...]</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">EXPOSE 80/TCP 443/TCP</span><br><span class="line">EXPOSE 80 443</span><br><span class="line">EXPOSE 80/tcp</span><br><span class="line">EXPOSE 80/udp</span><br></pre></td></tr></table></figure><h3 id="14）CMD"><a href="#14）CMD" class="headerlink" title="14）CMD"></a>14）CMD</h3><blockquote><p>类似于 RUN 指令，用于运行程序，但二者运行的时间点不同：CMD 在构建镜像时不会执行，在容器运行 时运行。</p></blockquote><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CMD &lt;shell 命令&gt;</span><br><span class="line">CMD [<span class="string">&quot;&lt;可执行文件或命令&gt;&quot;</span>,<span class="string">&quot;&lt;param1&gt;&quot;</span>,<span class="string">&quot;&lt;param2&gt;&quot;</span>,...] </span><br><span class="line">CMD [<span class="string">&quot;&lt;param1&gt;&quot;</span>,<span class="string">&quot;&lt;param2&gt;&quot;</span>,...]  <span class="comment"># 该写法是为 ENTRYPOINT 指令指定的程序提供默认参数</span></span><br></pre></td></tr></table></figure><blockquote><p>推荐使用第二种格式，执行过程比较明确。第一种格式实际上在运行的过程中也会自动转换成第二种格式运行，并且默认可执行文件是 sh。</p></blockquote><p>示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CMD <span class="built_in">cat</span> /etc/profile</span><br><span class="line">CMD [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;/etc/profile&quot;</span>]</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：如果 Dockerfile 中如果存在多个 CMD 指令，仅最后一个生效。</p></blockquote><h3 id="15）ENTRYPOINT"><a href="#15）ENTRYPOINT" class="headerlink" title="15）ENTRYPOINT"></a>15）ENTRYPOINT</h3><blockquote><p>类似于 CMD 指令，但其不会被 docker run 的命令行参数指定的指令所覆盖，而且这些命令行参数会被当作参数送给 ENTRYPOINT 指令指定的程序。但是, 如果运行 docker run 时使用了 –entrypoint 选项，将覆盖 ENTRYPOINT 指令指定的程序。在k8s中command也会覆盖ENTRYPOINT 指令指定的程序</p></blockquote><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># exec形式，这是首选形式：</span></span><br><span class="line">ENTRYPOINT [<span class="string">&quot;executable&quot;</span>, <span class="string">&quot;param1&quot;</span>, <span class="string">&quot;param2&quot;</span>]</span><br><span class="line"><span class="comment"># 外壳形式：</span></span><br><span class="line">ENTRYPOINT <span class="built_in">command</span> param1 param2</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM ubuntu</span><br><span class="line">ENTRYPOINT [<span class="string">&quot;top&quot;</span>, <span class="string">&quot;-b&quot;</span>]</span><br><span class="line"><span class="comment"># CMD作为ENTRYPOINT参数</span></span><br><span class="line">CMD [<span class="string">&quot;-c&quot;</span>]</span><br><span class="line"><span class="comment"># 与下面的等价</span></span><br><span class="line">ENTRYPOINT [<span class="string">&quot;top&quot;</span>, <span class="string">&quot;-b -c&quot;</span>]</span><br><span class="line">ENTRYPOINT  top -b -c </span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：如果 Dockerfile 中如果存在多个 ENTRYPOINT 指令，仅最后一个生效。</p></blockquote><h3 id="16）HEALTHCHECK"><a href="#16）HEALTHCHECK" class="headerlink" title="16）HEALTHCHECK"></a>16）HEALTHCHECK</h3><blockquote><p>用于指定某个程序或者指令来监控 docker 容器服务的运行状态。</p></blockquote><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">HEALTHCHECK [OPTIONS] CMD <span class="built_in">command</span>（通过在容器内运行命令检查容器运行状况）</span><br><span class="line">HEALTHCHECK NONE（禁用从基础映像继承的任何运行状况检查）</span><br></pre></td></tr></table></figure><p>选项<code>CMD</code>有：</p><ul><li><code>--interval=DURATION</code>（默认<code>30s</code>：）：间隔，频率</li><li><code>--timeout=DURATION</code>（默认<code>30s</code>：）：超时时间</li><li><code>--start-period=DURATION</code>（默认<code>0s</code>：）： 为需要时间引导的容器提供初始化时间， 在此期间探测失败将不计入最大重试次数。</li><li><code>--retries=N</code>（默认<code>3</code>：）：重试次数</li></ul><p>命令的<code>exit status</code>指示容器的运行状况。可能的值为：</p><ul><li>0：健康状态，容器健康且已准备完成。</li><li>1：不健康状态，容器工作不正常。</li><li>2：保留，不要使用此退出代码。</li></ul><p>示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM nginx</span><br><span class="line">MAINTAINER Securitit</span><br><span class="line">HEALTHCHECK --interval=5s --<span class="built_in">timeout</span>=3s \</span><br><span class="line">  CMD curl -f http://localhost/ || <span class="built_in">exit</span> 1</span><br><span class="line">CMD [<span class="string">&quot;usr/sbin/nginx&quot;</span>, <span class="string">&quot;-g&quot;</span>, <span class="string">&quot;daemon off;&quot;</span>]</span><br></pre></td></tr></table></figure><h3 id="17）ONBUILD"><a href="#17）ONBUILD" class="headerlink" title="17）ONBUILD"></a>17）ONBUILD</h3><blockquote><p><code>ONBUILD</code> 是一个特殊的指令，它后面跟的是其它指令，比如 <code>RUN</code>, <code>COPY</code> 等，而这些指令，在当前镜像构建时并不会被执行。只有当以当前镜像为基础镜像，去构建下一级镜像的时候才会被执行。</p></blockquote><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ONBUILD &lt;其它指令&gt;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM node:slim</span><br><span class="line">RUN <span class="built_in">mkdir</span> /app</span><br><span class="line">WORKDIR /app</span><br><span class="line">ONBUILD COPY ./package.json /app</span><br><span class="line">ONBUILD RUN [ <span class="string">&quot;npm&quot;</span>, <span class="string">&quot;install&quot;</span> ]</span><br><span class="line">ONBUILD COPY . /app/</span><br><span class="line">CMD [ <span class="string">&quot;npm&quot;</span>, <span class="string">&quot;start&quot;</span> ]</span><br></pre></td></tr></table></figure><h3 id="18）LABEL"><a href="#18）LABEL" class="headerlink" title="18）LABEL"></a>18）LABEL</h3><blockquote><p>LABEL 指令用来给镜像添加一些元数据（metadata），以键值对的形式。用来替代MAINTAINER。</p></blockquote><p>语法格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LABEL &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; ...</span><br></pre></td></tr></table></figure><p>示例： 比如我们可以添加镜像的作者</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LABEL org.opencontainers.image.authors=<span class="string">&quot;runoob&quot;</span></span><br></pre></td></tr></table></figure><h2 id="四、ARG-和-ENV-的区别"><a href="#四、ARG-和-ENV-的区别" class="headerlink" title="四、ARG 和 ENV 的区别"></a>四、ARG 和 ENV 的区别</h2><ul><li>ARG 定义的变量只会存在于镜像构建过程，启动容器后并不保留这些变量</li><li>ENV 定义的变量在启动容器后仍然保留</li></ul><h2 id="五、CMD，ENTRYPOINT，command，args场景测试"><a href="#五、CMD，ENTRYPOINT，command，args场景测试" class="headerlink" title="五、CMD，ENTRYPOINT，command，args场景测试"></a>五、CMD，ENTRYPOINT，command，args场景测试</h2><p>当用户同时在kubernetes中的yaml文件中写了<code>command</code>和<code>args</code>的时候，默认是会覆盖<code>DockerFile</code>中的命令行和参数，完整的情况分类如下：</p><h3 id="1）command和args不存在场景测试"><a href="#1）command和args不存在场景测试" class="headerlink" title="1）command和args不存在场景测试"></a>1）command和args不存在场景测试</h3><blockquote><p>如果command和args都没有写，那么用<code>DockerFile</code>默认的配置。</p></blockquote><p>Dockerfile</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM centos</span><br><span class="line"></span><br><span class="line">COPY test.sh /</span><br><span class="line"></span><br><span class="line">RUN <span class="built_in">chmod</span> +x /test.sh</span><br><span class="line"><span class="comment">### ENTRYPOINT将作为的子命令启动/bin/sh -c，它不会传递参数，要传递参数只能这样传参</span></span><br><span class="line"><span class="comment"># ENTRYPOINT [&quot;/bin/sh&quot;,&quot;-c&quot;,&quot;/test.sh ENTRYPOINT&quot;]</span></span><br><span class="line">ENTRYPOINT [<span class="string">&quot;/test.sh&quot;</span>,<span class="string">&quot;ENTRYPOINT&quot;</span>]</span><br><span class="line">CMD [<span class="string">&quot;CMD&quot;</span>]</span><br></pre></td></tr></table></figure><p>/tmp/test.sh</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $*</span><br></pre></td></tr></table></figure><p>构建</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t test1:v1 -f Dockerfile .</span><br></pre></td></tr></table></figure><p>yaml编排</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;</span> <span class="string">EOF</span> <span class="string">&gt;</span> <span class="string">test1.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">test</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">nodeName:</span> <span class="string">local-168-182-110</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">test:v1</span></span><br><span class="line">        <span class="comment">#command: [&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,&#x27;/test.sh&#x27;]</span></span><br><span class="line">        <span class="comment">#args: [&#x27;args&#x27;]</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f test.yaml</span><br></pre></td></tr></table></figure><h3 id="2）command存在，但args存在场景测试"><a href="#2）command存在，但args存在场景测试" class="headerlink" title="2）command存在，但args存在场景测试"></a>2）command存在，但args存在场景测试</h3><blockquote><p>如果command写了，但args没有写，那么Docker默认的配置会被忽略而且仅仅执行<code>.yaml</code>文件的command（不带任何参数的）。</p></blockquote><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;</span> <span class="string">EOF</span> <span class="string">&gt;</span> <span class="string">test2.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test2</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">test2</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">test2</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">nodeName:</span> <span class="string">local-168-182-110</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test2</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">test:v1</span></span><br><span class="line">        <span class="comment"># [&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,&#x27;/test.sh command&#x27;,&#x27;hello&#x27;]，加了&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,也是不能外部传参，不会输出hello，只能通过这样传参，[&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,&#x27;/test.sh command&#x27;]；CMD里面的参数会被忽略</span></span><br><span class="line">        <span class="attr">command:</span> [<span class="string">&#x27;/test.sh&#x27;</span>]</span><br><span class="line">        <span class="comment"># command带参数</span></span><br><span class="line">        <span class="comment"># command: [&#x27;/test.sh&#x27;,&#x27;command&#x27;]</span></span><br><span class="line">        <span class="comment">#args: [&#x27;args&#x27;]</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="3）command不存在，但args存在场景测试"><a href="#3）command不存在，但args存在场景测试" class="headerlink" title="3）command不存在，但args存在场景测试"></a>3）command不存在，但args存在场景测试</h3><blockquote><p>如果command没写，但args写了，那么Docker默认配置的ENTRYPOINT的命令行会被执行，但是调用的参数是<code>.yaml</code>中的args，CMD的参数会被覆盖，但是ENTRYPOINT自带的参数还是会执行的。</p></blockquote><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;</span> <span class="string">EOF</span> <span class="string">&gt;</span> <span class="string">test3.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test3</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">test3</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">nodeName:</span> <span class="string">local-168-182-110</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test3</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">test:v1</span></span><br><span class="line">        <span class="comment"># [&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,&#x27;/test.sh command&#x27;,&#x27;hello&#x27;]，加了&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,也是不能外部传参，不会输出hello，只能通过这样传参，[&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,&#x27;/test.sh command&#x27;]；CMD里面的参数会被忽略</span></span><br><span class="line">        <span class="comment"># command: [&#x27;/test.sh&#x27;]</span></span><br><span class="line">        <span class="comment"># command带参数</span></span><br><span class="line">        <span class="comment"># command: [&#x27;/test.sh&#x27;,&#x27;command&#x27;]</span></span><br><span class="line">        <span class="attr">args:</span> [<span class="string">&#x27;args&#x27;</span>]</span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="4）command和args都存在场景测试"><a href="#4）command和args都存在场景测试" class="headerlink" title="4）command和args都存在场景测试"></a>4）command和args都存在场景测试</h3><blockquote><p>如果如果command和args都写了，那么Docker默认的配置被忽略，使用<code>.yaml</code>的配置。</p></blockquote><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;</span> <span class="string">EOF</span> <span class="string">&gt;</span> <span class="string">test4.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test4</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">test4</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">test4</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">nodeName:</span> <span class="string">local-168-182-110</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test4</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">test:v1</span></span><br><span class="line">        <span class="comment"># [&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,&#x27;/test.sh command&#x27;,&#x27;hello&#x27;]，加了&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,也是不能外部传参，不会输出hello，只能通过这样传参，[&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,&#x27;/test.sh command&#x27;]；CMD里面的参数会被忽略</span></span><br><span class="line">        <span class="comment"># command: [&#x27;/test.sh&#x27;]</span></span><br><span class="line">        <span class="comment"># command带参数，command和args都会带上</span></span><br><span class="line">        <span class="attr">command:</span> [<span class="string">&#x27;/test.sh&#x27;</span>,<span class="string">&#x27;command&#x27;</span>]</span><br><span class="line">        <span class="attr">args:</span> [<span class="string">&#x27;args&#x27;</span>]</span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 指令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker部署前后端分离项目</title>
      <link href="/archives/46be515a.html"/>
      <url>/archives/46be515a.html</url>
      
        <content type="html"><![CDATA[<h1 id="手把手教你通过-Docker-部署前后端分离项目（亲测可用）"><a href="#手把手教你通过-Docker-部署前后端分离项目（亲测可用）" class="headerlink" title="手把手教你通过 Docker 部署前后端分离项目（亲测可用）"></a>手把手教你通过 Docker 部署前后端分离项目（亲测可用）</h1><ul><li>安装Docker</li><li>安装Nginx</li><li>安装Mysql</li><li>部署SpringBoot项目</li><li>部署Vue项目</li></ul><h3 id="一、安装Docker"><a href="#一、安装Docker" class="headerlink" title="一、安装Docker"></a>一、安装Docker</h3><p>1、安装：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install docker </span><br></pre></td></tr></table></figure><p>2、启动/停止/重启docker服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service docker start </span><br><span class="line">service docker stop </span><br><span class="line">service docker restart </span><br></pre></td></tr></table></figure><p>3、查看docker版本信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231205403.png" alt="图片"></p><p>4、运行helloword，因为不存在此镜像，docker会自动下载运行本镜像</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231205425.png" alt="图片"></p><p>5、查看所有docker镜像</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231205449.png" alt="图片"></p><h3 id="二、安装Nginx"><a href="#二、安装Nginx" class="headerlink" title="二、安装Nginx"></a>二、安装Nginx</h3><p>1、拉取Nginx镜像文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231205515.png" alt="图片"></p><p>2、查看下载好的镜像文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231205544.png" alt="图片"></p><p>3、创建并运行Nginx容器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --name nginx01 -p 3344:80 nginx</span><br><span class="line">命令详解：</span><br><span class="line"># docker run 启动一个镜像</span><br><span class="line"># -d 表示后台允许</span><br><span class="line"># --name nginx01  表示为当前容器起一个别名</span><br><span class="line"># -p 3344:80 表示将本机的3344端口映射到nginx镜像的80端口</span><br></pre></td></tr></table></figure><p>4、查看正在运行的容器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231205653.png" alt="图片"></p><p>5、查看Nginx是否部署成功</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl localhost:3344</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231205714.png" alt="图片"></p><h5 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h5><p>1、进入Nginx容器当中</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker exec -it nginx01 /bin/bash</span><br><span class="line">命令详解：</span><br><span class="line"># docker exec 在运行的容器中执行命令</span><br><span class="line"># -i 以交互模式运行容器，通常与 -t 同时使用；例如-it</span><br><span class="line"># -t 为容器重新分配一个伪输入终端，通常与 -i 同时使用；例如-it</span><br><span class="line"># nginx01 容器名</span><br><span class="line"># /bin/bash 其实就是表示载入容器后运行bash（命令语言解释程序）, 因为docker中必须要保持一个进程（运行的程序）的运行，要不然整个容器就会退出，所以说，bash就担任起了docker中运行的那个进程的角色！</span><br><span class="line">#而/bin/bash则是bash在linux下的位置</span><br></pre></td></tr></table></figure><p>2、在容器中查询出nginx的相关配置文件存放位置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">whereis nginx</span><br></pre></td></tr></table></figure><p>3、退出容器，回到本地linux系统</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><p>4、停止并移除Nginx容器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker stop bedfd2a72585 #停止容器</span><br><span class="line">docker rm bedfd2a72585 #移除容器</span><br><span class="line"># bedfd2a72585表示容器的ID，即：CONTAINER ID</span><br></pre></td></tr></table></figure><p>5、本地创建管理目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p /data/nginx</span><br><span class="line">mkdir -p /data/nginx/www </span><br><span class="line">mkdir -p /data/nginx/conf</span><br><span class="line">mkdir -p /data/nginx/logs</span><br></pre></td></tr></table></figure><p>6、将容器中的相应文件copy到刚创建的管理目录中</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker cp bedfd2a72585:/etc/nginx/nginx.conf /data/nginx/</span><br><span class="line">docker cp bedfd2a72585:/etc/nginx/conf.d /data/nginx/conf/</span><br><span class="line">docker cp bedfd2a72585:/usr/share/nginx/html/ /data/nginx/www/</span><br><span class="line">docker cp bedfd2a72585:/var/log/nginx/ /data/nginx/logs/</span><br></pre></td></tr></table></figure><blockquote><p>注：docker cp bedfd2a72585中的 “bedfd2a72585” 为容器ID（docker ps可查看）</p></blockquote><p>7、再次启动容器并作目录挂载</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --name nginx -p 80:80 -v /data/nginx/nginx.conf:/etc/nginx/nginx.conf -v /data/nginx/www/:/usr/share/nginx/html/ -v /data/nginx/logs/:/var/log/nginx/ -v /data/nginx/conf/:/etc/nginx/conf.d --privileged=true -d nginx</span><br></pre></td></tr></table></figure><blockquote><p>ps：-p 80:80 端口进行映射，将本地 80端口映射到容器内部的 80 端口。</p></blockquote><h3 id="三、安装Mysql"><a href="#三、安装Mysql" class="headerlink" title="三、安装Mysql"></a>三、安装Mysql</h3><p>1、下拉mysql镜像文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull mysql  #默认最新版本</span><br><span class="line"> </span><br><span class="line">docker pull mysql:xxx  #指定版本号</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231205735.png" alt="图片"></p><p>2、查看当前镜像</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231205913.png" alt="图片"></p><p>3、启动mysql容器</p><p>第一种：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --name mysql01 -d -p 3310:3306 -e MYSQL_ROOT_PASSWORD=root mysql</span><br></pre></td></tr></table></figure><p>命令详解：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># --name 自定义容器名称</span><br><span class="line"># -d 后台运行</span><br><span class="line"># -p 指定映射的端口号</span><br><span class="line"># -e MYSQL_ROOT_PASSWORD=root 数据库密钥</span><br></pre></td></tr></table></figure><p>第二种：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --restart=always --privileged=true -d -v /home/mysql/data:/var/lib/mysql -v /home/mysql/conf:/etc/mysql/conf.d -v /home/mysql/my.cnf:/etc/mysql/my.cnf -p 3311:3306 --name mysql02 -e MYSQL_ROOT_PASSWORD=root mysql</span><br></pre></td></tr></table></figure><ul><li><code>--restart=always</code>代表开启启动</li><li><code>--privileged=true</code>代表进入容器内部为管理员身份</li><li><code>-d</code>表示后台运行容器 并返回容器Id</li><li><code>-v</code>把mysql产生的数据同步到本地 防止数据丢失</li><li><code>-e</code>容器传参  设置mysql的初始密码</li></ul><p>4、查看正在运行的容器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210058.png" alt="图片"></p><p>5、测试数据库连接</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210118.png" alt="图片"></p><h3 id="四、部署SpringBoot项目"><a href="#四、部署SpringBoot项目" class="headerlink" title="四、部署SpringBoot项目"></a>四、部署SpringBoot项目</h3><p>1、整合后端成Jar包并编写Dockerfile文件</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210152.png" alt="图片"></p><p>2、Dockerfile内容详解</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FROM java:8  #工程java版本</span><br><span class="line"> </span><br><span class="line">COPY *.jar /app.jar  #将所有的jar包整合为app.jar</span><br><span class="line"> </span><br><span class="line">EXPOSE 9099  #暴露后端端口号</span><br><span class="line"> </span><br><span class="line">ENTRYPOINT [&quot;java&quot;,&quot;-jar&quot;,&quot;app.jar&quot;]  #执行jar包</span><br></pre></td></tr></table></figure><p>3、将文件上传到Linux服务器上面，必须放在同级目录一起！</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210212.png" alt="图片"></p><p>4、构建镜像</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker build -t api .  #点千万别漏了，这里取名镜像为api，可以随便取名！</span><br></pre></td></tr></table></figure><p>5、查看当前镜像</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210233.png" alt="图片"></p><p>6、创建一个新的容器并运行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -p 9099:9099 --name httapi api </span><br><span class="line">#将9099端口映射到9099端口，端口记得放开</span><br><span class="line">#httapi为自定义容器名字</span><br><span class="line">#api是镜像名字</span><br></pre></td></tr></table></figure><p>7、查看正在运行的容器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210304.png" alt="图片"></p><p>8、使用postman测试接口</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210328.png" alt="图片"></p><h3 id="五、部署Vue项目"><a href="#五、部署Vue项目" class="headerlink" title="五、部署Vue项目"></a>五、部署Vue项目</h3><p>1、打包Vue工程并同时编写default.conf文件和Dockerfile文件</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210350.png" alt="图片"></p><p>2、default.conf文件和Dockerfile文件详细</p><ul><li>default.conf配置</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  ip地址; # 修改为docker服务宿主机的ip</span><br><span class="line"> </span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        try_files $uri $uri/ /index.html =404;</span><br><span class="line">    &#125;</span><br><span class="line">     location /api &#123;</span><br><span class="line">      proxy_pass http://ip地址:端口号/;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Dockerfile配置</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 基础镜像使用Nginx</span><br><span class="line">FROM nginx</span><br><span class="line"># 作者</span><br><span class="line">MAINTAINER htt</span><br><span class="line"># 添加时区环境变量，亚洲，上海</span><br><span class="line">ENV TimeZone=Asia/Shanghai</span><br><span class="line"># 将前端dist文件中的内容复制到nginx目录</span><br><span class="line">COPY dist  /usr/share/nginx/html/</span><br><span class="line"># 用本地的nginx配置文件覆盖镜像的Nginx配置</span><br><span class="line">COPY default.conf /etc/nginx/conf.d</span><br><span class="line"># 暴露端口</span><br><span class="line">EXPOSE 80</span><br></pre></td></tr></table></figure><p>3、上传这三个文件到Linux服务器的同一个文件夹当中，务必放在一起！</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210408.png" alt="图片"></p><p>4、构建镜像</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker build -t vue . #点千万别漏了，这里取名镜像为vue，可以随便取名！</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210430.png" alt="图片"></p><p>5、查看当前镜像</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210448.png" alt="图片"></p><p>6、创建一个新的容器并运行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -p 8088:80 --name httvue vue </span><br><span class="line">#将8088端口映射到80端口，端口记得放开</span><br><span class="line">#httvue为自定义容器名字</span><br><span class="line">#vue是镜像名字</span><br></pre></td></tr></table></figure><p>7、查看正在运行的容器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210511.png" alt="图片"></p><p>8、访问前端页面并测试接口</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210536.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> 指令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>瑞星必喝咖啡</title>
      <link href="/archives/c8e24080.html"/>
      <url>/archives/c8e24080.html</url>
      
        <content type="html"><![CDATA[<h1 id="瑞星必喝榜单"><a href="#瑞星必喝榜单" class="headerlink" title="瑞星必喝榜单"></a>瑞星必喝榜单</h1><p>瑰夏奥瑞白</p><blockquote><p>相比拿铁，有更厚重的咖啡味道！口感香醇浓郁</p></blockquote><p>瑰夏美式</p><blockquote><p>最直接瑰夏花果香气，建议点冰款，口感更佳</p></blockquote><p>厚乳拿铁</p><blockquote><p>底下一层干奶酪酱，奶味超足咸甜咸甜的！巨好喝，搅匀之后就是淡淡的奶酪香</p></blockquote><p>瑰夏Dirty</p><blockquote><p>加入了厚牛乳中和咖啡的苦奶香更加浓郁，喜欢喝咖啡的一定要试试</p></blockquote><p>初恋青提小铁</p><blockquote><p>个人更爱喝这杯 厚牛乳和青提和咖啡的搭配！！可以要少甜~味道刚刚好喝比较清新</p></blockquote><p>富桂厚乳拿铁</p><blockquote><p>喜欢甜一点推荐这款 用的是0卡糖 喝的甜蜜蜜还长点肉肉！！谁不爱</p></blockquote><p><strong>青森苹果丝绒拿铁</strong></p><blockquote><p>个人更爱喝这杯 厚牛乳和青提和咖啡的搭配！！可以要少甜~味道刚刚好喝比较清新</p></blockquote><p>冰巧克力曲奇</p><blockquote><p>冰巧克力+奶油顶+巧克力曲奇 上面有很多巧克力豆把曲奇捏随后加入到冰巧克力中这样每一口能吃到巧克力曲奇超级赞</p></blockquote><p><strong>生椰丝绒备注放一泵香草糖浆</strong></p><p><strong>陨石厚乳拿铁</strong></p><p><strong>过年的第一杯奶茶</strong></p><p>1.奈雪的茶 霸气芝士黑桑椹</p><blockquote><p>26块钱中杯少甜，很新鲜很坚韧，爆爆的小爆珠，一粒一粒的桑椹颗粒</p></blockquote><p>2.一点点 珍珠银耳四季春</p><blockquote><p>热饮14块钱五分甜，养生茶，煮焦了的太妃糖味道，苦中有一点甜，一般</p></blockquote><p>3.一点点 银耳柚香锦鲤红</p><blockquote><p> 热18块钱五分甜，把上一杯的茶底换成了红茶搭配了蜂蜜柚子酱，酸甜，还不错</p></blockquote><p>4.古茗 妙手冰莓橘</p><blockquote><p> 少冰14块钱七分甜，好喝，解腻，唯一能吃到的果肉是草莓颗粒，介意太甜甜度选五分</p></blockquote><p>5.悸动烧仙草，狐妖小红娘联名</p><blockquote><p>热22块钱五分甜，有车厘子，可能因为是热的有点钙奶分层，还不如罐头，不好喝</p></blockquote><p>6.悸动烧仙草，莓厘雪山</p><blockquote><p>冰五分糖26块钱，有点没味道，冰开水</p></blockquote><p>7.瑞幸，前兔似锦厚乳拿铁</p><blockquote><p>冰原价35到手17.5少甜，买两杯送一个日历，好喝，很丝滑，有点重奶油感会重一点，能喝到咖啡的苦涩感</p></blockquote><p>8.瑞幸大展宏兔生酪拿铁</p><blockquote><p>原价35到手17.5冰少甜，很有特点，红豆很有特点，有点苦，新鲜感</p></blockquote><p>9.喜茶，红红火火山楂莓</p><blockquote><p>买两杯送一个福字，有点太甜了，山楂很新鲜，吃火锅可以喝这个酸酸甜甜，质感很好</p></blockquote><p>10.乐乐茶，一口黄桃罐头</p><blockquote><p>正常冰22块钱少甜，好喝，很脆很香甜，黄桃很多，选无糖会更好一点</p></blockquote><p>11.乐乐茶，溏心薯生椰雪酪</p><blockquote><p>正常冰22块钱少甜，带有椰香味的麻薯，爱红薯会喜欢他</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20230114194112.png" alt="img"></p><h1 id="咖啡配比"><a href="#咖啡配比" class="headerlink" title="咖啡配比"></a>咖啡配比</h1><p><img src="https://pic3.zhimg.com/v2-7651aa6ebe8fce1897979b1a9b55726b_r.jpg?source=1940ef5c" alt="img"></p><p> 1、浓缩咖啡 Espresso</p><p> 2、白咖啡 Flat white</p><p> 3、摩卡咖啡 Caffe Macha</p><p> 4、半拿铁Cafe Breve</p><p><img src="https://pic2.zhimg.com/v2-b904e598f1b3bde105292e059d7e9cae_r.jpg?source=1940ef5c" alt="img"></p><p> 5、美式咖啡 Americano</p><p> 6、拿铁咖啡 Caffe latte</p><p> 7、康宝蓝 Espresso Can Panna</p><p> 8、维也纳咖啡 Viennese coffee</p><p><img src="https://pic1.zhimg.com/v2-ff7de5d3d5f56bd221ecc8879d58e24a_r.jpg?source=1940ef5c" alt="img"></p><p> 9、玛奇朵 Macchiato</p><p> 10、卡布奇诺 Cappuccino</p><p> 11、焦糖玛奇朵 Caramel Macchiato</p><p> 12、爱尔兰咖啡 Irish coffee</p><p><img src="https://pic2.zhimg.com/v2-f73fc86aab324670c2f20b99fb38d337_r.jpg?source=1940ef5c" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> coffee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker安装与使用</title>
      <link href="/archives/2e9dcbbc.html"/>
      <url>/archives/2e9dcbbc.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装<code>Docker</code></h2><p>在<code>mac</code>平台下，就是去下载一个<code>dmg</code>的安装文件。下载好了之后，双击，然后拖入就可以了，<code>windows</code>应该也是类似的。</p><p>就是安装<code>qq</code>一样简单，傻瓜式的。</p><p>附上<code>dockerhub</code>上的下载链接：</p><blockquote><p><a href="https://hub.docker.com/search/?type=edition&amp;offering=community&amp;q=">https://hub.docker.com/search/?type=edition&amp;offering=community&amp;q=</a></p></blockquote><p>成功之后属于<code>docker version</code>如果出来版本信息就是安装成功，类似如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           18.09.0</span><br><span class="line"> API version:       1.39</span><br><span class="line"> Go version:        go1.10.4</span><br><span class="line"> Git commit:        4d60db4</span><br><span class="line"> Built:             Wed Nov  7 00:47:43 2018</span><br><span class="line"> OS/Arch:           darwin/amd64</span><br><span class="line"> Experimental:      false</span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          18.09.0</span><br><span class="line">  API version:      1.39 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.10.4</span><br><span class="line">  Git commit:       4d60db4</span><br><span class="line">  Built:            Wed Nov  7 00:55:00 2018</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     true</span><br></pre></td></tr></table></figure><h2 id="安装docker-composer"><a href="#安装docker-composer" class="headerlink" title="安装docker-composer"></a>安装<code>docker-composer</code></h2><p>一般来说，mac安装<code>docker</code>之后就会携带<code>docker-composer</code>。</p><p>其他平台，附上下载链接：</p><blockquote><p><a href="https://github.com/docker/compose/releases">https://github.com/docker/compose/releases</a></p></blockquote><p>安装完成之后可以输入命令检测</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">➜  ~ docker-compose version</span><br><span class="line">docker-compose version 1.23.2, build 1110ad01</span><br><span class="line">docker-py version: 3.6.0</span><br><span class="line">CPython version: 3.6.6</span><br><span class="line">OpenSSL version: OpenSSL 1.1.0h  27 Mar 2018</span><br></pre></td></tr></table></figure><p>如果没有出现版本相关信息，可以尝试再次安装</p><h2 id="下载laradock"><a href="#下载laradock" class="headerlink" title="下载laradock"></a>下载<code>laradock</code></h2><p><code>laradock</code>的项目地址是<code>https://github.com/laradock/laradock</code> 我们找一个地方<code>clone</code>下来即可</p><p>我这里是在我的用户目录下面新建了一个<code>Docker</code>目录，然后<code>clone</code>了项目下来</p><h2 id="配置env文件"><a href="#配置env文件" class="headerlink" title="配置env文件"></a>配置<code>env</code>文件</h2><ol><li><p>拷贝example成.env</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp env-example env</span><br></pre></td></tr></table></figure></li><li><p><code>.env</code>文件中<code>APP_CODE_PATH_HOST</code>是本地路径 <code>APP_CODE_PATH_CONTAINER</code>是远程映射路径，看需求修改，大多数情况下是不需要的</p></li><li><p>如果有调试代码的需求，也可以将<code>PHP_FPM_INSTALL_XDEBUG</code>和<code>WORKSPACE_INSTALL_XDEBUG</code>两个选项打开</p></li><li><p>如果还有其他的需求，可以在<code>.env</code>里面搜索，里面已经将大多数配置项都给独立出来了</p></li></ol><h2 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h2><p>进入到<code>laradock</code>的工作目录下面，就是<code>clone</code>的项目的根目录我的工作目录就是<code>~/Docker/laradock</code>。</p><p>然后运行如下命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d nginx mysql</span><br></pre></td></tr></table></figure><p>就会看到在自动执行<code>build</code>操作，并且build完了之后自动后台启动了如下容器</p><ul><li>nginx</li><li>php-fpm</li><li>workspace</li><li>mysql</li></ul><p>那是因为<code>php-fpm</code>和<code>workspace</code>还有<code>docker-in-docker</code>是随<code>nginx</code>一并启动的</p><p>所以实际上</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d nginx mysql</span><br></pre></td></tr></table></figure><p>和</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d nginx workspace php-fpm mysql</span><br></pre></td></tr></table></figure><p>这两条命令的效果是一样的，可以都带上，也可以不写。</p><p><code>up</code>命令在第一次启动的时候实际上就是<code>build</code> + <code>start</code>的组合，如果容器不存在，那么就<code>build</code>一个容器，并且启动服务，如果容器存在那么直接启动服务，大概就是这么个意思 <code>-d</code>的意思是后台运行</p><h2 id="配置web项目"><a href="#配置web项目" class="headerlink" title="配置web项目"></a>配置web项目</h2><p>一下是我<code>laravel</code>项目的部分配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DB_CONNECTION=mysql</span><br><span class="line">DB_HOST=mysql</span><br><span class="line">DB_PORT=3306</span><br><span class="line">DB_DATABASE=blog</span><br><span class="line">DB_USERNAME=root</span><br><span class="line">DB_PASSWORD=root</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>注意，数据库主机必须得是别名才可以，如果<code>DB_CONNECTION</code>这个地方输入172.0.0.1或者是<code>localhost</code>都是会连接失败的。</p><p>在其它的项目中也必须是这样的，配置数据库链接，<code>redis</code>，或者<code>MemCache</code>链接都必须设置成具体的别名。或者你说我找到各个容器的ip，可以嘛。可以，但是并不建议这样做，因为ip是会变动的。</p><p>具体别名可以参考<code>./docker-compose.yml</code>文件中的设置</p><p>这个主要的技术实现应该是用了<code>docker</code>的虚拟网桥技术.</p><h2 id="配置宿主机的host"><a href="#配置宿主机的host" class="headerlink" title="配置宿主机的host"></a>配置宿主机的<code>host</code></h2><p>因为，往往我们访问的时候，是通过宿主机上面的浏览器发送请求的，所以，配置宿主机上面的<code>host</code>必不可少。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure><p>我这里加入一条我自己设置的虚拟域名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1       blog.test</span><br></pre></td></tr></table></figure><p>然后保存，刷新下host。</p><h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置<code>nginx</code></h2><p>进入到<code>./laradock/nginx/sites</code>文件夹，然后<code>ll</code>一下，我们会发现，laradock已经帮我们放了好多列举的文件进来</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.conf.example default.conf laravel.conf.example symfony.conf.example</span><br></pre></td></tr></table></figure><p>根据需求拷贝一份，然后修改一下就可以了，都不是很难，由于我们本地是laravel开发的博客项目，所以我就直接拷贝<code>laravel.conf.example</code>，然后使用vim打开</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp laravel.conf.example blog.conf vim blog.conf</span><br></pre></td></tr></table></figure><p>打开后的内容…</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line"></span><br><span class="line">    # For https</span><br><span class="line">    # listen 443 ssl;</span><br><span class="line">    # listen [::]:443 ssl ipv6only=on;</span><br><span class="line">    # ssl_certificate /etc/nginx/ssl/default.crt;</span><br><span class="line">    # ssl_certificate_key /etc/nginx/ssl/default.key;</span><br><span class="line"></span><br><span class="line">    server_name laravel.test;</span><br><span class="line">    root /var/www/laravel/public;</span><br><span class="line">    index index.php index.html index.htm;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">         try_files $uri $uri/ /index.php$is_args$args;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        try_files $uri /index.php =404;</span><br><span class="line">        fastcgi_pass php-upstream;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_buffers 16 16k;</span><br><span class="line">        fastcgi_buffer_size 32k;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        #fixes timeouts</span><br><span class="line">        fastcgi_read_timeout 600;</span><br><span class="line">        include fastcgi_params;</span><br></pre></td></tr></table></figure><p>我们会发现，如果没有特殊需求的话，这个里面大多数地方我们并不需要修改。我们只需要关注<code>server_name</code>和<code>root</code>这两个参数，把这个里面的<code>laravel</code>换成我们项目名就可以了，这里我们换成<code>blog</code></p><p>下面是修改后的内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line"></span><br><span class="line">    # For https</span><br><span class="line">    # listen 443 ssl;</span><br><span class="line">    # listen [::]:443 ssl ipv6only=on;</span><br><span class="line">    # ssl_certificate /etc/nginx/ssl/default.crt;</span><br><span class="line">    # ssl_certificate_key /etc/nginx/ssl/default.key;</span><br><span class="line"></span><br><span class="line">    server_name blog.test;</span><br><span class="line">    root /var/www/blog/public;</span><br><span class="line">    index index.php index.html index.htm;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">         try_files $uri $uri/ /index.php$is_args$args;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        try_files $uri /index.php =404;</span><br><span class="line">        fastcgi_pass php-upstream;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_buffers 16 16k;</span><br><span class="line">        fastcgi_buffer_size 32k;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        #fixes timeouts</span><br><span class="line">        fastcgi_read_timeout 600;</span><br><span class="line">        include fastcgi_params;</span><br></pre></td></tr></table></figure><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p>输入<code>url</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://blog.test/</span><br></pre></td></tr></table></figure><p>浏览器返回结果</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210710.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> 指令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bt磁力链接合集</title>
      <link href="/archives/eb0e62b2.html"/>
      <url>/archives/eb0e62b2.html</url>
      
        <content type="html"><![CDATA[<h1 id="BT"><a href="#BT" class="headerlink" title="BT"></a>BT</h1><table><thead><tr><th>名称</th><th>简介</th><th>网址</th></tr></thead><tbody><tr><td>磁力多</td><td>推荐，国内资源非常丰富的磁力搜索引擎！</td><td><a href="https://ju.so99.top/">https://ciliduo.pw</a></td></tr><tr><td>BT吃力</td><td>推荐，国内资源最全，搜你想搜的磁力站！地址发布页：<a href="https://cursor.vip/vip">https://cursor.vip/vip</a> ，sokankan.top ，永久域名：<a href="https://jukan.xyz/">https://jukan.xyz</a></td><td><a href="https://jukan.xyz/">https://jukan.xyz</a></td></tr><tr><td>吴签磁力</td><td>推荐，干净、好用的磁力链和网盘资源搜索引擎！</td><td><a href="https://iwuqian.xyz/?_jubt">https://iwuqian.xyz</a></td></tr><tr><td>磁力猫</td><td>最好用的磁力链接搜索。永久地址发布页：https://磁力猫.com ，https://磁力猫.xyz ，https://魔法猫咪.lol</td><td><a href="https://猫和老鼠.com/">https://猫和老鼠.com</a></td></tr><tr><td>影视链</td><td>影视资源聚合搜索引擎，备用域名：u3c3.vip，u3c3.in，u3c3.live，地址发布页：<a href="https://github.com/u3c3/bt-btt">https://github.com/u3c3/bt-btt</a></td><td><a href="https://u3c3.cc/">https://u3c3.cc</a></td></tr><tr><td>BTSOW</td><td>地址发布页：<a href="https://tellme.pw/btsow">https://tellme.pw/btsow</a> ，永久域名（被墙）：btsow.com</td><td><a href="https://btsow.bar/tags">https://btsow.bar/tags</a></td></tr><tr><td>TorrentKitty</td><td>地址发布页：<a href="http://torrentkittyurl.com/tk">http://torrentkittyurl.com/tk</a> ，<a href="http://sosomagnet.com/">http://sosomagnet.com</a></td><td><a href="https://www.torrentkitty.live/search">https://www.torrentkitty.live/search</a></td></tr><tr><td>种子搜</td><td>地址发布页：zhongzidi9.com，zhongzidaohang.com ，永久域名（被墙）：zhongzilou.com，zhongziso.com，zhongzidi.com</td><td><a href="https://m.zhongziso54.xyz/">https://m.zhongziso54.xyz</a></td></tr><tr><td>磁力爬</td><td>地址发布页：<a href="http://www.cilipa.net，备用域名：cilipa.me，cilipa.cc">www.cilipa.net，备用域名：cilipa.me，cilipa.cc</a></td><td><a href="https://cilipa.me/">https://cilipa.me</a></td></tr><tr><td>磁力蜘蛛</td><td>永久域名：btmovi.org，btmovi.com，镜像站：ciligogo.co，eclso.com，eclzz.xyz，eclzz.me</td><td><a href="http://www.eclzz.mobi/">http://www.eclzz.mobi</a></td></tr><tr><td>雨花阁磁力</td><td>地址发布页：yuhuage.art，btcherries.xyz，yuhuage.club</td><td><a href="https://www.yuhuage52.xyz/">https://www.yuhuage52.xyz</a></td></tr><tr><td>磁力熊猫</td><td></td><td><a href="https://xiongmaocl.top/">https://xiongmaocl.top</a></td></tr><tr><td>SkrBT</td><td>备用域名：skrbtcil.buzz，skrbt000.xyz</td><td><a href="https://skrbtcil.buzz/">https://skrbtcil.buzz</a></td></tr><tr><td>磁力柠檬</td><td>备用域名：lemoncl.xyz</td><td><a href="https://ilemon00.xyz/">https://ilemon00.xyz</a></td></tr><tr><td>BT1207</td><td>备用域名：bt120752.icu</td><td><a href="https://ibt120702.xyz/">https://ibt120702.xyz</a></td></tr><tr><td>老王磁力</td><td>地址发布页：ilaowang.xyz</td><td><a href="https://ilaowang05.xyz/">https://ilaowang05.xyz</a></td></tr><tr><td>搜番</td><td>地址发布页：sofan.icu</td><td><a href="https://go.sofan.in/">https://go.sofan.in</a></td></tr><tr><td>868888</td><td></td><td><a href="https://8.proxyit.ga/">https://868888.net</a></td></tr><tr><td>BTMET</td><td>地址发布页：<a href="https://github.com/btmet/home">https://github.com/btmet/home</a> ，gobtmet.com</td><td><a href="https://www.btmet16.xyz/">https://www.btmet16.xyz</a></td></tr><tr><td>小草磁力</td><td>永久地址：xccl.vip，bthub.vip</td><td><a href="https://xccl.vip/">https://xccl.vip</a></td></tr><tr><td>SOBT</td><td>永久地址：<a href="http://www.sobt.me,6321.org/">www.sobt.me，6321.org</a></td><td><a href="https://www.sobt.me/">https://www.sobt.me</a></td></tr><tr><td>磁力宝</td><td>备用域名：063.org ，clb.biz，clb.la</td><td><a href="http://063.org/">http://063.org</a></td></tr><tr><td>磁力猫</td><td>永久域名：clm.la，cilimao.app</td><td><a href="http://clm.la/">http://clm.la</a></td></tr><tr><td>磁力狗</td><td>备用域名：clg.im ，ciligou.top</td><td><a href="https://clg.im/">https://clg.im</a></td></tr><tr><td>磁力天堂</td><td>永久地址：<a href="http://www.clss.me,www.cltt.me/">www.clss.me，www.cltt.me</a></td><td><a href="https://www.cltt001.xyz/">https://www.cltt001.xyz</a></td></tr><tr><td>BT目录</td><td>地址发布页：btmulu8.com，btmulu.world，<a href="https://cursor.vip/btmulu">https://cursor.vip/btmulu</a></td><td><a href="https://btmulu9.life/">https://btmulu9.life</a></td></tr><tr><td>种子吧</td><td>备用域名：seed8.org</td><td><a href="http://seed8.org/">http://seed8.org</a></td></tr><tr><td>BT狐狸</td><td>备用域名：btfox.xyz，cili5.net</td><td><a href="http://btfox0.org/">http://btfox0.org</a></td></tr><tr><td>磁力岛（怪兽搜索）</td><td>地址发布页：openbt.net，bitdao.me，邮件：<a href="mailto:&#98;&#x74;&#x64;&#x6f;&#111;&#x72;&#x32;&#48;&#x32;&#x30;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;">&#98;&#x74;&#x64;&#x6f;&#111;&#x72;&#x32;&#48;&#x32;&#x30;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;</a></td><td><a href="https://btify.xyz/">https://btify.xyz</a></td></tr><tr><td>磁力蚂蚁</td><td></td><td><a href="http://www.eclmy.vip/">http://www.eclmy.vip</a></td></tr><tr><td>0Magnet</td><td>地址发布页：cili.st，备用域名：9mag.net ，6mag.net，0cili.com</td><td><a href="https://0magnet.com/">https://0magnet.com</a></td></tr><tr><td>找磁力</td><td>基于antcolony，镜像站：zhaocili.cc，renrencili.vip，avmask.site，btdigg.vip，btsow.vip，cilibao.vip，ciligou.vip，cilihou.vip，zhaocili.xyz，btshu.vip，btniu.vip，bthu.pw等系列站</td><td><a href="https://5001btsow.xyz/">https://5001btsow.xyz</a></td></tr><tr><td>BTNIO</td><td>地址发布页：<a href="https://bitbucket.org/fabuye/btxyz">https://bitbucket.org/fabuye/btxyz</a> ，备用域名：btnio.com</td><td><a href="https://btxyz.xyz/">https://btxyz.xyz</a></td></tr><tr><td>BTMirror</td><td>地址发布页：btmirror.neocities.org</td><td><a href="https://cl.btm103.xyz/">https://cl.btm103.xyz</a></td></tr><tr><td>磁力狗 elsbapp.com</td><td>地址发布页：clgs.site，elsbapp.com，dh.dogsdxz.com，clgoes.com</td><td><a href="http://so.0v0w.site/">http://so.0v0w.site</a></td></tr><tr><td>磁力湾</td><td>地址发布页：bsoss.com，bvbus.com，berrl.com，movih.com，eyh.biz</td><td><a href="http://www.berrl.com/">http://www.berrl.com</a></td></tr><tr><td>搜磁力</td><td>备用域名：<a href="http://www.ciligou.live/">www.ciligou.live</a></td><td><a href="https://soucili.info/">https://soucili.info</a></td></tr><tr><td>磁力星</td><td>地址发布页：cixing.pw</td><td><a href="https://magnetar2048.pw/">https://magnetar2048.pw</a></td></tr><tr><td>磁力帝</td><td>地址发布页：磁力帝.com、cldi.top、磁力帝.xyz、cilidi.top</td><td><a href="https://cld21.xyz/">https://cld21.xyz</a></td></tr><tr><td>磁力风</td><td></td><td><a href="https://cilifeng.club/">https://cilifeng.club</a></td></tr><tr><td>磁力搜</td><td>地址发布页：磁力搜.com、磁力搜.xyz</td><td><a href="https://clssoo.ga/">https://clssoo.ga</a></td></tr><tr><td>磁力天堂</td><td>地址发布页：磁力天堂.com</td><td><a href="https://cltt606.xyz/">https://cltt606.xyz</a></td></tr><tr><td>1024BT</td><td>地址发布页：磁力搜索.com，磁力搜索.cc，102499.xyz</td><td><a href="https://1024bt10.xyz/">https://1024bt10.xyz</a></td></tr><tr><td>磁力狐</td><td>永久地址：btfox.top</td><td><a href="http://btfox.top/">http://btfox.top</a></td></tr><tr><td>91BT</td><td>地址发布页：91bt.icu，91btbt.com</td><td><a href="https://91bt106.xyz/">https://91bt106.xyz</a></td></tr><tr><td>磁力妹妹</td><td>地址发布页：clmmdz.cyou、磁力.xyz，clmm.icu</td><td><a href="https://clmma11.xyz/">https://clmma11.xyz</a></td></tr><tr><td>2048BT</td><td>永久地址：bt搜索.xyz，bt搜索.cc，2048bt.top，2048bt.cyou</td><td><a href="https://2048bt1.gq/">https://2048bt1.gq</a></td></tr><tr><td>磁力宝</td><td>地址发布页：磁力宝宝.com</td><td><a href="https://clb5003.xyz/">https://clb5003.xyz</a></td></tr><tr><td>BT虎牙</td><td>地址发布页：<a href="https://bitbucket.org/fabuye/bthuya/">https://bitbucket.org/fabuye/bthuya/</a> ，<a href="https://github.com/bthuyadizhi">https://github.com/bthuyadizhi</a></td><td><a href="https://btqwe.com/">https://btqwe.com/</a></td></tr><tr><td>磁力湾</td><td>地址发布页：btbay.xyz</td><td><a href="http://btbay.soubt.xyz/">http://btbay.soubt.xyz</a></td></tr><tr><td>BTFUK</td><td>地址发布页：btfuk.buzz</td><td><a href="https://btfuk.club/">https://btfuk.club</a></td></tr><tr><td>52BT</td><td>地址发布页：种子搜索.com</td><td><a href="https://52bti.xyz/">https://52bti.xyz</a></td></tr><tr><td>磁力狗</td><td>地址发布页：clgou.cyou，磁力狗.xyz、磁力狗.com</td><td><a href="https://clgoug.ga/">https://clgoug.ga</a></td></tr><tr><td>BT联盟</td><td></td><td><a href="https://btlm.me/">https://btlm.me</a></td></tr><tr><td>无限磁力</td><td>地址发布页：wx677.xyz</td><td><a href="http://wxcli.xyz/">http://wxcli.xyz</a></td></tr><tr><td>Sbt Magnet</td><td>地址发布页：sbt2066.xyz</td><td><a href="http://sbt168.xyz/">http://sbt168.xyz</a></td></tr><tr><td>LVV2磁力搜索</td><td></td><td><a href="https://lvv2.proxyit.ga/">https://lvv2.proxyit.ga/</a></td></tr><tr><td>磁力链</td><td>地址发布页：cililian.cc</td><td><a href="https://cililian.cc/">https://cililian.cc</a></td></tr><tr><td>磁力狗狗</td><td>地址发布页：clgou.icu，磁力狗狗.com</td><td><a href="https://clga10.xyz/">https://clga10.xyz</a></td></tr><tr><td>磁力百科</td><td>地址发布页：磁力百科.com</td><td><a href="https://baike1000.xyz/">https://baike1000.xyz</a></td></tr><tr><td>磁力街</td><td>永久地址：cilij.com</td><td><a href="http://www.cilij.com/">http://www.cilij.com</a></td></tr><tr><td>磁力海</td><td>地址发布页：<a href="http://9cili.com/">http://9cili.com</a></td><td><a href="https://e5gh3any.xyz/">https://e5gh3any.xyz</a></td></tr><tr><td>磁力树</td><td>地址发布页：bthook.cc，bthook.win，bthook.top，btfuk.icu</td><td><a href="https://bthook.top/">https://bthook.top</a></td></tr><tr><td>移花宫</td><td>永久地址：邀月.com，怜星.com，花无缺.com</td><td><a href="https://yhgyhg14.xyz/">https://yhgyhg14.xyz</a></td></tr><tr><td>94磁力</td><td>备用地址：<a href="http://www.fhss.xyz/">www.fhss.xyz</a></td><td><a href="http://www.cilixu.com/">http://www.cilixu.com</a></td></tr><tr><td>磁搜</td><td>永久域名：磁搜.com，备用地址：btsososo.com</td><td><a href="https://磁搜.com/">https://磁搜.com</a></td></tr><tr><td>菟丝子资源社区</td><td></td><td><a href="https://dodder.icu/">https://dodder.icu/</a></td></tr><tr><td>绅士磁力</td><td>聚合搜索</td><td><a href="https://demo.jucili.com/">https://demo.jucili.com</a></td></tr><tr><td>看电影</td><td></td><td><a href="https://www.watchdy.top/Home/BtIndex">https://www.watchdy.top/Home/BtIndex</a></td></tr><tr><td>电影狗</td><td>影视资源搜索引擎</td><td><a href="http://www.dianyinggou.com/">http://www.dianyinggou.com</a></td></tr><tr><td>电影淘淘</td><td>影视资源聚合搜索引擎</td><td><a href="https://www.dianyingtaotao.com/">https://www.dianyingtaotao.com</a></td></tr><tr><td>茶杯狐</td><td>影视资源聚合搜索引擎</td><td><a href="https://www.cupfox.app/">https://www.cupfox.app</a></td></tr><tr><td>51搜剧</td><td>影视资源聚合搜索引擎</td><td><a href="https://51souju.com/">https://51souju.com</a></td></tr><tr><td>未知搜索</td><td>影视资源聚合搜索引擎</td><td><a href="https://xsear.ch/">https://xsear.ch</a></td></tr><tr><td>7080影视搜</td><td>影视资源聚合搜索引擎</td><td><a href="https://7080.wang/">https://7080.wang</a></td></tr><tr><td>白嫖者联盟</td><td>影视资源聚合搜索引擎</td><td><a href="https://www.bpzhe.com/">https://www.bpzhe.com</a></td></tr><tr><td>轻轻搜索</td><td>影视资源聚合搜索引擎</td><td><a href="http://www.qqss.vip/">http://www.qqss.vip</a></td></tr><tr><td>集芳阁云搜</td><td>备用地址：集芳阁云搜.com</td><td><a href="http://jifangge.vip/">http://jifangge.vip</a></td></tr><tr><td>橘子盘搜</td><td>备用域名：juzipansou.com，影视资源聚合搜索引擎</td><td><a href="https://www.nmme.cc/">https://www.nmme.cc</a></td></tr><tr><td>搜漫</td><td>动漫资源搜索引擎</td><td><a href="https://www.soman.com/">https://www.soman.com</a></td></tr><tr><td>动漫花园资源网</td><td>动漫资源搜索引擎，镜像站dongmanhuayuan.com，share.dmhy.org，dongmanhuayuan.myheartsite.com</td><td><a href="https://dmhy.anoneko.com/">https://dmhy.anoneko.com</a></td></tr><tr><td>简单动漫</td><td></td><td><a href="https://www.36dm.club/">https://www.36dm.club</a></td></tr><tr><td>旋风动漫</td><td>备用域名：share.xfapi.top:88</td><td><a href="http://bbs.xfsub.org/">http://bbs.xfsub.org</a></td></tr><tr><td>ACG.RIP</td><td>动漫资源聚合搜索引擎</td><td><a href="https://acg.rip/">https://acg.rip</a></td></tr><tr><td>琉璃神社</td><td>地址发布页：<a href="https://acg.gy/">https://acg.gy</a></td><td><a href="https://www.liuli.pl/">https://www.liuli.pl</a></td></tr><tr><td>扶她动漫</td><td></td><td><a href="https://futaacg.com/">https://futaacg.com</a></td></tr><tr><td>AniX.Moe</td><td>18+：anix.moe，动漫：acgnx.se</td><td><a href="https://www.anix.moe/">https://www.anix.moe</a></td></tr><tr><td>漫猫动漫</td><td></td><td><a href="https://www.comicat.org/">https://www.comicat.org</a></td></tr><tr><td>爱恋动漫BT下载</td><td></td><td><a href="http://kisssub.org/">http://kisssub.org</a></td></tr><tr><td>紳士漫畫</td><td>地址发布页：<a href="http://www.wnacg.link/">www.wnacg.link</a></td><td><a href="https://www.hentaicomic.org/">https://www.hentaicomic.org</a></td></tr><tr><td>绅士仓库</td><td></td><td><a href="https://cangku.io/">https://cangku.io</a></td></tr><tr><td>绅士会所</td><td>地址发布页：<a href="https://www.sshs.pw/">https://www.sshs.pw</a></td><td><a href="https://www.sshs.xyz/">https://www.sshs.xyz</a></td></tr><tr><td>MioBT</td><td></td><td><a href="http://www.miobt.com/">http://www.miobt.com</a></td></tr><tr><td>IACG.RIP</td><td></td><td><a href="https://iacg.rip/">https://iacg.rip</a></td></tr><tr><td>萌番组</td><td></td><td><a href="https://bangumi.moe/">https://bangumi.moe</a></td></tr><tr><td>蜜柑计划</td><td></td><td><a href="https://mikanani.me/">https://mikanani.me</a></td></tr><tr><td>诸神字幕组</td><td></td><td><a href="https://subs.kamigami.org/">https://subs.kamigami.org</a></td></tr><tr><td>妖次元</td><td>地址发布页：yaociyuan.c1.biz</td><td><a href="https://www.yaociyuan.men/">https://www.yaociyuan.men</a></td></tr><tr><td>ACGUMO</td><td></td><td><a href="https://bt.acgumo.com/">https://bt.acgumo.com</a></td></tr><tr><td>HNC动漫</td><td></td><td><a href="https://www.hncdm.com/">https://www.hncdm.com</a></td></tr><tr><td>漫画补档</td><td></td><td><a href="https://www.manhuabudang.com/">https://www.manhuabudang.com</a></td></tr><tr><td>枫雪动漫</td><td></td><td><a href="http://www.opfans.org/">http://www.opfans.org</a></td></tr><tr><td>爱弹幕</td><td></td><td><a href="https://idanmu.im/">https://idanmu.im</a></td></tr><tr><td>天使动漫论坛</td><td></td><td><a href="https://www.tsdm39.net/">https://www.tsdm39.net</a></td></tr><tr><td>Mikocon</td><td></td><td><a href="https://www.mikocon.com/">https://www.mikocon.com</a></td></tr><tr><td><strong>以下为英文资源站</strong></td><td></td><td></td></tr><tr><td>SolidTorrents</td><td>支持中文资源搜索</td><td><a href="https://solidtorrents.to/">https://solidtorrents.to</a></td></tr><tr><td>Torrentzeu</td><td>备用域名：utorrentz2.in，支持中文资源搜索</td><td><a href="https://torrentzeu.org/beta1/search.php">https://torrentzeu.org</a></td></tr><tr><td>Torlock</td><td>支持中文资源搜索</td><td><a href="https://torlock.proxyit.ml/">https://torlock.com</a></td></tr><tr><td>DirtyTorrents</td><td>支持中文资源搜索</td><td><a href="https://dirtytorrents.unblockit.llc/">https://dirtytorrents.unblockit.llc</a></td></tr><tr><td>snowfl</td><td></td><td><a href="https://snowfl.unblockit.buzz/">https://snowfl.com</a></td></tr><tr><td>BitSearch</td><td>支持中文资源搜索</td><td><a href="https://bitsearch.proxyit.ga/">https://bitsearch.proxyit.ga</a></td></tr><tr><td>Unblockit</td><td>国外热门BT资源站的在线代理，无障碍访问这些服务，备用：unblocked-pw.github.io</td><td><a href="https://unblockit.llc/">https://unblockit.llc</a></td></tr><tr><td>Torrends</td><td>备用域名：torrends.info，原torrents.io，国外热门BT资源站导航站</td><td><a href="https://torrends.to/">https://torrends.to</a></td></tr><tr><td>Pirate Bay（海盗湾）</td><td>地址发布页：proxybay.page，piratebayproxy.info，英文资源丰富</td><td><a href="https://pirateproxy.tube/">https://pirateproxy.tube</a></td></tr><tr><td>1337X</td><td>英文资源极为丰富。备用域名：1377x.is，1337x.am，1337x.buzz，x1337x.eu</td><td><a href="https://www.1337x.tw/">https://www.1337x.tw</a></td></tr><tr><td>Rarbg</td><td>老牌著名资源BT下载站，备用域名：rarbgaccess.org，rarbgget.org，rarbg.to，rarbgmirror.com</td><td><a href="https://rarbgto.org/torrents.php">https://rarbgto.org/torrents.php</a></td></tr><tr><td>Kickass</td><td>老牌著名资源BT下载站，备用域名：katcr.to，kickasstorrents.pw，kickass1.to</td><td><a href="https://katcr.to/">https://katcr.to</a></td></tr><tr><td>TorrentGalaxy</td><td>地址发布页：proxygalaxy.pw，备用域名：torrentgalaxy.pw</td><td><a href="https://torrentgalaxy.to/">https://torrentgalaxy.to</a></td></tr><tr><td>LimeTorrents</td><td>地址发布页：limetorrents.online，备用地址：limetorrent.cc，limetor.com</td><td><a href="https://www.limetorrents.co/">https://www.limetorrents.co</a></td></tr><tr><td>Torrent Downloads</td><td>备用域名：torrentdownloads.cc</td><td><a href="https://torrentdownloads.pro/">https://torrentdownloads.pro</a></td></tr><tr><td>Torrent Downloads</td><td></td><td><a href="https://torrentdownloads.info/">https://torrentdownloads.info</a></td></tr><tr><td>ETTV</td><td>地址发布页：ettvproxies.com</td><td><a href="https://www.ettvcentral.com/">https://www.ettvcentral.com</a></td></tr><tr><td>EZTV</td><td></td><td><a href="https://eztv.io/">https://eztv.io</a></td></tr><tr><td>YTS</td><td>最佳电影资源搜索引擎。备用域名：yts.lt，yts.ag，yts.am</td><td><a href="https://yts.am/">https://yts.mx</a></td></tr><tr><td>YIFY Torrent</td><td>类似网站：yifytorrenthd.net，yifytorrent.pro，yify-movies.net</td><td><a href="https://yify-torrent.cc/">https://yify-torrent.cc</a></td></tr><tr><td>AIO Search</td><td>BT聚合搜索，包含了国外所有热门的BT站。备用域名：torrent-finder.info</td><td><a href="https://www.aiosearch.com/">https://www.aiosearch.com</a></td></tr><tr><td>MagnetDL</td><td></td><td><a href="https://magnetdl.com/">https://magnetdl.com</a></td></tr><tr><td>TorrentFunk</td><td>备用域名：torrentfunk.com</td><td><a href="https://torrentfunk.unblockit.llc/">https://torrentfunk.unblockit.llc</a></td></tr><tr><td>GloTorrents</td><td></td><td><a href="https://www.gtdb.to/">https://www.gtdb.to</a></td></tr><tr><td>Tavaz</td><td>AvaxHome系列站搜索引擎，地址发布页：avaxhome.online</td><td><a href="https://tavaz.xyz/">https://tavaz.xyz</a></td></tr><tr><td>Torrent9</td><td></td><td><a href="https://www.torrent9.is/">https://www.torrent9.is</a></td></tr><tr><td>WatchSoMuch</td><td></td><td><a href="https://watchsomuch.org/">https://watchsomuch.org</a></td></tr><tr><td>Extratorrents</td><td></td><td><a href="https://extratorrent.si/">https://extratorrent.si</a></td></tr><tr><td>BITCQ</td><td></td><td><a href="https://bitcq.com/">https://bitcq.com</a></td></tr><tr><td>TorLook</td><td>磁力聚合元搜索引擎</td><td><a href="https://torlook.info/">https://torlook.info</a></td></tr><tr><td>torrents-csv</td><td></td><td><a href="https://torrents-csv.ml/">https://torrents-csv.ml</a></td></tr><tr><td>Bittorrent.AM</td><td></td><td><a href="http://bittorrent.am/">http://bittorrent.am</a></td></tr><tr><td>UnionDHT</td><td>冷门稀缺资源可以试试</td><td><a href="http://uniondht.org/">http://uniondht.org</a></td></tr><tr><td>PCGamesTorrents</td><td>游戏磁力站</td><td><a href="https://pcgamestorrents.com/">https://pcgamestorrents.com</a></td></tr><tr><td>FitGirl Repacks</td><td>游戏磁力站</td><td><a href="https://fitgirl-repacks.site/">https://fitgirl-repacks.site</a></td></tr><tr><td>GamesTorrent</td><td>游戏磁力站</td><td><a href="https://www.gamestorrents.fm/home/">https://www.gamestorrents.fm</a></td></tr><tr><td>CroTorrents</td><td>游戏磁力站</td><td><a href="https://crotorrents.com/">https://crotorrents.com</a></td></tr><tr><td>RuTracker</td><td>以音乐种子搜索见长</td><td><a href="https://rutracker.org/">https://rutracker.org</a></td></tr><tr><td>Soundpark</td><td>音乐种子搜索搜索引擎。备用域名： soundpark-club.com</td><td><a href="https://sound-park.world/">https://sound-park.world</a></td></tr><tr><td>MixtapeTorrent</td><td>音乐种子搜索搜索引擎</td><td><a href="http://www.mixtapetorrent.com/">http://www.mixtapetorrent.com</a></td></tr><tr><td>RockBox</td><td>音乐种子搜索搜索引擎</td><td><a href="http://rawkbawx.rocks/">http://rawkbawx.rocks</a></td></tr><tr><td>ByRut</td><td>游戏磁力站</td><td><a href="https://byrut.org/">https://byrut.org</a></td></tr><tr><td>RUTOR</td><td></td><td><a href="http://rutor.info/">http://rutor.info</a></td></tr><tr><td>720pier</td><td>体育资源下载站</td><td><a href="https://720pier.ru/">https://720pier.ru</a></td></tr><tr><td>Mac Torrents</td><td>Mac 软件种子下载站</td><td><a href="https://www.torrentmac.net/">https://www.torrentmac.net</a></td></tr><tr><td>sexy-pics</td><td></td><td><a href="https://www.sexy-pics.us/">https://www.sexy-pics.us</a></td></tr><tr><td>Gelbooru</td><td>动漫资源搜索引擎，号称世界是最大的动漫图片资源库</td><td><a href="https://gelbooru.com/">https://gelbooru.com</a></td></tr><tr><td>Audiobook Bay</td><td>音频书港湾，音频书资料极为丰富</td><td><a href="http://audiobookbay.net/">http://audiobookbay.net</a></td></tr><tr><td>Academic Torrents</td><td>学术数据磁力搜索引擎</td><td><a href="https://academictorrents.com/">https://academictorrents.com</a></td></tr><tr><td>JavBus</td><td>备用域名：seejav.co，seejav.cloud，seejav.org</td><td><a href="https://www.seejav.co/">https://www.seejav.co</a></td></tr><tr><td>JavDB</td><td>APP下载：<a href="https://jav.app%EF%BC%8Cjavdb.domain@gmail.com获取最新地址/">https://jav.app，javdb.domain@gmail.com获取最新地址</a></td><td><a href="https://javdb39.com/">https://javdb39.com</a></td></tr><tr><td>JavLibrary</td><td>永久地址：javlib.com，邮箱：<a href="mailto:&#108;&#105;&#110;&#x6b;&#64;&#x7a;&#x6c;&#105;&#98;&#x7a;&#x2e;&#99;&#111;&#x6d;">&#108;&#105;&#110;&#x6b;&#64;&#x7a;&#x6c;&#105;&#98;&#x7a;&#x2e;&#99;&#111;&#x6d;</a></td><td><a href="https://www.e59f.com/">https://www.e59f.com</a></td></tr><tr><td>SOUKA</td><td>地址发布页：<a href="https://souka149520189.wordpress.com/">https://souka149520189.wordpress.com</a> ，服务邮件：<a href="mailto:&#x73;&#111;&#117;&#107;&#x61;&#46;&#x6c;&#x69;&#x6e;&#x6b;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#109;">&#x73;&#111;&#117;&#107;&#x61;&#46;&#x6c;&#x69;&#x6e;&#x6b;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#109;</a>（自动回复） ，<a href="mailto:&#x73;&#111;&#117;&#x6b;&#97;&#46;&#x74;&#111;&#x6d;&#64;&#x67;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#x6d;">&#x73;&#111;&#117;&#x6b;&#97;&#46;&#x74;&#111;&#x6d;&#64;&#x67;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a> (人工回复)</td><td><a href="https://souka.xyz/home">https://souka.xyz/home</a></td></tr><tr><td>Javbooks</td><td>地址发布页：aabb1801.com，yy5912.win，邮箱：<a href="mailto:&#101;&#98;&#x6e;&#x72;&#107;&#115;&#x38;&#55;&#x40;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#x6d;">&#101;&#98;&#x6e;&#x72;&#107;&#115;&#x38;&#55;&#x40;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#x6d;</a></td><td><a href="https://bb2454.com/">https://bb2454.com</a></td></tr><tr><td>JAVHOO</td><td></td><td><a href="https://www.javhoo.org/zh">https://www.javhoo.org</a></td></tr><tr><td>JAVMENU</td><td></td><td><a href="https://javmenu.com/">https://javmenu.com</a></td></tr><tr><td>JAV目錄大全</td><td></td><td><a href="https://freejavbt.com/">https://freejavbt.com</a></td></tr><tr><td>AVMOO</td><td>地址发布页：<a href="https://tellme.pw/avmoo%EF%BC%8C%E9%95%9C%E5%83%8F%E7%AB%99%EF%BC%9Aavmemo.asia%EF%BC%8Cavsox.monster">https://tellme.pw/avmoo，镜像站：avmemo.asia，avsox.monster</a></td><td><a href="http://avmoo.click/">http://avmoo.click</a></td></tr><tr><td>Nyaa</td><td>镜像站：nyaa.pro，sukebei.nyaa.pro，nyaa.net，nyaa.eu，nyaa.fun，官网：nyaa.si（被墙）</td><td><a href="https://nyaa.eu/">https://nyaa.eu</a></td></tr><tr><td>东京图书馆</td><td></td><td><a href="https://www.tokyotosho.info/">https://www.tokyotosho.info</a></td></tr><tr><td>Nyaa Torrent</td><td></td><td><a href="https://nyaatorrent.com/">https://nyaatorrent.com</a></td></tr><tr><td>AniDex</td><td></td><td><a href="https://anidex.proxyit.ga/">https://anidex.info</a></td></tr><tr><td>AniRena</td><td></td><td><a href="https://www.anirena.com/">https://www.anirena.com</a></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BT磁力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker指令</title>
      <link href="/archives/28537f41.html"/>
      <url>/archives/28537f41.html</url>
      
        <content type="html"><![CDATA[<ul><li><h4 id="docker-inspect-查看docker的容器的日志文件，开局配置"><a href="#docker-inspect-查看docker的容器的日志文件，开局配置" class="headerlink" title="docker inspect   查看docker的容器的日志文件，开局配置"></a>docker inspect   查看docker的容器的日志文件，开局配置</h4><ul><li>docker inspect cdb75c686740</li></ul></li><li><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><ul><li>sudo service docker status</li></ul></li><li><h4 id="查看启动"><a href="#查看启动" class="headerlink" title="查看启动"></a>查看启动</h4><ul><li><p>systemctl status docker.service</p></li><li><p>启动docker：systemctl start docker</p><p>停止docker：systemctl stop docker</p><p>重启docker：systemctl restart docker</p></li><li><p>压缩包加载成镜像</p><ul><li>docker load -i XXX(文件名)</li></ul></li></ul></li><li><h4 id="docker-启动"><a href="#docker-启动" class="headerlink" title="docker 启动"></a>docker 启动</h4><ul><li>systemctl start docker</li></ul></li><li><h4 id="docker-关闭"><a href="#docker-关闭" class="headerlink" title="docker 关闭"></a>docker 关闭</h4><ul><li>systemctl stop docker</li></ul></li><li><h4 id="docker-重启"><a href="#docker-重启" class="headerlink" title="docker 重启"></a>docker 重启</h4><ul><li>systemctl restart docker</li></ul></li><li><h4 id="docker设置随服务启动而自启动"><a href="#docker设置随服务启动而自启动" class="headerlink" title="docker设置随服务启动而自启动"></a>docker设置随服务启动而自启动</h4><ul><li>systemctl enable docker</li></ul></li><li><h4 id="查看docker-运行状态"><a href="#查看docker-运行状态" class="headerlink" title="查看docker 运行状态"></a>查看docker 运行状态</h4><p>——如果是在运行中 输入命令后 会看到绿色的active</p><ul><li>systemctl status docker</li></ul></li><li><h4 id="查看自己服务器中docker-镜像列表"><a href="#查看自己服务器中docker-镜像列表" class="headerlink" title="查看自己服务器中docker 镜像列表"></a>查看自己服务器中docker 镜像列表</h4><ul><li>docker images</li></ul></li><li><h4 id="搜索镜像"><a href="#搜索镜像" class="headerlink" title="搜索镜像"></a>搜索镜像</h4><ul><li>docker search 镜像名</li><li>docker search –filter=STARS=9000 mysql 搜索 STARS &gt;9000的 mysql 镜像</li></ul></li><li><h4 id="拉取镜像-不加tag-版本号-即拉取docker仓库中-该镜像的最新版本latest-加-tag-则是拉取指定版本"><a href="#拉取镜像-不加tag-版本号-即拉取docker仓库中-该镜像的最新版本latest-加-tag-则是拉取指定版本" class="headerlink" title="拉取镜像 不加tag(版本号) 即拉取docker仓库中 该镜像的最新版本latest 加:tag 则是拉取指定版本"></a>拉取镜像 不加tag(版本号) 即拉取docker仓库中 该镜像的最新版本latest 加:tag 则是拉取指定版本</h4><ul><li>docker pull 镜像名 </li><li>docker pull 镜像名:tag</li></ul></li><li><h4 id="运行镜像-—-咱拉取一个tomcat-跑起来试一试"><a href="#运行镜像-—-咱拉取一个tomcat-跑起来试一试" class="headerlink" title="运行镜像 —-咱拉取一个tomcat 跑起来试一试"></a><strong>运行镜像</strong> —-咱拉取一个tomcat 跑起来试一试</h4><ul><li>docker run 镜像名<ul><li>数据库镜像运行：<ul><li>docker run -di –name=root -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 镜像ID</li></ul></li></ul></li><li>docker run 镜像名:Tag</li></ul></li><li><h4 id="ex"><a href="#ex" class="headerlink" title="ex"></a>ex</h4><ul><li>docker pull tomcat</li><li>docker run tomcat</li></ul></li><li><h4 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h4><ul><li><p>——当前镜像没有被任何容器使用才可以删除</p></li><li><p>```<br>#删除一个<br>docker rmi -f 镜像名/镜像ID</p><p>#删除多个 其镜像ID或镜像用用空格隔开即可<br>docker rmi -f 镜像名/镜像ID 镜像名/镜像ID 镜像名/镜像ID</p><p>#删除全部镜像  -a 意思为显示全部, -q 意思为只显示ID<br>docker rmi -f $(docker images -aq)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- #### 强制删除镜像</span><br><span class="line"></span><br><span class="line">  - docker image rm 镜像名称/镜像ID</span><br><span class="line"></span><br><span class="line">- #### 保存镜像</span><br><span class="line"></span><br><span class="line">  - 将我们的镜像 保存为tar 压缩文件 这样方便镜像转移和保存 ,然后 可以在任何一台安装了docker的服务器上 加载这个镜像</span><br><span class="line">  - docker save 镜像名/镜像ID -o 镜像保存在哪个位置与名字</span><br><span class="line">  - 例子：docker save tomcat -o /myimg.tar</span><br><span class="line"></span><br><span class="line">- #### 加载镜像</span><br><span class="line"></span><br><span class="line">  - 任何装 docker 的地方加载镜像保存文件,使其恢复为一个镜像</span><br><span class="line">  - docker load -i 镜像保存文件位置</span><br><span class="line"></span><br><span class="line">- #### 镜像标签</span><br><span class="line"></span><br><span class="line">  - 有的时候呢，我们需要对一个镜像进行分类或者版本迭代操作，比如我们一个微服务已经打为docker镜像，但是想根据环境进行区分为develop环境与alpha环境，这个时候呢，我们就可以使用Tag，来进对镜像做一个标签添加，从而行进区分；版本迭代逻辑也是一样，根据不同的tag进行区分</span><br><span class="line"></span><br><span class="line">  - ```</span><br><span class="line">    app:1.0.0 基础镜像</span><br><span class="line">    # 分离为开发环境</span><br><span class="line">    app:develop-1.0.0   </span><br><span class="line">    # 分离为alpha环境</span><br><span class="line">    app:alpha-1.0.0   </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    docker tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]</span><br><span class="line">    </span><br><span class="line">    docker tag 源镜像名:TAG 想要生成新的镜像名:新的TAG</span><br><span class="line">    </span><br><span class="line">    # 如果省略TAG 则会为镜像默认打上latest TAG</span><br><span class="line">    docker tag aaa bbb</span><br><span class="line">    # 上方操作等于 docker tag aaa:latest bbb:test</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="ex-1"><a href="#ex-1" class="headerlink" title="ex"></a>ex</h4></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 我们根据镜像 quay.io/minio/minio 添加一个新的镜像 名为 aaa 标签Tag设置为1.2.3</span><br><span class="line">docker tag quay.io/minio/minio:1.2.3 aaa:1.2.3</span><br><span class="line"></span><br><span class="line"># 我们根据镜像 app-user:1.0.0 添加一个新的镜像 名为 app-user 标签Tag设置为alpha-1.0.0</span><br><span class="line">docker tag app-user:1.0.0 app-user:alpha-1.0.0</span><br></pre></td></tr></table></figure><ul><li><h2 id="docker-容器命令"><a href="#docker-容器命令" class="headerlink" title="docker 容器命令"></a>docker 容器命令</h2></li><li><h4 id="查看正在运行容器列表"><a href="#查看正在运行容器列表" class="headerlink" title="查看正在运行容器列表"></a>查看正在运行容器列表</h4><ul><li>docker ps</li></ul></li><li><h4 id="查看所有容器-—–包含正在运行-和已停止的"><a href="#查看所有容器-—–包含正在运行-和已停止的" class="headerlink" title="查看所有容器 —–包含正在运行 和已停止的"></a><strong>查看所有容器</strong> —–包含正在运行 和已停止的</h4><ul><li>docker ps -a</li></ul></li><li><h4 id="运行一个容器"><a href="#运行一个容器" class="headerlink" title="运行一个容器"></a>运行一个容器</h4><ul><li>-it 表示 与容器进行交互式启动 -d 表示可后台运行容器 （守护式运行）  –name 给要运行的容器 起的名字  /bin/bash  交互路径</li><li>docker run -it -d –name 要取的别名 镜像名:Tag /bin/bash </li></ul></li><li><h4 id="停止容器"><a href="#停止容器" class="headerlink" title="停止容器"></a>停止容器</h4><ul><li>先停止咱之前运行的 redis 容器 </li><li>docker stop 容器名/容器ID</li></ul></li><li><h4 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h4><ul><li><p>#删除一个容器</p><ul><li>docker rm -f 容器名/容器ID</li></ul></li><li><p>#删除多个容器 空格隔开要删除的容器名或容器ID</p><ul><li>docker rm -f 容器名/容器ID 容器名/容器ID 容器名/容器ID</li></ul></li><li><p>#删除全部容器</p><ul><li>docker rm -f $(docker ps -aq)</li></ul></li></ul></li><li><h4 id="重启容器"><a href="#重启容器" class="headerlink" title="重启容器"></a>重启容器</h4><ul><li>docker restart 容器ID/容器名</li></ul></li><li><h4 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h4><ul><li>docker start 容器ID/容器名</li></ul></li><li><h4 id="kill-容器"><a href="#kill-容器" class="headerlink" title="kill 容器"></a>kill 容器</h4><ul><li>docker kill 容器ID/容器名</li></ul></li><li><h4 id="查看容器日志"><a href="#查看容器日志" class="headerlink" title="查看容器日志"></a>查看容器日志</h4><ul><li>docker logs -f –tail=要查看末尾多少行 默认all 容器ID</li></ul></li><li><h4 id="v-宿主机文件存储位置-容器内文件位置"><a href="#v-宿主机文件存储位置-容器内文件位置" class="headerlink" title="-v 宿主机文件存储位置:容器内文件位置"></a>-v 宿主机文件存储位置:容器内文件位置</h4><ul><li>运行一个docker redis 容器 进行 端口映射 两个数据卷挂载 设置开机自启动</li><li>docker run -d -p 6379:6379 –name redis505 –restart=always  -v /var/lib/redis/data/:/data -v /var/lib/redis/conf/:/usr/local/etc/redis/redis.conf  redis:5.0.5 –requirepass “password”</li></ul></li><li><h4 id="不想删容器，又想让这个容器设置开机自启动，那么我们修改其启动配置即可"><a href="#不想删容器，又想让这个容器设置开机自启动，那么我们修改其启动配置即可" class="headerlink" title="不想删容器，又想让这个容器设置开机自启动，那么我们修改其启动配置即可"></a>不想删容器，又想让这个容器设置开机自启动，那么我们修改其启动配置即可</h4><ul><li>```<br>docker  update –restart=always 容器Id 或者 容器名或docker container update –restart=always 容器Id 或者 容器名<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- #### 更换容器名</span><br><span class="line"></span><br><span class="line">  - ​docker rename 容器ID/容器名 新容器名</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- #### 删除 无用的容器和 镜像</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="删除异常停止的容器"><a href="#删除异常停止的容器" class="headerlink" title="删除异常停止的容器"></a>删除异常停止的容器</h1>docker rm <code>docker ps -a | grep Exited | awk &#39;&#123;print $1&#125;&#39;</code> </li></ul></li></ul><h1 id="删除名称或标签为none的镜像"><a href="#删除名称或标签为none的镜像" class="headerlink" title="删除名称或标签为none的镜像"></a>删除名称或标签为none的镜像</h1><p>docker rmi -f  <code>docker images | grep &#39;&lt;none&gt;&#39; | awk &#39;&#123;print $3&#125;&#39;</code></p><pre><code>- #### 清除所有无容器使用的镜像  注意，此命令只要是镜像无容器使用（容器正常运行）都会被删除，包括容器临时停止  - docker system prune -a- #### 查找大文件  - find / -type f -size +100M -print0 | xargs -0 du -h | sort -nr</code></pre>]]></content>
      
      
      <categories>
          
          <category> 指令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Xbox手柄真假鉴定指南</title>
      <link href="/archives/d1be3a23.html"/>
      <url>/archives/d1be3a23.html</url>
      
        <content type="html"><![CDATA[<h1 id="Xbox手柄真假鉴定"><a href="#Xbox手柄真假鉴定" class="headerlink" title="Xbox手柄真假鉴定"></a>Xbox手柄真假鉴定</h1><p>①首选国行，官方渠道<br>②索要发票<br>③不建议选购二手<br>④核对S/N码</p><p>微软授权经销商list：<a href="https://t.bilibili.com/744304604099903602?spm_id_from=333.999.list.card_time.click">https://t.bilibili.com/744304604099903602?spm_id_from=333.999.list.card_time.click</a><br>手柄sn码查询：account.microsoft.com/devices/<br>手柄测试网站：<a href="http://gamepad-tester.com/">http://gamepad-tester.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试</title>
      <link href="/archives/40769f33.html"/>
      <url>/archives/40769f33.html</url>
      
        <content type="html"><![CDATA[<h1 id="针对互联网就业"><a href="#针对互联网就业" class="headerlink" title="针对互联网就业-"></a>针对互联网就业-</h1><p>拉勾和boss，比较靠谱，前程和智联差点，</p><p>失联招聘，BOSS直拒，拉钩上吊，前程堪忧，猪聘-猎聘。。。。。。。本人计算机专业的，一般用牛客，牛客上也有投递通道，不过我主要还是在评论区找内推去官网投递，要不要内推看个人需求。个人建议官网投递是最直接，会麻烦一点，第三方招聘软件适合海投。</p><h1 id="行业资讯-up取景框看世界"><a href="#行业资讯-up取景框看世界" class="headerlink" title="行业资讯-up取景框看世界"></a>行业资讯-up取景框看世界</h1><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/image-20221228212638905.png"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/%E4%B8%8A%E5%B8%82%E5%85%AC%E5%8F%B8%E5%B9%B4%E5%BA%A6%E6%8A%A5%E5%91%8A.png"></p><h1 id="up茜哥有办法"><a href="#up茜哥有办法" class="headerlink" title="up茜哥有办法"></a>up茜哥有办法</h1><p>应届生求职网知道自己价值</p><p>识别公司用支付宝市民中心点开办事大厅搜索公司</p><p><strong>反问hr</strong></p><p>如果有幸加入贵公司，您最看重新人哪些能力？您希望我在岗位上发挥什么样的价值？</p><p>如何找到合适的外企工作</p><ol><li><p>首要条件，快速提升英语听力 </p><p>英语相对好的</p><p>BBC news</p><p>英语水平相对差的</p><p>vx公众号-丹尼每日听力</p></li><li><p>面试准备的三要素 </p><p>英语简历</p><p>英文自我介绍</p><p>正常交流</p></li><li><p>面试流程 </p><p>性格的测试</p><p>智商测试</p><p>case study-考综合能力</p></li><li><p>找到外企工作的渠道</p><p><strong>猎聘&gt;&gt;官网&gt;&gt;官方公众号&gt;&gt;前程&gt;&gt;领英&gt;&gt;小程序</strong></p><p>vx-神仙外企这个公众号不错</p></li></ol><h1 id="uplisa职场笔记"><a href="#uplisa职场笔记" class="headerlink" title="uplisa职场笔记"></a>uplisa职场笔记</h1><h2 id="1-精通word、excel、ppt"><a href="#1-精通word、excel、ppt" class="headerlink" title="1.精通word、excel、ppt"></a>1.精通word、excel、ppt</h2><p>精通word –&gt; 能够利用word撰写标书，合同报告的排版制作</p><p>精通excel –&gt; 熟练使用常见的函数，能够做数据透视图，能够用可视化图表进行数据分析</p><p>熟练ppt –&gt; 熟练使用ppt制作和优化，能完成各类报告和总结</p><h2 id="2-话术：帮你更好的拿到offer"><a href="#2-话术：帮你更好的拿到offer" class="headerlink" title="2.话术：帮你更好的拿到offer"></a>2.话术：帮你更好的拿到offer</h2><p>你好hr，我蛮热爱这个行业和喜欢这份工作的，可是我今天的表现可能不是特别好，但是我很希望知道，我在哪里可以做得更好一点，您能告诉我吗？—让hr告诉你你还需要提升的地方在哪里？一般来说</p><h2 id="3-话术：和领导意见产生分歧"><a href="#3-话术：和领导意见产生分歧" class="headerlink" title="3.话术：和领导意见产生分歧"></a>3.话术：和领导意见产生分歧</h2><blockquote><p>先复述对方主要的意见+你说得对+为了这个目标我们是不是还可以?(补充你的意见)或者</p><p>好的，没有问题+你的补充建议</p></blockquote><h2 id="4-如何写年终总结"><a href="#4-如何写年终总结" class="headerlink" title="4.如何写年终总结"></a>4.如何写年终总结</h2><p>第一部分你过去一年工作概况</p><blockquote><p>第一点重点突出语言经验，挑你认为最重要的关键点</p><p>第二做业绩展现的时候，一定要学会用数据汇报，以数据展示数据分析形式可视化图表，让领导可以很直观看到工作业绩</p></blockquote><p>第二部分是工作的亮点+可复用经验</p><blockquote><p>写你的亮点工作和你总结出来的经验工作亮点包括你当时面对了哪些工作挑战和困难，你通过什么样的路经动作克服了这些困难，最终实现了哪些目标，已经沉淀了什么样的经验，比如你完成了某某重点的项目，完成了某某重点目标，实现了什么的增长，优化了某某的流程，这部分描述跟你的目标是正相关的。接下来就是这些工作里面，你有没有一些创意性的地方以及形成最佳实践的案例能够去复制和推广的</p></blockquote><p>第三工作不足之处和改善</p><blockquote><p>你目标中没有完成的地方，去分析没有完成的原因，包括主观原因和客观原因，今后如何改善和避免，再写不足的时候千万不要当职场老实人，真的说自己某某目标没有完成，这里教你一个诀窍，你可以把做的不好的地方，说明自己主观是想做好的，但是客观条件是不允许，你也可以把不足之处拿出来，请教你的老板，希望老板可以给你一些指点，接下来为了完成目标，就可以跟老板要资源以及申请相应的支持</p></blockquote><p>第四列明年的计划</p><blockquote><p>指定要结合公司和老板的目标去展开，提前跟老板做讨论，要注意的是写计划千万不要只写方向，你可以参照<code>OKR</code>和<code>SMART</code>目标设定的原则，把目标和实现具体路径具体化和明确化，如果能有具体的实施方案或者时间节点那就更好了，例如明年我的部门想要达到什么样的目标，每个目标下分别包含哪些子动作，明年将沿用以前的哪些经验，有没有一些创新点，一点要列清楚目标和实现目标关键动作、时间点。最后再送你一个小技巧，在整篇报告的标题处，你可以用一句话来概括今年的情况比如说为了体现你的奋斗实干，你可以把年终总结的主题用一句话来概括，千磨万击还精进，乱云飞渡人从容，你的报告一下就升华了</p></blockquote><h2 id="5-工作经历-STAR法则"><a href="#5-工作经历-STAR法则" class="headerlink" title="5.工作经历-STAR法则"></a>5.工作经历-STAR法则</h2><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20230101143204.png"></p><h2 id="6-HR-amp-猎头教你求职防踩坑"><a href="#6-HR-amp-猎头教你求职防踩坑" class="headerlink" title="6.HR&amp;猎头教你求职防踩坑"></a>6.HR&amp;猎头教你求职防踩坑</h2><p>接到猎头电话的时候，求职者一定要在接电话的时候，了解以下信息</p><blockquote><p>这个职位希望找什么样的求职者，是希望解决什么问题，上一任离开的原因是什么，这次面试需要有几轮，面试官是什么背景，可不可以先通过电话面试，如果找你猎头没有办法回答清楚这几个问题，慎重合作</p></blockquote><p>通过hr大概可以判断出一家公司的水平，说白了很多大公司也可能存在不专业的hr，更何况是一些小公司创业团队，很多HR不仅没有对职位有基本理解，甚至还不尊重人，HR代表了家公司的水准，如果HR是这个样子，说明这家公司的领导也不会好到哪里去，这样的公司慎去，</p><p>在求职当中一定要考察企业文化和自身匹配性，在求职的时候，我们特别容易忽略这一点，很多人只会看到表面职位薪酬，但实际上这一点特别特别的重要，如果你的性格偏佛系或者正常吧，结果你去一个狼性的公司，这明显是不合适的，这个就像是谈恋爱，公司和你可能都没有错，但是就是不合适</p><p>成功的跳槽，在猎头的眼中一次好的跳槽需要满足以下几点：</p><p>要么去更大的平台，要么拿到更高的工资，或者上升到更高的职位，又或者是你个人有特殊需求比如说希望朝九晚五离家近等等如果一次跳槽可以满足二到三点，那么它是一次很好的跳槽。如果一次只满足一到二点，这次跳槽也算是正常，如果一点都不满足，则这个跳槽就是瞎跳另外跳槽还有禁忌就是切记平跳或者向下跳，除非说你真的可能被裁员吃不上饭找不到工作。最后一点每一个求职的人，千万不要妄自菲薄，也不要自降身价，公司和你都是双向选择，我们可以站着把工作找到了，能够和你合作的一定是平等相待的公司，任何俯看你的公司都不要去</p><h1 id="冰糖学姐小桔桔"><a href="#冰糖学姐小桔桔" class="headerlink" title="冰糖学姐小桔桔"></a>冰糖学姐小桔桔</h1><p>我支持万事无绝对，如果这是一家我特别想去的公司，我开头最想了解的其实是工作内容和岗位匹配度，接下来是休假和五险一金，最后谈妥了才是谈薪资 ，如果这是一家没那么想去的，就会先问一下薪资范畴</p><h2 id="面试通知的第一通电话，要了解的三个重要信息"><a href="#面试通知的第一通电话，要了解的三个重要信息" class="headerlink" title="面试通知的第一通电话，要了解的三个重要信息"></a>面试通知的第一通电话，要了解的三个重要信息</h2><ol><li><p>简历有没有被直属领导看过</p><p>HR看上的简历直属领导看不上白搭</p></li><li><p>这个岗位的工资范畴是和招聘广告上是否一样</p></li><li><p>这个岗位面试流程是什么，一共几轮</p><p>提醒HR：合理安排面试流程避免浪费时间</p></li></ol><h2 id="收到offer后的回复话术"><a href="#收到offer后的回复话术" class="headerlink" title="收到offer后的回复话术"></a>收到offer后的回复话术</h2><ol><li><p>不想去（直接拒绝型）</p><p>您好，非常荣幸能收到贵公司的offer，感射公司对我能力的认可，但贵公司岗位要求/薪资架构暂时和我可所期望的还是有一定差距，希望今后有共享的机会，祝您工作顺利</p></li><li><p>想再考虑（纠结型）</p><p>您好，非常荣幸能收到贵公司的offer，感射公司对我能力的认可，对于offer中的xx内容，我想更详细的了解一下，盼回复/由于xx原因，需要处理一下个人事宜，预计一周内到岗，谢谢，祝您工作顺利</p></li><li><p>确定去该公司（确定型）</p><p>您好，非常荣幸能收到贵公司的offer，感射公司对我能力的认可，我会按照offer的要求携带入职资料准时报道。如有其它要求，请随时通知我，祝您工作顺利。</p></li></ol><h2 id="经典面试11问，直接搞定80-面试问题"><a href="#经典面试11问，直接搞定80-面试问题" class="headerlink" title="经典面试11问，直接搞定80%面试问题"></a>经典面试11问，直接搞定80%面试问题</h2><ol><li><p>请你做个简单的自我介绍</p><pre><code>    “面试官您好，我叫XX,毕业于XX大学XX专业，在校期间我负责凡参与了X活动，取得了X成果。我曾今在XX公司做过运营活动策划，在此间取得了XX成果。所以我想做一些和运营相关的事情，通过不断实践来充实和锻炼自己，因此我还申请了X公司运营实习岗位,协助公司完成新品线上推广，最终达到XX效果，通过实习我发现我很热这个的岗位，并且该岗位也十分适合我，我也更想迎接新的挑战。”</code></pre></li><li><p>为什么选择我们公司？</p><pre><code>    “首先，通过我之前的实习经历以及我对未来发展的职业规划，我希望能在这个行业谋求长期发展，在该行业中，我通过多方面了解，发现贵公司的岗位十分适合我，同时我也和一些在贵公司工作的学长学姐进行过交流和了解，发现贵公司不管是在业务还是在对员工的培养上都十分符合我对未来工作的期待”</code></pre></li><li><p>你最大的缺点是什么？</p><p>​        “我执行力很强，通常都能很好的完成领导交代的任务,但也正是因为如此，相对于主动深入的思考就少了一些，如何站在更高的角度去看待和思考问题是我还需要加强的。”</p></li><li><p>工作中和同事难以相处怎么办？</p><pre><code>    “我会服从领导安排，积极配合同事的工作，首先会从自身找原因，如果是自身工作方面的问题，我会努力改正，如果我找不到原因，我会找机会和他们沟通，请他们指出我的不足，及时改正。而且我认为不管什么时候都应该以大局为重，我会做好自己的本职工作，虚心学习和请教。”</code></pre></li><li><p>怎么样面对自己的失败？</p><pre><code>    “首先分析失败原因，到底是能力问题还是工作态度问题，能力不足，我后期会更加努力去学习，提高自己的业务能力；如果是态度问题，那就更应该好好反思，端正态度。失败是成功之母，我相信我会在下一次机会在汲取教训，取得成功。”</code></pre></li><li><p>你对薪资的要求？</p><pre><code>    “对于薪资，我相信贵公司有自己完善的薪资体系，只要是公平合理的，我都不会计较太多~我看贵公司该岗位的薪资是6K~12K,我希望达到贵要求转正后能拿到10K,试用期拿80%，是我对该岗位薪资的最低值”</code></pre></li><li><p>你对加班的看法？</p><pre><code>    “我现在刚毕业，正是积累工作经验的时候，加班对我来说问题不大，而且刚开始工作，有很多东西需要学习，有加班很正常，等我熟悉相关业务以后，工作效率会有很大提升，便会尽量避免加班的情况。”</code></pre></li><li><p>你希望和什么样的上级共事？</p><pre><code>    “我是一个适应力很强的人，以前也遇到过不同风格领导,但我们的相处都非常愉快，所以在这个问题上，我没有什么特殊要求。如果一定要说一点，作为应届生，在工作中的错误我希望我的领导能够及时指出，毕竟目前还比较缺乏职场经验，需要不断成长。”</code></pre></li><li><p>你还应聘了哪些企业？</p><pre><code>   “我目前还在接触几家公司，都是X岗位，不过我的第一志愿就是贵公司，无论给我们提供的平台还是具体工作内容都是十分符合我未来职业发展规划”</code></pre></li><li><p>你还有什么问题？<br>这个职业的提升渠道怎么样？发展前景如何？<br>对于这个岗位最看重的是什么能力？<br>如果要达到自己的希望薪资一般需要多久？<br>如何评估自己在试用期的表现工作？</p></li><li><p>如果录用了你，你会怎么开始工作？</p><pre><code>    “首先积极参加贵公司的培训计划，了解工作内容和近期工作任务，听取领导的指挥和安排，然后指定接下来一段时间的工作计划并跟领导汇报，获得批准后便开始开展工作。”</code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 毕业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github快速检索</title>
      <link href="/archives/6ae265f6.html"/>
      <url>/archives/6ae265f6.html</url>
      
        <content type="html"><![CDATA[<h2 id="明确搜索仓库标题"><a href="#明确搜索仓库标题" class="headerlink" title="明确搜索仓库标题"></a>明确搜索仓库标题</h2><ul><li><p><strong>语法</strong>：in：name [关键词]</p></li><li><p><strong>展示</strong>：比如我们想在GitHub仓库中标题中搜索带有SpringBoot关键词的，我们可以样搜: in:name SpringBoot</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210901.png" alt="图片"></p></li><li><p><strong>对比</strong>：我们发现同样是检索SpringBoot，我们采用in:name [关键词]这种检索方式检索出信息比直接搜索关键词更精确，由153287条搜索记录减少为119687。</p></li></ul><h2 id="明确搜索描述"><a href="#明确搜索描述" class="headerlink" title="明确搜索描述"></a>明确搜索描述</h2><ol><li><p><strong>语法</strong>：in:description [关键词]</p></li><li><p><strong>展示</strong>：比如我们想在GitHub仓库描述中搜索带有SpringBoot关键词的，我们可以这样搜: in:description SpringBoot</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231210932.png" alt="图片"></p></li></ol><h2 id="明确README描述"><a href="#明确README描述" class="headerlink" title="明确README描述"></a>明确README描述</h2><ol><li><p><strong>语法</strong>：in:readme [关键词]</p></li><li><p><strong>展示</strong>：比如我们想在GitHub仓库的README.md中搜索带有SpringBoot关键词的，我们可以这样搜: in:readme SpringBoot</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231211001.png" alt="图片"></p></li></ol><h2 id="明确star、fork数目区间"><a href="#明确star、fork数目区间" class="headerlink" title="明确star、fork数目区间"></a>明确star、fork数目区间</h2><ol><li><p><strong>语法</strong>：stars:&gt;[num][关键词]</p></li><li><p><strong>展示</strong>：比如我们想在仓库中搜索有关SpringBoot的并且stars&gt;2000的项目，我们可以这样搜: stars:&gt;2000 SpringBoot，当然，也支持区间范围查询，比如我想查找stars在1000至2000之间的SpringBoot项目，我们可以这样搜stars:1000..2000 SpringBoot</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231211037.png" alt="图片"></p></li></ol><h2 id="明确搜索仓库大小"><a href="#明确搜索仓库大小" class="headerlink" title="明确搜索仓库大小"></a>明确搜索仓库大小</h2><ol><li><p><strong>语法</strong>：size: &gt;[num] num 以K为单位</p></li><li><p><strong>展示</strong>：我们可以以仓库的大小为检索条件来检索信息，默认大小单位为KB，比如我们想检索仓库大小&gt;5KB的信息，我们可以这样搜：size: &gt;5 </p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231211100.png" alt="图片"></p></li></ol><h2 id="明确仓库更新时间"><a href="#明确仓库更新时间" class="headerlink" title="明确仓库更新时间"></a>明确仓库更新时间</h2><ol><li><p><strong>语法</strong>：pushed: &gt;[time][name] ex:2020-08-11</p></li><li><p><strong>展示</strong>：我们可以以仓库的大小更新时间为检索条件来筛选出我们需要的信息，比如我们想检索仓库更新时间在2020年8月11日之后的，我们可以这样搜：pushed: &gt;2020-08-11 SpringBoot</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231211152.png" alt="图片"></p></li></ol><h2 id="明确仓库的编程语言"><a href="#明确仓库的编程语言" class="headerlink" title="明确仓库的编程语言"></a>明确仓库的编程语言</h2><ol><li><p><strong>语法</strong>：language:[lag][name]</p></li><li><p><strong>展示</strong>：当我们想检索仓库所用的编程语言为Java的SpringBoot项目，我们可以这样搜：language:Java SpringBoot</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231211226.png" alt="图片"></p></li></ol><h2 id="综合条件筛选"><a href="#综合条件筛选" class="headerlink" title="综合条件筛选"></a>综合条件筛选</h2><p><strong>检索条件</strong>：</p><p>（1）搜索主题：微服务</p><p>（2）stars数: stars &gt; 1000</p><p>（3）仓库更新时间：在2020年8月1日之后</p><p>（4）所用语言：Java</p><p>综合以上查询条件，我们可以这样搜：in:description 微服务 language:java pushed:&gt;2020-08-01 stars:&gt;1000</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231211304.png" alt="图片"></p><p>  最终我们可以发现符合条件的搜索结果只有12条，是不是很高效呢~</p>]]></content>
      
      
      <categories>
          
          <category> QuickStart </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考研需知道</title>
      <link href="/archives/26a32a54.html"/>
      <url>/archives/26a32a54.html</url>
      
        <content type="html"><![CDATA[<p>从择校、择专业，到报名、上考场，从初试复习资料，到复试学校消息，这些信息，你都知道在哪里找吗？<strong>考研是一场信息战</strong>，在这方面千万不能掉以轻心。为你推荐十大考研信息网站，祝你打破考研信息差！</p><h3 id="中国研究生招生信息网（研招网）"><a href="#中国研究生招生信息网（研招网）" class="headerlink" title="中国研究生招生信息网（研招网）"></a>中国研究生招生信息网（研招网）</h3><p>网址：<a href="https://yz.chsi.com.cn/">https://yz.chsi.com.cn/</a></p><p>研招网是全国硕士研究生报名和调剂指定网站，想必大家都不陌生。但是研招网的信息你充分利用起来了吗？</p><p>除了报名外，研招网还可以查询<strong>国家政策、院校政策、考研咨询</strong>，还提供在线咨询服务，信息库中的<strong>院校库和专业库</strong>可以作为选择学校和专业以及准备复习资料的基础参考。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231211443.png" alt="图片"></p><h3 id="目标院校官网"><a href="#目标院校官网" class="headerlink" title="目标院校官网"></a>目标院校官网</h3><p>目标院校官网是考研信息最直接的来源。以四川大学研究生招生信息网为例，这里可以查到往年录取名单、报录比，还对一些常见问题进行了回复和说明，还可以查到学校研招办的联系方式。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231211500.png" alt="图片"></p><p>除目标学校招生网，还要关注目标学院的官网以及招生信息网，很多学院官网会提供导师介绍和联系方式。另外大部分学校都会开设官方微信公众号，这些公众号也会定期推送重要信息。</p><h3 id="中国教育在线"><a href="#中国教育在线" class="headerlink" title="中国教育在线"></a>中国教育在线</h3><p>网址：<a href="https://www.eol.cn/">https://www.eol.cn</a></p><p>中国教育在线是国内最大的综合教育门户，考研频道下包含<strong>备考、报考、录取、互动篇、工具</strong>几大板块。可以查到<strong>最新资讯、院校专业最新信息、报考指南、考研政策、报录比、招生简章、历年真题</strong>等信息。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231211524.png" alt="图片"></p><h3 id="考研论坛"><a href="#考研论坛" class="headerlink" title="考研论坛"></a>考研论坛</h3><p>网址：<a href="http://bbs.kaoyan.com/">http://bbs.kaoyan.com/</a></p><p>这里考研人信息交流中心，有许多考研<strong>真题和资料、上岸经验帖，还能与目标院校上岸学长学姐在线沟通</strong>，可以从他们那里了解一除此之外，还有导师、研究室等各方信息。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231211547.png" alt="图片"></p><h3 id="51考研网"><a href="#51考研网" class="headerlink" title="51考研网"></a>51考研网</h3><p> 网址：<a href="https://www.51kywang.com/">https://www.51kywang.com/</a></p><p>这个网站除一些考研官方信息、备考经验分享外，最重要的是可以查询购买各个学校专业课资料，包括<strong>考试真题、考试大纲、复习笔记、核心题库</strong>等。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231211612.png" alt="图片"></p><h3 id="小木虫论坛"><a href="#小木虫论坛" class="headerlink" title="小木虫论坛"></a>小木虫论坛</h3><p>网址：<a href="http://muchong.com/bbs/">http://muchong.com/bbs/</a></p><p>小木虫论坛是一个各高校科研导师及课题组学生的学术交流平台。值得考研人关注的是一个<strong>导师招生信息和调剂信息</strong>，可以获取导师联系方式和一些老师或学长学姐发布的最新调剂信息。</p><h3 id="研线网"><a href="#研线网" class="headerlink" title="研线网"></a>研线网</h3><p>网址：<a href="http://www.yanxian.org/">http://www.yanxian.org/</a></p><p>提供考研资讯和考研资料。</p><h3 id="一些学术网站"><a href="#一些学术网站" class="headerlink" title="一些学术网站"></a>一些学术网站</h3><p>知网、读秀、万方等研究常用网站。</p><p>可以搜索了解<strong>专业研究信息、导师研究方向</strong>，复习过程中有些专业知识如果在书本查不到，也可以在这些研究网站查询。</p><h3 id="学信网"><a href="#学信网" class="headerlink" title="学信网"></a>学信网</h3><p>网址：<a href="https://www.chsi.com.cn/">https://www.chsi.com.cn</a></p><p>这个应该都不陌生，考研报名的时候会用到，毕业的时候包括以后读研和工作可能都会用到这个网站。</p><h3 id="中国学位与研究生教育信息网"><a href="#中国学位与研究生教育信息网" class="headerlink" title="中国学位与研究生教育信息网"></a>中国学位与研究生教育信息网</h3><p>网址：<a href="http://www.chinadegrees.cn/">http://www.chinadegrees.cn/</a></p><p>官方网站，可以用于择校参考</p>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>择校专业指南</title>
      <link href="/archives/31722253.html"/>
      <url>/archives/31722253.html</url>
      
        <content type="html"><![CDATA[<h1 id="常见择校误区"><a href="#常见择校误区" class="headerlink" title="常见择校误区"></a><strong>常见择校误区</strong></h1><h2 id="轻视择校择专业重要性❌"><a href="#轻视择校择专业重要性❌" class="headerlink" title="轻视择校择专业重要性❌"></a><strong>轻视择校择专业重要性❌</strong></h2><p>​        考研很多人跨考，其中一个重要的原因就是对于本科选择的专业或者院校不满意、不喜欢。大家稍加思考一下，高考完填志愿的时候是不是大多数同学都是这样的场景：学校发了填志愿的厚厚指南，上面有各所大学在自己的身份每年录取的人数以及分数，也有学校的简介，然后在父母、家里人以及班主任的共同指导下，我们填报了高考志愿。</p><p>​        <strong>考研的信息不对称性远大于高考</strong>，因为一个省考的不一样，学校、学院、专业的自主性太大了，你不会得到一本考研报考指南上面列满各个学校历年录取情况，即使你自己花了很长时间整理了一份，你也会发现参考的价值没有那么大，因为每年波动都比较大。</p><p>​        在信息更不透明的情况下，不要奢求很快就随便定下院校专业。不要让考研成为第二次高考！好好搜集信息！</p><h2 id="设置保底院校❌"><a href="#设置保底院校❌" class="headerlink" title="设置保底院校❌"></a><strong>设置保底院校❌</strong></h2><p>​        不少同学会有这样的想法：我定两个目标院校，一个冲刺院校一个保底院校，先往好的冲，如果不行再换到保底院校。有的同学把这种思路贯彻得更为彻底：设置好中差三个院校。告诉大家为什么这样不行，因为你最后会发现你的考研之路呈<strong>螺旋式下降</strong>。</p><p>​        考研备考周期很长，到了中后期大家会经历阶段性的自我怀疑的过程，即使复习的好的同学也会这样——突然没有斗志丧失信心，过两天又打满鸡血默念考研必胜。考研都会经历这样一个反复的过程，如果你给自己留了退路，你总会给自己找很多理由情不自禁地滑到保底院校，我们见过不少一开始朝着清北备考的学生最终报考了普通院校。</p><p>​        另外，必须告诉大家的是，<strong>考研中途换学校是一个大忌</strong>（针对专业课自命题的同学）。因为考研最后每一分都很关键，每个学校的考察重点、命题方式、参考资料都会有所不同，如果你换来换去，相比较你的竞争对手而言，你备考针对性更弱，竞争对手竞争优势大一些。</p><p>​        同时，中途换学校会打乱复习节奏，在心理上也会对学生造成较大的影响。我们的辅导学员中，凡是中途换学校的，最终结果都不太好。所以，<strong>最优的路径</strong>应该是一开始就确定一所合理的目标院校，一条路走到黑，除非这个学校发生大幅度变动，比如停止招生，或者招生人数减少到一两个。</p><h2 id="信息搜集不完整❌"><a href="#信息搜集不完整❌" class="headerlink" title="信息搜集不完整❌"></a><strong>信息搜集不完整❌</strong></h2><p>​        有的同学也会自己搜集信息，但是搜集信息不完整，这就导致最终很可能只看到表象做出错误的决策。比如有一位同学打算从东南大学和南京工业、浙江工业大学当中选择，发现东南大学复试线竟然跟后两所差不多，心中窃喜。</p><p>​        我们择校老师后来告诉她几个信息：第一，东南大学录取平均分比复试线高差不多30分；第二，东南大学考的数一，另两所考的数二；第三，东南大学专业课很难，考上同学专业课平均分只有100左右，而另外两所都差不多是120+。</p><p>​        这样的例子在我们的择校学员中太多了，大家搜集的信息都比较片面，一定要在全面搜集信息的基础上再去做决策，否则你很有可能做出的决策是错误的！</p><h1 id="学硕还是专硕"><a href="#学硕还是专硕" class="headerlink" title="学硕还是专硕"></a><strong>学硕还是专硕</strong></h1><h2 id="学硕、专硕的过去与现在-👇"><a href="#学硕、专硕的过去与现在-👇" class="headerlink" title="学硕、专硕的过去与现在*👇*"></a><strong>学硕、专硕的过去与现在</strong><em><strong>*👇*</strong></em></h2><p>​        自2009年全面招收全日制专业学位硕士研究生至2014年，专业型硕士教育经费来源为“自筹”，而学术型硕士教育经费来源于国家财政拨款，就是所谓的“双轨制”。从2014年起，全日制专业硕士正式结束了“自筹经费”的历史，与学术硕士一起纳入国家研究生经费投入与奖助学金机制，“同等待遇”终于成为现实。</p><p>​        为满足经济社会发展对高水平应用型人才的需求，国家一直大力发展专业型硕士，并且国家每年将硕士生招生计划的增量指标主要划分给专业型硕士，同时将存量中的学术型硕士名额按不少于5%的比例调减，用于增加专业型硕士招生人数。到2015年，全日制专业硕士与学术硕士招生比例基本持平。</p><p>​        再看一下近年的学硕专硕报名数据，2015年专业学位硕士报考人数与学术型硕士相比略少一些，2016年基本持平，从2017年到2019年，专业学位硕士的报考人数已经超过了学术型硕士。</p><p>以湖北省和河北省为例：</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231211933.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231211959.png" alt="图片"></p><p>​        专业学位硕士的学习和考察内容更加侧重考生多方面的能力，同时学制方面与学硕相比更具有优势，课程设置上以实践为主，同时难度相对于学硕稍低。在就业压力下，考生选择考研的动机更有目的性，既照顾学历，又考虑到实用性，加上专业学位硕士研究生“扩招”的背景下，考生自然从传统的学硕转战到专硕。尤其近年来专业学位硕士的发展前景乐观，就业前景和就业竞争力都不输学术型硕士，因此，考生们对专业学位硕士的认可度也提升了。</p><h2 id="补充背景"><a href="#补充背景" class="headerlink" title="补充背景"></a><strong>补充背景</strong></h2><p>Q：不了解的人对于专硕不如学硕的固有印象怎么来的呢？</p><p>A：如前所述，专业型硕士在2014年之前一直属于“自筹经费”之列，与此同时，由于专硕缺乏相应的招生考试办法，一些学校按照考试分数高低分配学硕和专硕名额。正因为如此，上一辈或者不了解的人对专硕的印象比较差，“自费”、“分低”、“无奖学金”成为了专硕挥之不去的标签。经过这几年的飞速发展，专硕与学硕平起平坐，并且大有赶超学硕之势，因此大家在考虑学硕还是专硕的问题时，一定要摒弃固有成见。</p><h2 id="学硕和专硕的十个区别-👇"><a href="#学硕和专硕的十个区别-👇" class="headerlink" title="学硕和专硕的十个区别****👇"></a><strong>学硕和专硕的十个区别****👇</strong></h2><h3 id="培养目标"><a href="#培养目标" class="headerlink" title="培养目标"></a><strong>培养目标</strong></h3><p>​        学术型学位硕士研究生主要是培养学术研究人才。</p><p>​        专业学位是培养在某一专业(或职业)领域具有坚实的基础理论和宽广的专业知识，具有较强的解决实际问题的能力，能够承担专业技术或管理工作，具有良好职业素养的高层次应用型专门人才。</p><ul><li><strong>总结：学硕偏学术研究，专硕偏实际应用。</strong></li></ul><h3 id="培养方式"><a href="#培养方式" class="headerlink" title="培养方式"></a><strong>培养方式</strong></h3><p>​        学术学位的课程设置侧重于加强基础理论的学习，重点培养学生从事科学研究创新工作的能力和素质。</p><p>​        专业学位课程设置以实际应用为导向，以职业需求为目标，教学内容强调理论性与应用性课程的有机结合，在具体的学习过程中，一般均要求有为期数月的实践环节。</p><ul><li><strong>总结：学硕强调理论学习，专硕注重实践能力，这是由上面的培养目标所决定的。</strong></li></ul><h3 id="学费和学制"><a href="#学费和学制" class="headerlink" title="学费和学制"></a><strong>学费和学制</strong></h3><p>​        学术型硕士研究生的收费标准为8000元/学年，不同专业有所不同，学术型硕士学制一般是三年。</p><p>​        专业硕士学费按照不同专业类别差别较大，几万到几十万都有，专业型硕士学制一般是两年。</p><ul><li><strong>总结：学硕学习年限长，专硕学习年限短；学硕学费便宜，专硕学费相对更贵。</strong></li></ul><h3 id="读博方式"><a href="#读博方式" class="headerlink" title="读博方式"></a><strong>读博方式</strong></h3><p>​        学术型硕士可以通过自己的导师直接读博，不用参加全国统考，也就是我们所说的直博或者硕博连读。</p><p>​        专业型硕士一般不能硕博连读或直博，硕士毕业后进行考博，具体情况请咨询招生单位。</p><ul><li><strong>总结：学硕读博容易，专硕读博更难，这是因为博士强调理论研究。</strong></li></ul><h3 id="考试内容难度"><a href="#考试内容难度" class="headerlink" title="考试内容难度"></a><strong>考试内容难度</strong></h3><p>​        学术型硕士的考试难度通常比专硕大，比如拿公共课来说，学硕通常考英语一和数学一、数学二，专硕通常考英语二和数学三。专业课同理，学硕通常考试内容更广，难度更大。</p><ul><li><strong>总结：学硕考试难度通常大于专硕，这是由培养目标决定的，因为理论研究需要更扎实的理论知识。</strong></li></ul><h3 id="导师"><a href="#导师" class="headerlink" title="导师"></a><strong>导师</strong></h3><p>​        学术型硕通常只有一个学校导师，而专业型硕士通常还有社会导师，也就是所谓的“双导师”制。不过在目前的高校环境中，社会导师大多流于形式，有跟没有也几乎没有区别。</p><ul><li><strong>总结：学硕通常只有一个导师，专硕通常还有一个社会导师，但是意义不大。</strong></li></ul><h3 id="毕业难度"><a href="#毕业难度" class="headerlink" title="毕业难度"></a><strong>毕业难度</strong></h3><p>​        学术型硕士毕业论文的标准通常要高于专业型硕士的毕业论文标准，因此学硕在面临毕业时，压力会更大。专硕通常要求实习满一定时长才允许毕业，也就是所谓的“毕业实习”，毕业实习相比毕业论文显然是更容易搞定。</p><ul><li><strong>总结：学硕毕业论文通常要求更高，专硕通常要求毕业实习。</strong></li></ul><h3 id="考取难度"><a href="#考取难度" class="headerlink" title="考取难度"></a><strong>考取难度</strong></h3><p>​        学术型硕士因为更强调扎实的理论基础以及学术创新能力，因此偏向于从学业和综合表现优秀的本科生当中招推免生，也就意味着保研名额占据多数，留给保研的名额比较少。更少的名额，以及更难的考试内容，通常也就意味着考取难度更大。尤其是大多数院校公布的当年招生计划是拟定的，实际的招生计划会等到当年的推免工作结束后才能确定，这就给本来名额就少的学硕考研带来了更大的不确定性。</p><p>​        举个例子，22年招生计划假设说学硕和专硕一共招20人，按照惯例，保研名额假设占一半，因此你和其它准备备考的考生一样，预期是考研统考招10人，结果等你复习到九十月份，发现保研保了15人，留给统考名额只剩5人。</p><ul><li><p><strong>特别说明：</strong>上述表述是通常意义上的，并不是所有学硕和专硕都适用，具体还得结合目标院校专业详情决定。比如有的院校学硕和专硕统一考试，统一招生；还有的院校专硕比学硕竞争激烈很多。具体院校，具体分析。</p></li><li><p><strong>总结：学硕考取难度一般大于专硕。</strong></p></li></ul><h3 id="调剂机会"><a href="#调剂机会" class="headerlink" title="调剂机会"></a><strong>调剂机会</strong></h3><p>​        学术型硕士可以选择调剂学硕或者专硕，也就是说，调剂范围更广，调剂机会更多。</p><p>​        专业型硕士一般不能往学硕调剂，也就是说调剂范围更窄，调剂机会更少。</p><ul><li><strong>总结：学硕调剂范围大于专硕。</strong></li></ul><h3 id="求职认可度"><a href="#求职认可度" class="headerlink" title="求职认可度"></a><strong>求职认可度</strong></h3><p>​        学术型硕士和专业型硕士在求职时基本没有区别，几乎没有用人单位会在招聘时只招收学术型硕士而不招专业型硕士。在用人单位看来，不管是专业型硕士还是学术型硕士，只要是全日制硕士，都没有什么差别。认可度差很多的是非全日制硕士。</p><ul><li><strong>总结：学硕和专硕几乎没有区别</strong></li></ul><h3 id="如何选择学硕还是专硕👇"><a href="#如何选择学硕还是专硕👇" class="headerlink" title="如何选择学硕还是专硕👇"></a><strong>如何选择学硕还是专硕👇</strong></h3><p>​        首先，我们要看一下硬性条件约束。比如家里经济承受能力，如果家里没办法支持你两三年花几万学费再加上几万生活费供你读完研究生，那这时候你就要看你所选择的专业不同学校学费是多少，是不是在自己家庭的经济承受能力范围内。通常来说专硕的学费会贵一些，尤其像新传、金融、应用心理、法硕等比较热门的专硕。</p><p>​        除了经济承受能力这一硬性约束，其它因素通常都算不上是硬性约束（读博也不算，因为专硕并不是不能读博，而是相对难一些），这时候我们就应该<strong>以更容易考上为第一指导原则</strong>。如果以更容易考上为第一指导原则，那么大多数人可能最终都会选择专硕（经济承受能力范围内）。</p><p>​        为什么说是大多数人呢，因为少部分院校专业并不一定专硕比学硕考取容易，有的院校还出现了专硕非常火爆，学硕只要过线就录取的情况，所以大家一定要结合具体目标院校专业来分析学硕还是专硕。如何结合具体院校来分析学硕还是专硕呢？我们后面会继续给大家分享如何搜集招录信息。</p><h2 id="关于跨考"><a href="#关于跨考" class="headerlink" title="关于跨考"></a><strong>关于跨考</strong></h2><h3 id="什么算跨考"><a href="#什么算跨考" class="headerlink" title="什么算跨考?"></a><strong>什么算跨考?</strong></h3><p>​        大家都听过三跨。<strong>三跨指的是：跨地区、跨学校、跨专业</strong>。但是大家一般意义上的跨考指的是跨专业。很多打算考研的小白比较纠结自己是否是跨考，真的意义不大。</p><p>​        因为是否跨考并没有官方的准确定义，是专业代码不一样叫跨专业？是学科名称不一样叫跨专业？还是学科类别不一样叫跨专业？通信跨计算机算跨考吗？经济跨金融算跨考吗？这类问题没有人能给你非常肯定的回答。</p><p>​        对于部分非常想了解自己是否是跨考的同学，可以这样来看这个问题：</p><p>​        <strong>是否跨考最主要的考量其实应该是考研的专业课与我们本科所学的专业课程相关性是否大。</strong></p><p>​        如果基本都一样那肯定不算，如果完全不一样那肯定算。我知道有的同学喜欢量化，给大家一个量化的公示给大家参考，但是也要提醒大家，这样意义不大。</p><p>​        如果你考研的专业课课程超过50%在本科学过，那么就不算跨考；</p><p>​        如果你考研的专业课课程在本科学过的不超过50%，那么就算跨考。</p><h3 id="要不要跨考？"><a href="#要不要跨考？" class="headerlink" title="要不要跨考？"></a><strong>要不要跨考？</strong></h3><p>​        是否跨考分两种情况：一种是本身就打算往复合型方向发展，比如本科学计算机，研究生学金融，这样在特定领域竞争力会更强；另外一种是不喜欢本科所学专业，这种情况更为普遍。</p><p>​        那是不是说不喜欢本科专业就换，喜欢就不换呢？也不一定！</p><p>​        因为这个社会可能还由不得我们这么任性，还有很多现实的因素需要考量，比如不喜欢本专业但是是否有明确的喜欢的专业呢？虽然不喜欢本专业但是本专业就业前景还是很不错的，喜欢的专业就业前景不太好或者喜欢的专业跨考难度非常大。</p><p>​        所以判断要不要换专业更好的一个衡量标准：应该是你是否打算用本专业学的东西去找工作。如果打算用本专业去找工作，是就不要换，不打算用本专业去找工作就换。</p><h3 id="跨考注意事项"><a href="#跨考注意事项" class="headerlink" title="跨考注意事项"></a><strong>跨考注意事项</strong></h3><h4 id="（一）跨的学科专业性是不是很强"><a href="#（一）跨的学科专业性是不是很强" class="headerlink" title="（一）跨的学科专业性是不是很强"></a><strong>（一）跨的学科专业性是不是很强</strong></h4><p>比如要跨考建筑学，建筑学专业对于考生的美术基础要求很高，因此，跨专业考研难度很大。</p><h4 id="（二）对本科所学专业是否有限制"><a href="#（二）对本科所学专业是否有限制" class="headerlink" title="（二）对本科所学专业是否有限制"></a><strong>（二）对本科所学专业是否有限制</strong></h4><p>比如考临床医学，要求本科是相近专业，有的学校部分专业在招生简章或者招生专业目录里对报考考生的本科专业做了限制，大家一定要多加留意。</p><h4 id="（三）是否强调实践能力"><a href="#（三）是否强调实践能力" class="headerlink" title="（三）是否强调实践能力"></a><strong>（三）是否强调实践能力</strong></h4><p>比如跨考计算机，虽然初试过了但是复试有的学校要求上机。</p><h4 id="（四）加试"><a href="#（四）加试" class="headerlink" title="（四）加试"></a><strong>（四）加试</strong></h4><p>少数院校专业虽然允许跨考但是针对跨考生要求参加加试。</p><h3 id="如何了解这些信息呢？"><a href="#如何了解这些信息呢？" class="headerlink" title="如何了解这些信息呢？"></a><strong>如何了解这些信息呢？</strong></h3><p>一是通过学校官方给出的招生简章，看一下报考条件。</p><p>二是找到学校往年的复试办法，一般来说复试办法会在每年3月左右公布，根据复试办法看学校是如何进行复试，总成绩的各项构成及比重是多少。</p><p>三是向直系学长学姐咨询，是否有自己这一类本科专业考上的先例以及会不会存在导师不要某些方向同学的情况，<strong>经验超市考研的小程序可以直接向学长学姐咨询！</strong></p><p>90%以上的专业都是可以跨考的。</p><p>只要没有限制跨考就都是可以跨考的，包括学硕和专硕。但是跨考难度有高低之分。</p><p>总体来说，文科跨理科会更难，理科跨文科相对容易，文科跨理科的话数学就是一座大山，很多文科同学大学几乎没学数学。</p><p>不过也不是绝对的，只是说难度较大，依然有不少的同学数学零基础考数学考得不错，只是说大家需要早做准备，恶补数学。</p><h3 id="跨考难度总结"><a href="#跨考难度总结" class="headerlink" title="跨考难度总结"></a><strong>跨考难度总结</strong></h3><p>考研的学科有十三个大类，对跨考难度做一个总结</p><p><strong>理学和工学</strong> 互相跨难度较低，跨经管类难度一般，跨其它比较吃力</p><p><strong>文史哲法学教育学</strong> 互相跨难度较低，跨其它比较吃力</p><p><strong>经济学和管理学</strong> 互相跨难度较低，跨理工难度一般，跨其它比较吃力</p><p><strong>医学</strong> 跨起来比较吃力</p><p><strong>农学</strong> 跨起来比较吃力</p><p><strong>军事学</strong> 跨起来比较吃力</p><p><strong>艺术学</strong> 跨起来比较吃力</p><h1 id="如何选择专业？"><a href="#如何选择专业？" class="headerlink" title="如何选择专业？"></a><strong>如何选择专业？</strong></h1><p>在最前面，有几点要给大家交代一下：</p><p><strong>没有标准答案</strong></p><p>​        有很多同学总是会问我们这样的问题：我考学硕还是专硕好？会计好还是法硕好？</p><p>​        这样的问题是无法回答的，也不是几句话可以说清楚的。好坏都是相对的，有好总有坏，对别人好不一定对你好，具体适不适合得具体分析。</p><p>​        大家还是要坚持朴素的辩证法，如果一个人或者某个机构给你一味鼓吹什么什么好，其它什么什么都不好，那就是无脑尬吹了。</p><p>​        我们也不会不负责任地告诉你，专硕好，法硕好，这违背我们的职业道德素质。我们也知道这时候即使是非常简单的回答，只要告诉你一个肯定的答案，比如专硕肯定好，会计就是好，我们就更容易获得你们的好感，但是我们在此再强调一遍，这违背我们的职业道德素质，我们经验超市绝不会为了博得大家一点好感而至大家的未来于不顾。</p><p><strong>没有完美选择</strong></p><p>​        大家在面临选择专业和学校时，总是在纠结。经济学就业好一些，但是我数学又很差，不想考数学。我想在大城市发展，但是北京地区高校竞争很激烈，听说还压分。</p><p>​        大家发现没有，信息（事实）其实你已经了解了，只是在做决定这一步，你总是纠结过去纠结过来。如果你不了解什么信息，就去搜集什么信息，如果信息都搜集到了，那么尽快做决定。</p><p>​        你思考半小时的东西与你思考半个月的东西基本上不会有变化，就是不断地重复，纠结过去纠结过来。做决定时，你要告诉自己，没有完美的选择，不可能什么都好。</p><p>​        考研首先应该清楚适合什么专业，然后再去确定院校。当然大多数人其实并不清楚自己适合什么专业，跟自己填高考志愿时一样。</p><p>​        读什么专业我们首先应该问自己：我以后想从事什么样的职业？过什么样的生活？这个问题搞清楚后，我们再来考虑哪些专业可能比较适合，然后我们再尽量在其中去选择自己比较擅长的。</p><p>​        如果大家觉得比较抽象，没关系，咱们看几个例子。</p><p>​        以我自己来说，我不喜欢工作有太多约束，就是有很多不得不的时刻，比如不得不去陪领导应酬，不得不被动参与办公室政治，总体而言，就是不想参与过多自己不热衷的社交和人际关系活动。</p><p>​        这是由自己的性格特点决定的，我是一个大多数时候都不太喜欢特别热闹的环境的人，和少数的比较交心或者熟的朋友在一起时，我会非常自然并且享受，但是如果人太多或者一天都跟不同的人在一起，我会觉得身心俱疲。由于自己这一性格特点，我直接就排除了考公务员的这一条路。</p><p>​        并不是说像我这样比较内向的性格就不能从事公务员，只是如果你有这样的性格特点，同时你又想有一番作为，那最好还是不要选择公务员；如果你想一个铁饭碗，那还是可以考虑的。</p><p>​        希望大家区分好可以做和擅长做。可以做的范围很广，擅长做的范围很窄。每一种性格特点都有自己擅长的事情，这是对天生我材必有用最好的解释，这一点你千万不要怀疑。所以，最终考研读什么专业取决于你自己擅长什么，而你擅长什么又是由你的性格特点所决定的。</p><p>​        那么问题来了，我如何知道自己的性格特点？</p><p>​        对于一个没有接触过心理学或者对这个问题没有深入思考过的同学，咱们可以自己从一些基本维度来了解自己性格特点，抗压能力强或者弱、对数字是否敏感、思维是否跳跃、工作进取心是否强、是否喜欢频繁和人接触、是否喜欢进行独立深入的思考，如果大家有兴趣可以继续扩展这些维度。</p><p>​        咱们有了这样的维度后，看看自己在每个维度到底是属于哪类，然后再结合自己考虑的职业范围给不同的职业贴上标签，最吻合的就是你可以重点考虑的职业。</p><p>​        举个例子，以我自己来说我的性格属于：抗压能力强、数字不敏感、思维跳跃、进取心强、不喜欢和不同的人接触频繁接触、喜欢进行独立的思考。我心仪的职业有公务员、金融机构、创业。</p><p>​        公务员我贴上的标签是：抗压能力一般、数字不敏感、思维不跳跃、进取心强、喜欢和不同人频繁接触、不喜欢独立进行思考。</p><p>​        金融机构我贴上的标签是：抗压能力强、数字敏感、思维不跳跃、进取心强、喜欢和不同的人频繁接触、不喜欢进行独立的思考。</p><p>​        创业我贴上的标签是：抗压能力强、数字不敏感、思维跳跃、进取心强、不喜欢和不同的人接触频繁接触、喜欢进行独立的思考。</p><p>​        发现创业是与自己的性格特点最吻合的，所以我可能最终选择创业。这个模型其实比较简陋，即使是在一个机构，不同的岗位标签肯定是不一样的，比如金融机构的投资分析师和业务经理就需要不同的性格特质，但是这个模型背后的理论是正确的——结合自己的性格特质和职业的特点去看自己是否适合某一职业。</p><p>问题又来了。</p><p>问题一，我如何知道自己的性格特质？</p><p>问题二，我如何知道某一职业的特点？</p><p>好，咱们一个一个解决。</p><p>​        我如何才能知道自己的性格特质呢？一是按照我前面说的比较粗略的模型来分析，二是进行专业的职业性格测试。经验超市给大家准备了职业性格特质测试表和分析报告，这个特质测试叫MBTI职业性格测试。详细不少同学也都做过这个测试~</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231212048.png" alt="图片"></p><p>​        MBTI职业性格测试是国际最为流行的职业人格评估工具，把人的性格特质分成动力、信息收集、决策方式、生活方式，从而将人的性格特质分成很多种，每一种性格特质都相应列出了一些适合的工作范围。</p><p>​        实际上就是我上面那个粗略模型的进阶版。这个性格特质测试能帮助你了解你自己的性格特质，然后我们就需要去看哪些工作岗位与自己的性格特质匹配。如果大家想进行职业性格测试并领取分析报告，可以找经验超市客服直接领取，测试完成后可以找客服领取专属分析报告。</p><p>​        需要说明的一点是，这个是一个测试，虽然是国际上很权威的测试，但是这个都只是一个参考，大家根据分析报告再去思考可能会更有启发，千万不要完全盲目相信这个分析报告，任何测试都不可能完全100%还原一个人的性格特质。</p><p>​        我如何知道某一职业的特点呢？这个一方面你可以自己结合你对身边人的观察或自己的思考来大致确定，比如你虽然没有做过公务员，但你肯定周围有人是公务员或者你曾经与公务员打过交道；另一方面，你可以多去社区上看一看，比如知乎上就有很多相关的问题，做xxx是一种怎样的体验；最后如果你能找到相应的从业者，最好是与其直接交流。比如你的师门有一个是做新媒体运营，你想了解做新媒体运营是怎样的工作状态就可以找这位师兄/师姐直接交流。</p><p>​        确定自己想要从事的职业后，怎么来确定自己的专业呢？打开研招网的专业库，就是这个网址（<a href="https://yz.chsi.com.cn/zyk/%EF%BC%89%EF%BC%8C%E7%BB%93%E5%90%88%E8%87%AA%E5%B7%B1%E5%BF%83%E4%BB%AA%E7%9A%84%E8%81%8C%E4%B8%9A%E7%9C%8B%E7%9C%8B%E5%93%AA%E4%BA%9B%E4%B8%93%E4%B8%9A%E4%BB%8E%E7%9B%B4%E8%A7%82%E4%B8%8A%E6%98%AF%E6%AF%94%E8%BE%83%E8%B4%B4%E8%BF%91%E7%9A%84%E3%80%82%E6%AF%94%E5%A6%82%E8%87%AA%E5%B7%B1%E6%83%B3%E5%81%9A%E8%80%81%E5%B8%88%EF%BC%8C%E9%82%A3%E5%B0%B1%E7%9C%8B%E6%95%99%E8%82%B2%E7%9B%B8%E5%85%B3%E7%9A%84%E4%B8%93%E4%B8%9A%E3%80%82%E5%A6%82%E6%9E%9C%E4%B8%8D%E5%87%BA%E6%84%8F%E5%A4%96%EF%BC%8C%E8%BF%99%E6%97%B6%E5%80%99%E4%BD%A0%E5%B0%B1%E8%83%BD%E9%94%81%E5%AE%9A%E5%88%B0%E6%9C%89%E9%99%90%E5%87%A0%E4%B8%AA%E4%B8%93%E4%B8%9A%E4%BA%86%E3%80%82%E9%82%A3%E6%80%8E%E4%B9%88%E4%BB%8E%E5%87%A0%E4%B8%AA%E4%B8%93%E4%B8%9A%E4%B8%AD%E9%80%89%E6%8B%A9%E7%9B%B8%E5%AF%B9%E8%80%8C%E8%A8%80%E6%9C%80%E9%80%82%E5%90%88%E8%87%AA%E5%B7%B1%E7%9A%84%E9%82%A3%E4%B8%80%E4%B8%AA%E5%91%A2%EF%BC%9F">https://yz.chsi.com.cn/zyk/），结合自己心仪的职业看看哪些专业从直观上是比较贴近的。比如自己想做老师，那就看教育相关的专业。如果不出意外，这时候你就能锁定到有限几个专业了。那怎么从几个专业中选择相对而言最适合自己的那一个呢？</a></p><p>请往后面看。</p><h1 id="如何大致确定目标院校范围"><a href="#如何大致确定目标院校范围" class="headerlink" title="如何大致确定目标院校范围?"></a><strong>如何大致确定目标院校范围?</strong></h1><p>​        确定考哪一层次高校会复杂一些。因为大家基本上都没有考过研，不知道自己水平怎么样。我们提炼出了一个择校模型，大家可以参考一下。这个模型能够让大家大概清楚自己的定位和目标，不至于好高骛远，也不至于妄自菲薄。每年我们都会发现很多学生最开始备注的是北大xxx，清华xxx，中科院xxx，后面就改成了广西xxx，重庆xxx，这反映了很多同学一开始对于自己定位有很大偏差。</p><p>​        我们从来不鼓励我们的学员一定要冲击名校，对于某些目标定得过高的同学我们会提醒其风险，这个风险如果是你愿意承受的，那OK，我们一定会全力支持你。我们辅导的一对一学员中，每年都有本科背景不好，甚至可以说比较差的最后逆袭清北复交这种名校，但这种是少数，更多的还是本身基础不太差，目标定得合理的学员。而那些一开始目标定得不合理，中途一再改换目标院校甚至是专业的同学，最后结果一般都不太好。</p><p>考哪里确实需要根据你的基础水平、学习能力、考研投入、综合能力和风险偏好五个维度决定，所以我们把它称为<strong>“五度择校模型”</strong>。</p><h3 id="院校专业信息怎么查？"><a href="#院校专业信息怎么查？" class="headerlink" title="院校专业信息怎么查？"></a><strong>院校专业信息怎么查？</strong></h3><p>目录</p><p>一. 招生人数、考试科目</p><p>二. 学费、学制</p><p>三. 往年录取情况</p><ol><li>细说报录比</li><li>拟录取名单</li><li>复试线</li></ol><p>四. 考纲及参考书</p><p>五. 复试形式及成绩构成</p><p>六. 就业情况</p><p><strong>招生人数、考试科目****👇</strong></p><p>决定要考某个院校专业之前，肯定要了解最基本的一些信息，首先当然是招生人数、考试科目、学制。这些信息如何获取？答案是相应院校的研究生招生网。（注意：这里的研究生招生网不是中国研究生招生信息网（<a href="https://yz.chsi.com.cn/%EF%BC%89%EF%BC%8C%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E9%9D%9E%E5%B8%B8%E9%87%8D%E8%A6%81%EF%BC%8C%E4%BD%86%E6%98%AF%E6%AD%A4%E5%A4%84%E7%9A%84%E7%A0%94%E7%A9%B6%E7%94%9F%E6%8B%9B%E7%94%9F%E7%BD%91%E6%98%AF%E9%99%A2%E6%A0%A1%E7%9A%84%E7%A0%94%E7%A9%B6%E7%94%9F%E6%8B%9B%E7%94%9F%E7%BD%91%EF%BC%89%EF%BC%8C%E6%AF%8F%E4%B8%AA%E6%8B%9B%E7%A0%94%E7%A9%B6%E7%94%9F%E7%9A%84%E5%AD%A6%E6%A0%A1%E9%83%BD%E6%9C%89%E7%A0%94%E7%A9%B6%E7%94%9F%E6%8B%9B%E7%94%9F%E7%BD%91%EF%BC%8C%E5%B0%91%E9%83%A8%E5%88%86%E5%90%8D%E5%AD%97%E5%8F%AB%E6%8B%9B%E7%94%9F%E5%8A%9E%E5%85%AC%E5%AE%A4%EF%BC%8C%E6%9C%89%E7%9A%84%E5%90%88%E5%B9%B6%E5%9C%A8%E7%A0%94%E7%A9%B6%E7%94%9F%E9%99%A2%E7%BD%91%E7%AB%99%E9%87%8C%E3%80%82">https://yz.chsi.com.cn/），这个网站非常重要，但是此处的研究生招生网是院校的研究生招生网），每个招研究生的学校都有研究生招生网，少部分名字叫招生办公室，有的合并在研究生院网站里。</a></p><p>两个途径找到相应院校的研究生招生网站。</p><ul><li>第一个最直接的就是百度关键词“xx大学研究生招生网”，如下图所示。百度大家懂的，中间有一些广告，大家注意甄别就好。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231212121.png" alt="图片"></p><ul><li> 第二个方法就是进到相应的学校官网或者研究生院官网，从官网跳转至相应的研究生招生信息网。</li></ul><p>进入相应的院校研究生招生网站，从中找到招生专业目录，大多数院校都是单列的，个别学校把招生专业目录放到招生简章的附件里。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231212140.png" alt="图片"></p><p>招生简章和招生专业目录一般是当年的9月份或者10月份公布，注意不要点错，不要点成推荐免试的招生专业目录，那是给保研的同学看的。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231212220.png" alt="图片"></p><p>打开招生专业目录我们就可以看到计划招生人数和考试科目。计划招生人数通常都包括推免人数，所以应该用计划招生人数减去推免人数才是考研统招名额。北京大学属于比较人性化的，很多学校招生专业目录只列明了招生计划总人 数，但是推免招多少人没有具体列明，这时候有三个方法：</p><p>\1. 找到当年的推荐免试拟录取名单，用总人数减去已经成功推免的人数就是当年的统考录取名额。</p><p>\2. 参考去年的统考录取人数，找到去年的拟录取名单或者报录统计表，基本上每年不会有太大变动。</p><p>\3. 打电话询问院校招生办，这个大家可以放心打，招生人数属于本来应该公开的信息，对方也会尽量回答你。</p><p><strong>学费和学制****👇</strong></p><p>学费和学制一般会在招生简章中列明，如果招生简章中没有大家多翻几页相应院校研究生招生信息网的通知公告，这些信息都会在自己院校的研究生招生信息网上公布。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231212253.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231212313.png" alt="图片"></p><p><strong>往年录取情况</strong>👇</p><p><strong>报录比</strong></p><p>多同考研时非常关注报录比，简单来说报录比就是说多少人当中可以录取一个，很多比较热门的院校专业报录比都超过10：1了。报录比怎么找？还是相应院校的研究生招生网，有几点需要重点提醒一下。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231212334.png" alt="图片"></p><p><strong>重点说明！</strong></p><p>第一，并不是所有院校都公布报录比！！！实际上只有少部分院校有公布报录比。如果学校不公布具体报了多少人，那实际上外界基本是不知道报录比的，包括考上的学长学姐，他们只知道录了多少人，不知道报考了多少人。所以，不要再四处去问报录比了，第一步先去相应院校研究生招生网查询，如果没有可以通过下面介绍的其它途径了解报考难度。</p><p>第二，报录比只能大概参考一下，比如同一学校前两年报录比比较低，今年报录比特别高，说明这个学校、专业越来越火了。其次，报录比只有在同一水平的院校专业上去参考才有意义，比如北京大学心理学和西南大学心理学，假设西南大学心理学报录比更高，说明北京大学心理学考上更容易吗？当然不是！因为报考北京大学的同学水平与西南大学的同学水平基本不在一个层次上，竞争不同，水平不同，这样比报录比没有意义。</p><p>第三，报录比上下浮动很厉害，去年5:1，今年10:1，明年可能是5:1，也有可能是20:1。尤其是招生人数比较少的专业，比如一共只招5个人，那报录比浮动会更大。</p><p><strong>综上，报录比如果能查到，可以参考一下；如果没有，也没有关系，因为参考意义也不太大。</strong></p><p><strong>拟录取名单</strong></p><p>每个学校都会公布拟录取名单，这是教育部信息公开的要求，拟录取名单一般会列明各个方向录取了哪些人，分数多少（包括初试和复试）。如图所示，以华南理工大学为例，复试结果一般都是四五月份出来，大家在通知公告里往前翻一翻就能找到。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231212359.png" alt="图片"></p><p>比较麻烦一点的有两种情况：</p><p>第一，有的学校虽然公布了拟录取名单，但是拟录取名单公示期已过，就访问不了了。这种情况不用担心，考研界也有一些勤劳的小蜜蜂，就是一些考研机构，他们每年都会把院校的拟录取名单下载下来放到自己网站上。大家直接在百度上搜索“xx大学20xx年拟录取名单”就可以，不用担心这个二手的数据不准确，因为全部是从官网上搬过来的。</p><p>第二，有的学校虽然公布了拟录取名单，但是这个只是为了应付教育部信息公开的要求，里面并没有区分各个专业方向，只有一连串的姓名、考号。这种拟录取名单没有什么参考价值，因为你完全不知道你要考的那个方向到底录了哪些，考了多少分。这种情况就只能找考上的直系学长学姐打听了。</p><p><strong>复试线</strong></p><p>首先声明，复试线不等于国家线。</p><p><strong>考研复试分数线是指全国硕士研究生入学考试录取的最低分数要求，达到复试线才能参加复试。</strong></p><p>先科普一下国家线和自主划线。</p><p>中国的考研复试分数线分为国家统一划定的分数线和34所自主划定分数线高校划定的分数线。对于考研国家线，不同的考区和不同的专业与学科都不一样。国家线有A区和B区之分。</p><p>教育部根据各地的经济、教育发展水平而划分的院校区域。考研地区总体分为两大类，国家按照一类、二类确定考生参加复试基本分数要求。</p><ul><li><p>一类(A区)：北京、天津、上海、江苏、浙江、福建、山东、河南、湖北、湖南、广东、河北、山西、辽宁、吉林、黑龙江、安徽、江西、重庆、四川、陕西21个省(市)。</p></li><li><p>二类(B区)：内蒙古、广西、海南、贵州、云南、西藏、甘肃、青海、宁夏、新疆10个省(区)。</p></li></ul><p>执行自主划线的学校有34所，基本上就是所有的985院校。985院校一共39所，其中34所都是自主划线，具体是指北京大学、中国人民大学、清华大学、北京航空航天大学、北京理工大学、中国农业大学、北京师范大学、南开大学、天津大学、大连理工大学、东北大学、吉林大学、哈尔滨工业大学、复旦大学、同济大学、上海交通大学、南京大学、东南大学、浙江大学、中国科学技术大学、厦门大学、山东大学、武汉大学、华中科技大学、湖南大学、中南大学、中山大学、华南理工大学、四川大学、重庆大学、电子科技大学、西安交通大学、西北工业大学、兰州大学。另外5所执行国家线的985高校分别是：中央民族大学、中国海洋大学、西北农林科技大学、华东师范大学和国防科学技术大学。</p><p>那么对于非自划线高校来说，过了国家线是不是就能参加复试了呢？过了国家线不一定进复试。分数过国家线是进复试的必要条件而不是充分条件，不过国家线肯定不能进复试。</p><p>如果高校发现今年他们通过初试国家线的人数多于录取的人数了，那么他们也要控制参加复试的人数，而具体的参加复试的人数与实际录取的人数之比取决于学校，原则上是按照120%的比例差额进入复试，但是很多高校目前都超过这个比例，比例越高对考研人越不友好，因为一旦复试被刷，调剂和找工作都比较难了 。</p><p>同理，如果报考的学校专业冷门，可能会报考人数不足，所以只要报考人员过了国家线就能进复试。</p><p>每年的国家线很好查，直接百度就能查到，那么复试线怎么查呢？答案还是院校的研究生招生信息网。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231212421.png" alt="图片"></p><p><strong>小问题</strong></p><p>如何知道进入复试的差额比例呢？</p><p>第一种方法：看学校发布的的复试办法。（下面的成绩计算方式部分会详细介绍如何查找复试办法）</p><p>第二种方法：找到学校的一志愿复试名单，看看进入复试多少人，然后看一下拟录取名单里一志愿录取人数，后者除以前者我们就得到了复试差额比例。</p><p><strong>考纲及参考书****👇</strong></p><p>考试大纲包括公共课考试大纲和专业课考试大纲。</p><p><strong>公共课考试大纲包括：</strong>考研政治、考研英语、考研数学考试大纲，每年由教育部统一公布，时间一般在9月。<strong>专业课考试大纲</strong>概括说来分为三类，即教育部统一公布、各招生院校公布以及不公布三种类型。</p><p>由教育部统一公布的一般为考研统考专业课大纲，时间一般在9月，与公共课考试大纲的公布时间一致;</p><p>自主命题的专业课考试院校，其考试大纲则由各高校自主决定是否发布。所以现实的情况是，很多学校没有考试大纲，但是会有参考书，少部分学校参考书也没有公布。这种情况怎么办？找考上的直系研究生学长学姐。</p><p>如果院校公布，那一定是在自己的研究生招生信息网上，以华南师范大学为例。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231212441.png" alt="图片"></p><p><strong>小知识</strong></p><p>Q：专业课统考、联考、自命题是什么意思？</p><p>A：一般说来，<strong>专业课考试分国家统考、各大高校联考和高校自主命题三种形式</strong>，其中专业课自主命题的考试形式占据主导地位，90%以上的专业都是自命题专业课。</p><p>其中统考和联考的专业课科目为：314数学(农)、315化学(农)、414植物生理学与生物化学、415动物生理学与生物化学、408计算机学科专业基础综合、199管理类联考综合能力、396经济类联考综合能力、398法硕联考专业基础(非法学)、498法硕联考综合(非法学)、397法硕联考专业基础(法学)、497法硕联考综合(法学)、312心理学专业基础综合、313历史学专业基础、311教育学专业基础综合</p><p><strong>复试内容和成绩计算方法****👇</strong></p><p>初试和复试分别占多少权重？复试内容包含哪些，笔试面试权重各占多少？答案就在复试办法里。在每年的3月份左右，学校会公布复试录取办法，里面会说明复试形式、内容以及成绩计算方式。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231212505.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231212540.png" alt="图片"></p><p>▲ 复试办法内容一览</p><p><strong>就业情况****👇</strong></p><p>大家是否知道有种东西叫就业报告，不过就业报告就跟报录比一样，是否公布取决于院校。就业报告上会列明毕业学生的去向，从中你能够看出大家就业情况怎么样。就业情况不属于研究生招生信息网上公布的内容，所以这时候就要去学院的官网了，比如你想考北京大学国际法学院，那咱们就去北京大学法学院网站上看是否有公布，或者直接百度“xx大学xx专业就业报告”。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/20221231212605.png" alt="图片"></p><p><strong>更多信息****👇</strong></p><p>如果大家想了解考上后课程设置、奖学金、校区等更多情况，就多上目标学院的官方网站，里面会有诸如培养方案、奖学金和助学金体系、导师信息等。大家在考研的过程中一定要有事没事逛三个网站：</p><ul><li>第一个就是中国研究生招生信息网</li></ul><p>考研的权威通告以及一些必须的流程比如报名、调剂都需要通告中国研究生招生网。</p><ul><li>第二个就是目标院校的研究生招生信息网</li></ul><p>你想想这个名字就知道这是为你专门建的网站，里面的大多数信息因此都是与你息息相关的，你想知道的信息首先应该先去里面找一圈，把自己要考的院校研究生招生信息网摸熟，关注里面的最新信息。</p><ul><li>第三个就是目标学院的官网</li></ul><p>里面能够了解到更多专业相关信息，同时里面的一些活动通知、介绍也会给你一些动力。</p><p><strong>如何比较院校？</strong></p><p>从几所学校当中最终选择一所并不是一件很容易的事儿，但是也没有那么难，下面我们经验超市将尝试给出一些我们的经验之谈，供大家在择校时参考。</p><p>1<strong>选择之前必须明确自己的偏好。</strong></p><p>偏好是什么意思呢？你可以简单理解为你为一系列因素排一个优先级。对于择校来说，可能会有这样一些关键因素，考试难度、就业情况、学费、地域、有无宿舍、实习机会、出国交流机会等等。</p><p>如果我们面对这些因素你事先没有一个偏好设定，那么你发现自己选来选去还是不知道选什么好。</p><p>如何给这些因素排优先级呢，你需要思考你自己最看重什么因素。比如如果是我自己的话，我的优先级排序会是地域、考试难度、有无宿舍，其它的不太care，根据这样一个偏好设定，我会优先选择理想地域里考试难度适当的学校，如果有宿舍最好，没有宿舍也只有认了；如果理想地域里没有考试难度适当的学校，那就需要选择去理想地域外求学或者在理想地域上一个难度不相匹配的学校，一个选择下面往往包含了更多细小的选择。</p><p>如果你的偏好比较简单，那么你选出来就比较容易，如果你的偏好设定比较复杂，那么建议换一种稍微更精细的方法。</p><p>一开始，依然是排优先级，比如你排列了7个因素，那么从最前面至最后面每个因素在你做决策的过程中权重是由大至小的。接下来为了防止你后面纠结症又犯，你可以给各个因素赋予权重，比如目前有1234567，一共七个因素。</p><p>假设给1赋予的权重是0.3、2赋予的权重是0.2，以此类推，只要你保证最后七个因素的权重加起来为1就好了。权重赋予完成后，我们要对abcde一共5个高校，分别从1234567，一共七个维度去打分，每个维度满分为1分，全部打分完成后，用权重乘以对应性的打分，然后求和就是这所院校的综合得分。五所院校中，综合得分最高的自然就是你最理想的学校。</p><p>2<strong>合理排优先级或者权衡各项因素</strong></p><p>不要忽视地域的重要性。不少同学在择校时地域范围基本上可北可南、可东可西，实际上地域很重要。地域为什么很重要？</p><p>首先，你所学的专业在你想要工作的地方或者就是在学校所在地有多大需求？如果你选择的专业在当地没有多大需求，你去读不是不可以，而是学完后就业普遍会差一些，同时你在读期间实习资源或者学校平台提供的资源会少一些。</p><p>其次，尽管大多数人年轻时都有想去闯一闯的心，但是如果你到了一个不喜欢的城市、不习惯的环境，你可能几年过得不会很开心，并且毕业后可能也不会待在那个城市，这样的话你可能又得重新去一个新的城市闯荡或者回家。</p><p>如果你读研是为了能够得到全方位的提高，建议选择综合性大学。专业型大学，比如中央财经、中国传媒，这样的学校就业肯定是不用担心，但是这样的学校就是太专了，缺乏通识教育的氛围以及普遍缺乏大学的活力。你是学财经的，我也是学财经的，学校的课和图书馆的课基本上都是财经的，那这样就会导致受某一领域的局限比较大。</p><p>如果有条件，建议去你选择的大学校园里走一走。人的感觉是很奇妙的，你见了很多人，不需要太深入交流，可能有的人你就比较讨厌，有的人你就比较喜欢。学校也是一样，百闻不如一见，实地去感受一下，看看你是否还是对这所大学充满渴望。 </p><p>选择信息比较透明的大学。无论是报录比还是真题、考试范围等信息都是考生非常关心的信息，有的学校做得很好，基本上都有公布，甚至考虑到了文件的可读性；有的学校做得不好，几乎没有任何信息，研究生招生网形同虚设。建议考生选择前者，因为一是表明这所学校很人性化，关心学生群体利益，为学生着想，另外说明这所学校的行政管理是非常不错的；二是越透明的学校灰色空间越小，有的学校在这方面风评比较差。</p><p>选择有宿舍的学校。越来越多的学校开始不给专硕提供宿舍，尽管不提供宿舍学校有的会有一些租房补贴，但是不住在学校里，你其实更像一个社会人，而不是一个学生，学校的很多课或者很多活动你会慢慢远离，对这个学校的归属感就没有那么强，非全相比全日制的毕业生不仅认可度差一些，归属感也差一些，就是这个原因。</p><p><strong>注意</strong></p><p>如果参考上述指南依然不能确定院校专业。那么你可以选择经验超市的择校服务，择校服务由择校老师一对一择校，根据你的情况和需求，定向搜集信息，给出专业建议。</p>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文注意项</title>
      <link href="/archives/693208d8.html"/>
      <url>/archives/693208d8.html</url>
      
        <content type="html"><![CDATA[<p><strong>阅读论文</strong></p><p>我们要明白，无论是专业一还是专业二，老师除了看你基本知识是否掌握外，还要看你是否有自己的意识和思想。尤其是专业二，它更多的是考察你的整个知识框架和逻辑结构，而不是像专业一那样更多的是靠死记硬背。</p><p>因此，我们就能够明确我们阅读文献的目的：</p><p><strong>不需要精读，不需要理解文献中每一个名词、每一句话的意思。只需要拓宽自己的知识面，明白这篇文章大概讲了个什么，使自己在遇到“偏题”时可以有话写。</strong></p><p>那么，如何挑选文献呢？</p><p>又如何阅读呢？</p><p>具体操作如下：</p><p><strong>论文的选择</strong></p><p><strong>1.首选你目标导师/目标院校的论文。</strong>我上了近一年的研究生课程，我发现各位老师的共同点都是：<strong>在教学过程中会选定自己发表的某一篇论文或者某一个正在研究的课题，作为上课内容。</strong>因此，这些老师在参与出卷时，亦是如此。</p><p><strong>2.选择你所在领域里的权威期刊（2本左右即可）。</strong>帮助你了解该行业的热点，了解前沿在干些什么。</p><p><strong>阅读的方法</strong></p><p><strong>1.泛读。</strong>一篇论文从头到尾读完再归纳总是很耗费时间的，你没有那么多时间耗在论文上。</p><p><strong>如果是阅读目标导师/目标院校的论文，</strong>直接看标题+摘要，通篇浏览文章中的大标题明白文章涉及到了哪些内容（大标题的作用就是帮助你在写论述题的时候分点阐述，显得更有逻辑和层次），最后看结论（看看他解决了什么问题？提出了什么问题？）。</p><p><strong>如果是阅读权威期刊的论文，</strong>直接翻目录，选择热点话题（即反复出现的，频率在3-5次以上的），再将这些论文分门别类地读（如果没有时间，读一两篇就行，不一定非要全部读完，只要你知道有这个事就行）。阅读方法同上。</p><p><strong>2.做笔记。做笔记分为两种：</strong></p><p><strong>（1）总结、梳理框架。</strong>框架可以参考这样的格式：标题、摘要（自己概述，不要全写）、大小标题、结论。</p><p><strong>（2）勾画重点。</strong>比如某一段看起来很好用的话语，写上去能让你的论述题增光添彩，看起来更加学术化；比如某一个比较新颖的观点；比如某一句让你明白原先并不理解的知识点的阐述……</p>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考研数学拦路虎</title>
      <link href="/archives/b0b755d5.html"/>
      <url>/archives/b0b755d5.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/%E6%95%99%E8%AE%AD1.png"></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/%E6%95%99%E8%AE%AD2.png"></p>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>准研究生必看指南</title>
      <link href="/archives/776ac2df.html"/>
      <url>/archives/776ac2df.html</url>
      
        <content type="html"><![CDATA[<p>你现在可以考虑考虑：你是否要读博？你的工作意向是什么？</p><p>考虑好了后，你可以规划自己的研究生生活了。</p><p>如果你想要读博，那你的研究生生活重心肯定就在学术上，包括你的论文、课题等等。由于我不读博，所以在这一点上无法给你们参考性意见，这篇文章对你们的帮助性也不是很大。需要你们自己斟酌。</p><p>如果你想毕业后直接工作，那你的研究生生活重心就不要全部扑在学术上了，应该分一些心思在专业技能甚至学生会活动上面（我当初也对学生会活动是不屑一顾的态度，现在发现其实有时间参加还是尽量参加这些活动）。</p><p><strong>争取拿各种奖状</strong></p><p>我们在研究生阶段拿到的很多奖状并没有太大含金量，比如什么优秀共青团员、优秀干部等等，这一类没有证书编号的奖状其实在工作阶段的认可度不会很大，<strong>但是！！它能够帮助你拿奖学金！！用人单位会看奖学金！****而且奖学金奖状是有编号的！</strong>我这学期拿了一些奖状 ，包括院级校级的，只有奖学金有证书编号。</p><p>绝大多数的学校都是看你的论文、专业课成绩、奖状来评奖学金的。奖学金不仅仅是钱的问题，更重要的是它是你以后去面试的敲门砖。现在有些用人单位在设置招聘条件的时候，直接会在招聘信息上表明“<strong>获得研究生学业奖学金一等奖”。</strong></p><p>那么，如何拿到奖状呢？</p><p><strong>参加学生会。</strong></p><p>大家不要瞧不起学生会或者觉得它的工作太繁琐你不想做，这是你熟悉研究生辅导员、各导师、各领导最快的方式。这意味着，到时候评优评奖大家首先就会考虑你。你想想，在评奖的时候，辅导员是选择一个不熟悉的学生还是选择一个辅助他工作常常见到的学生呢？</p><p>加入学生会除了评奖以外，还能够让你了解到更多的内部消息。比如以后的研究生毕业流程、各导师的上课要求习性等等。</p><p>最好的是加入团支部（你要是有能力能加入党支部更好），因为这更容易你入党，如果你以后要考公的话这一点很占优势。</p><p>再者就是<strong>积极参加各种活动。</strong>什么学术论文，创新创业大赛，互联网大赛，寝室文化节……<br>最后就是关注其他的一些社会活动。研究生比较关注志愿者这一块，比如博物馆志愿者，抗疫志愿者等等，多多参加社会实践活动，这些志愿者证明也会有帮助的。</p><p>大家记住，<strong>一定是要在不影响学习的情况下，参加这些活动拿奖状，这些奖状是为了你拿奖学金服务的。</strong></p><hr><p><strong>一些小建议</strong></p><p>我给大家说一下我的研究生安排。</p><p>我是三年专硕，毕业要求是一篇小论文和毕业论文。我以后的意向工作招聘条件是：研究生一等奖学金和师范技能。</p><p>根据这些要求，我对自己做了如下安排：<br>上午：补充自己的专业基础知识<br>下午再阅读专业相关的论文2篇，寻找小论文的内容和毕业论文的方向。在阅读过程中做笔记，列出论文框架并写下论文疑惑，明天再阅读疑惑相关的论文。</p><p>晚上：看看自己感兴趣的“闲书”，其实也是和专业相关的。还有时间的话就看部电影，因为这些东西其实都是融会贯通的，很多知识也可以在其他地方学到，比如逛博物馆、看电影等等。</p><hr><p>因为每个学校的评奖学金、毕业要求不一样，所以这些东西需要你们提前和师姐师兄、导师沟通，问问进哪个部门比较好？哪个奖项加分比较多等等。</p><p>可能在你们看起来，这篇推文很功利，说实话我自己也是这么认为。但是真的是没办法，你不功利一点以后毕业找工作别人就不要你。有时候空有一腔热血和抱负，却卡在了面试门槛这里。</p><p>大家要多和别人交流，交换信息～不要封闭自己埋头苦干</p>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>租房那些事</title>
      <link href="/archives/cb5b4747.html"/>
      <url>/archives/cb5b4747.html</url>
      
        <content type="html"><![CDATA[<h2 id="租房需谨慎"><a href="#租房需谨慎" class="headerlink" title="租房需谨慎"></a>租房需谨慎</h2><h3 id="要注意的点："><a href="#要注意的点：" class="headerlink" title="要注意的点："></a>要注意的点：</h3><ol><li><strong>中介费可以打折</strong>（85折    话术：‘我不是第一次租房了，我知道可以打折，这样好不好，你的中介费我知道能打折，但是咱就不打折了，但是能不能帮我记得小忙第一个起租日能不能帮我晚一点、钥匙能不能给我早一点，你空这不也空着吗，又或者是给我换点东西、再给我配点东西’）</li><li>通勤时间、周围环境要好、外卖要多（周边配置）</li><li>性价比 房租在工资1/4（租房价格）</li><li>户型结构和装修</li><li>合租的室友、楼层和噪音（邻里关系）</li><li>朝向、拒绝西晒（房屋本身）</li><li>房东的印象（房东相处）</li><li>自如、链家租房平台可以参考一下（适用于过渡性要求，不适合长期居住，长期居住最终还是会不满足的，因为它真的是各方面的问题，就是省心但是贵）</li></ol><h3 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h3><blockquote><p>朝西的房子不要上午看</p><p>采光不要的房子不要晚上看</p><p>朝东的房子不要上午看</p></blockquote><h3 id="经验"><a href="#经验" class="headerlink" title="经验"></a>经验</h3><p>有东西坏了采取的措施：</p><p>先自己查一下价格，告诉他这坏了怎么坏了，要是自己弄坏了的，那我就花钱自己修了，非人为坏了的，拿就拍照片或者怎么着告诉房东，同时也要对房东说，你可能就比较忙，不用你单独跑一趟，我查了一下，网上是修一下上门多少钱，我就截图发给他，我说这个你要行的话，我就找师傅上门来修，回头我付了，付完之后你看你是转给我，还是我下次房租里面给它扣掉</p><p>不建议租老房子，像在小城市的话就是这样子，就是其他的可能我没有什么特别多的，老房子可能会有一些很麻烦的问题（漏雨漏水、蟑螂、设备老旧，不能在网上交水电费，你还必须得去营业厅去缴纳）</p><p>不建议租高层 + 一梯多户比如你上班卡点出门了或者你就等那一个电梯其实挺痛苦的、挺耽误事的（五户两梯是上限了，除非你错峰上下班）</p><p>如果是要租公寓的话，一定要看好是不是商用水电</p><p>不建议租没有装修过的公寓，可能出现上下楼一直在装修，电梯会经常有装修工人在里面出入，每层楼都要停几分钟直接给你带来的后果就是必须要等电梯十几二十分钟</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学车</title>
      <link href="/archives/ded3615c.html"/>
      <url>/archives/ded3615c.html</url>
      
        <content type="html"><![CDATA[<h3 id="科目三"><a href="#科目三" class="headerlink" title="科目三"></a>科目三</h3><h4 id="电子车灯光模拟"><a href="#电子车灯光模拟" class="headerlink" title="电子车灯光模拟"></a>电子车灯光模拟</h4><p>开始，下面将进行模拟夜间行驶场景灯光使用的考试，请按我的指令在5秒内做出相应的灯光操作。</p><table><thead><tr><th align="center">请开启前照灯</th><th>近光灯</th></tr></thead><tbody><tr><td align="center">同方向近距离跟车行驶时</td><td>近光灯</td></tr><tr><td align="center">与机动车会车</td><td>近光灯</td></tr><tr><td align="center">通过路口时</td><td>近光灯</td></tr><tr><td align="center">在有路灯照明良好的道路上行驶时</td><td>近光灯</td></tr><tr><td align="center">在有信号灯控制的路口转弯时</td><td>近光灯</td></tr><tr><td align="center">在无信号灯控制的路口转弯时</td><td>远、近光交替，闪光</td></tr><tr><td align="center">夜间通过急弯、坡路、拱桥、人行横道</td><td>远、近光交替，闪光</td></tr><tr><td align="center">超越前方车辆时</td><td>远、近光交替，闪光</td></tr><tr><td align="center">车辆驶入无照明、照明不良的道路时</td><td>远光灯</td></tr><tr><td align="center">在路边停车时在路边停车时</td><td>示廓灯、危险警示灯</td></tr></tbody></table><h4 id="直线行驶"><a href="#直线行驶" class="headerlink" title="直线行驶"></a>直线行驶</h4><h5 id="一号线"><a href="#一号线" class="headerlink" title="一号线"></a>一号线</h5><blockquote><ol><li>起步（按喇叭、打转向）</li><li>直线行驶</li><li>会车（点两下刹车、套右边虚线10-15公分）</li><li>向右拐（按喇叭、点刹车、左右看、打转向）</li><li>超车（686）</li><li>加减档</li><li>路口直行（按喇叭、点刹车、左右看）</li><li>掉头（点刹车、打转向）</li><li>公交站台（点两下刹车）</li><li>路口直行（按喇叭、点刹车、左右看）</li><li>公交站台（点两下刹车）</li><li>学校区域（点两下刹车）</li><li>向右拐（按喇叭、点刹车、左右看、打转向）</li><li>变道（646）</li><li>靠边停车（打转向、减一档、离边缘线20-30公分、拉手刹、回空档、松离合、回转向、熄火、解安全带、开车门下车、关车门）</li></ol></blockquote><h5 id="二号线"><a href="#二号线" class="headerlink" title="二号线"></a>二号线</h5><blockquote><ol><li>起步（按喇叭、打转向）</li><li>直线行驶</li><li>会车（点两下刹车、套右边虚线10-15公分）</li><li>向左拐（按喇叭、点刹车、左右看、打转向）</li><li>加减档</li><li>路口直行（按喇叭、点刹车、左右看）</li><li>按喇叭、点刹车、掉头</li><li>路口直行（按喇叭、点刹车、左右看）</li><li>点刹车、公交站台</li><li>点刹车、学校区域</li><li>向右拐（按喇叭、点刹车、左右看、打转向、向右拐）</li><li>超车（686）</li><li>变道（646）</li><li>靠边停车（打转向、减一档、离边缘线20-30公分、拉手刹、回空档、松离合、回转向、熄火、解安全带、开车门下车、关车门）</li></ol></blockquote><h5 id="三号线"><a href="#三号线" class="headerlink" title="三号线"></a>三号线</h5><blockquote><ol><li>起步（按喇叭、打转向）</li><li>直线行驶</li><li>点两下刹车、公交站台</li><li>向左拐（按喇叭、点刹车、左右看、打转向、向左拐）</li><li>点两下刹车、公交站台</li><li>点两下刹车会车、套右边虚线10-15公分</li><li>路口直行（按喇叭、点刹车、左右看）</li><li>点两下刹车、学校区域</li><li>点两下刹车、打转向、掉头</li><li>路口直行（按喇叭、点刹车、左右看）</li><li>超车（686）</li><li>加减档</li><li>向右拐（按喇叭、点刹车、左右看、打转向）</li><li>点两下刹车、公交站台</li><li>变道（646）</li><li>靠边停车（打转向、减一档、离边缘线20-30公分、拉手刹、回空档、松离合、回转向、熄火、解安全带、开车门下车、关车门）</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>泛型中的TEKV</title>
      <link href="/archives/e0700ddd.html"/>
      <url>/archives/e0700ddd.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Java 泛型（generics）是 JDK 5 中引入的一个新特性, 泛型提供了编译时类型安全检测机制，该机制允许开发者在编译时检测到非法的类型。</p><p>泛型的本质是参数化类型，也就是说所操作的数据类型被指定为一个参数。</p><h2 id="泛型带来的好处"><a href="#泛型带来的好处" class="headerlink" title="泛型带来的好处"></a>泛型带来的好处</h2><p>在没有泛型的情况的下，通过对类型 Object 的引用来实现参数的“任意化”，“任意化”带来的缺点是要做显式的强制类型转换，而这种转换是要求开发者对实际参数类型可以预知的情况下进行的。对于强制类型转换错误的情况，编译器可能不提示错误，在运行的时候才出现异常，这是本身就是一个安全隐患。</p><p>那么泛型的好处就是在编译的时候能够检查类型安全，并且所有的强制转换都是自动和隐式的。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class GlmapperGeneric&lt;T&gt; &#123;</span><br><span class="line">  private T t;</span><br><span class="line">    public void set(T t) &#123; this.t = t; &#125;</span><br><span class="line">    public T get() &#123; return t; &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        // do nothing</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">    * 不指定类型</span><br><span class="line">    */</span><br><span class="line">  public void noSpecifyType()&#123;</span><br><span class="line">    GlmapperGeneric glmapperGeneric = new GlmapperGeneric();</span><br><span class="line">    glmapperGeneric.set(&quot;test&quot;);</span><br><span class="line">    // 需要强制类型转换</span><br><span class="line">    String test = (String) glmapperGeneric.get();</span><br><span class="line">    System.out.println(test);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">    * 指定类型</span><br><span class="line">    */</span><br><span class="line">  public void specifyType()&#123;</span><br><span class="line">    GlmapperGeneric&lt;String&gt; glmapperGeneric = new GlmapperGeneric();</span><br><span class="line">    glmapperGeneric.set(&quot;test&quot;);</span><br><span class="line">    // 不需要强制类型转换</span><br><span class="line">    String test = glmapperGeneric.get();</span><br><span class="line">    System.out.println(test);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这段代码中的 specifyType 方法中 省去了强制转换，可以在编译时候检查类型安全，可以用在类，方法，接口上。</p><h2 id="泛型中通配符"><a href="#泛型中通配符" class="headerlink" title="泛型中通配符"></a>泛型中通配符</h2><p>我们在定义泛型类，泛型方法，泛型接口的时候经常会碰见很多不同的通配符，比如 T，E，K，V 等等，这些通配符又都是什么意思呢？</p><h3 id="常用的-T，E，K，V，？"><a href="#常用的-T，E，K，V，？" class="headerlink" title="常用的 T，E，K，V，？"></a>常用的 T，E，K，V，？</h3><p>本质上这些个都是通配符，没啥区别，只不过是编码时的一种约定俗成的东西。比如上述代码中的 T ，我们可以换成 A-Z 之间的任何一个 字母都可以，并不会影响程序的正常运行，但是如果换成其他的字母代替 T ，在可读性上可能会弱一些。<strong>通常情况下，T，E，K，V，？是这样约定的：</strong></p><ul><li>？表示不确定的 java 类型</li><li>T (type) 表示具体的一个java类型</li><li>K V (key value) 分别代表java键值中的Key Value</li><li>E (element) 代表Element</li></ul><h3 id="？无界通配符"><a href="#？无界通配符" class="headerlink" title="？无界通配符"></a>？无界通配符</h3><p>先从一个小例子看起，原文在 这里 。</p><p>我有一个父类 Animal 和几个子类，如狗、猫等，现在我需要一个动物的列表，我的第一个想法是像这样的：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">List&lt;Animal&gt; listAnimals</span><br></pre></td></tr></table></figure><p>但是老板的想法确实这样的：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">List&lt;? extends Animal&gt; listAnimals</span><br></pre></td></tr></table></figure><p>为什么要使用通配符而不是简单的泛型呢？通配符其实在声明局部变量时是没有什么意义的，但是当你为一个方法声明一个参数时，它是非常重要的。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">static int countLegs (List&lt;? extends Animal &gt; animals ) &#123;</span><br><span class="line">    int retVal = 0;</span><br><span class="line">    for ( Animal animal : animals )</span><br><span class="line">    &#123;</span><br><span class="line">        retVal += animal.countLegs();</span><br><span class="line">    &#125;</span><br><span class="line">    return retVal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static int countLegs1 (List&lt; Animal &gt; animals )&#123;</span><br><span class="line">    int retVal = 0;</span><br><span class="line">    for ( Animal animal : animals )</span><br><span class="line">    &#123;</span><br><span class="line">        retVal += animal.countLegs();</span><br><span class="line">    &#125;</span><br><span class="line">    return retVal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">    List&lt;Dog&gt; dogs = new ArrayList&lt;&gt;();</span><br><span class="line">  // 不会报错</span><br><span class="line">    countLegs( dogs );</span><br><span class="line"> // 报错</span><br><span class="line">    countLegs1(dogs);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当调用 countLegs1 时，就会飘红，提示的错误信息如下：</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/1.jpg"></p><p>所以，对于不确定或者不关心实际要操作的类型，可以使用无限制通配符（尖括号里一个问号，即 &lt;?&gt; ），表示可以持有任何类型。像 countLegs 方法中，限定了上届，但是不关心具体类型是什么，所以对于传入的 Animal 的所有子类都可以支持，并且不会报错。而 countLegs1 就不行。</p><h3 id="上界通配符-lt-extends-E-gt"><a href="#上界通配符-lt-extends-E-gt" class="headerlink" title="上界通配符 &lt; ? extends E&gt;"></a>上界通配符 &lt; ? extends E&gt;</h3><blockquote><p>上届：用 extends 关键字声明，表示参数化的类型可能是所指定的类型，或者是此类型的子类。</p></blockquote><p>在类型参数中使用 extends 表示这个泛型中的参数必须是 E 或者 E 的子类，这样有两个好处：</p><ul><li>如果传入的类型不是 E 或者 E 的子类，编译不成功</li><li>泛型中可以使用 E 的方法，要不然还得强转成 E 才能使用</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">private &lt;K extends A, E extends B&gt; E test(K arg1, E arg2)&#123;</span><br><span class="line">    E result = arg2;</span><br><span class="line">    arg2.compareTo(arg1);</span><br><span class="line">    //.....</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>类型参数列表中如果有多个类型参数上限，用逗号分开</p></blockquote><h3 id="下界通配符-lt-super-E-gt"><a href="#下界通配符-lt-super-E-gt" class="headerlink" title="下界通配符 &lt; ? super E&gt;"></a>下界通配符 &lt; ? super E&gt;</h3><blockquote><p>下界: 用 super 进行声明，表示参数化的类型可能是所指定的类型，或者是此类型的父类型，直至 Object</p></blockquote><p>在类型参数中使用 super 表示这个泛型中的参数必须是 E 或者 E 的父类。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">private &lt;T&gt; void test(List&lt;? super T&gt; dst, List&lt;T&gt; src)&#123;</span><br><span class="line">    for (T t : src) &#123;</span><br><span class="line">        dst.add(t);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">    List&lt;Dog&gt; dogs = new ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;Animal&gt; animals = new ArrayList&lt;&gt;();</span><br><span class="line">    new Test3().test(animals,dogs);</span><br><span class="line">&#125;</span><br><span class="line">// Dog 是 Animal 的子类</span><br><span class="line">class Dog extends Animal &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dst 类型 “大于等于” src 的类型，这里的“大于等于”是指 dst 表示的范围比 src 要大，因此装得下 dst 的容器也就能装 src 。</p><h3 id="？和-T-的区别"><a href="#？和-T-的区别" class="headerlink" title="？和 T 的区别"></a>？和 T 的区别</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//指定集合元素只能是T类型</span><br><span class="line">List&lt;T&gt; list = new Arraylist&lt;T&gt;();</span><br><span class="line">//指定集合元素可以是任意类型，这种没有意义，一般是方法中，只是为了说明用法</span><br><span class="line">List&lt;?&gt; list = new Arraylist&lt;?&gt;();</span><br></pre></td></tr></table></figure><p>？和 T 都表示不确定的类型，区别在于我们可以对 T 进行操作，但是对 ？不行，比如如下这种 ：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 可以</span><br><span class="line">T t = operate();</span><br><span class="line"></span><br><span class="line">// 不可以</span><br><span class="line">？car = operate();</span><br></pre></td></tr></table></figure><p>简单总结下：</p><p>T 是一个 确定的 类型，通常用于泛型类和泛型方法的定义，？是一个 不确定 的类型，通常用于泛型方法的调用代码和形参，不能用于定义类和泛型方法。</p><h4 id="区别1：通过-T-来-确保-泛型参数的一致性"><a href="#区别1：通过-T-来-确保-泛型参数的一致性" class="headerlink" title="区别1：通过 T 来 确保 泛型参数的一致性"></a>区别1：通过 T 来 确保 泛型参数的一致性</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 通过 T 来 确保 泛型参数的一致性</span><br><span class="line">public &lt;T extends Number&gt; void</span><br><span class="line">test(List&lt;T&gt; dest, List&lt;T&gt; src)</span><br><span class="line"></span><br><span class="line">//通配符是 不确定的，所以这个方法不能保证两个 List 具有相同的元素类型</span><br><span class="line">public void</span><br><span class="line">test(List&lt;? extends Number&gt; dest, List&lt;? extends Number&gt; src)</span><br></pre></td></tr></table></figure><p>像下面的代码中，约定的 T 是 Number 的子类才可以，但是申明时是用的 String ，所以就会飘红报错。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/2.jpg"></p><p>不能保证两个 List 具有相同的元素类型的情况</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GlmapperGeneric&lt;String&gt; glmapperGeneric = new GlmapperGeneric&lt;&gt;();</span><br><span class="line">List&lt;String&gt; dest = new ArrayList&lt;&gt;();</span><br><span class="line">List&lt;Number&gt; src = new ArrayList&lt;&gt;();</span><br><span class="line">glmapperGeneric.testNon(dest,src);</span><br></pre></td></tr></table></figure><p>上面的代码在编译器并不会报错，但是当进入到 testNon 方法内部操作时（比如赋值），对于 dest 和 src 而言，就还是需要进行类型转换。</p><h4 id="区别2：类型参数可以多重限定而通配符不行"><a href="#区别2：类型参数可以多重限定而通配符不行" class="headerlink" title="区别2：类型参数可以多重限定而通配符不行"></a>区别2：类型参数可以多重限定而通配符不行</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class MultiLimit implements MultiLimitInterfaceA , MultiLimitInterfaceB&#123;</span><br><span class="line">// 使用“&amp;”符号设定多重边界（Multi Bounds）</span><br><span class="line">    public static&lt;T extends MultiLimitInterfaceA &amp; MultiLimitInterfaceB&gt; void test(T t)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//接口A</span><br><span class="line">interface MultiLimitInterfaceA &#123;&#125;</span><br><span class="line">//接口B</span><br><span class="line"> interface MultiLimitInterfaceB &#123;&#125;</span><br></pre></td></tr></table></figure><p>使用 &amp; 符号设定多重边界（Multi Bounds)，指定泛型类型 T 必须是 MultiLimitInterfaceA 和 MultiLimitInterfaceB 的共有子类型，此时变量 t 就具有了所有限定的方法和属性。对于通配符来说，因为它不是一个确定的类型，所以不能进行多重限定。</p><h4 id="区别3：通配符可以使用超类限定而类型参数不行"><a href="#区别3：通配符可以使用超类限定而类型参数不行" class="headerlink" title="区别3：通配符可以使用超类限定而类型参数不行"></a>区别3：通配符可以使用超类限定而类型参数不行</h4><p>类型参数 T 只具有 一种 类型限定方式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">T extends A</span><br></pre></td></tr></table></figure><p>但是通配符 ? 可以进行 两种限定：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">? extends A</span><br><span class="line">? super A</span><br></pre></td></tr></table></figure><h2 id="Class-lt-T-gt-和-Class-lt-gt-区别"><a href="#Class-lt-T-gt-和-Class-lt-gt-区别" class="headerlink" title="Class&lt;T&gt;和 Class&lt;?&gt;区别"></a><code>Class&lt;T&gt;</code>和 <code>Class&lt;?&gt;</code>区别</h2><p>前面介绍了 ？和 T 的区别，那么对于，<code>Class&lt;T&gt;</code>和 <code>&lt;Class&lt;?&gt;</code>又有什么区别呢？<code>Class&lt;T&gt;</code>和 <code>Class&lt;?&gt;</code></p><p>最常见的是在反射场景下的使用，这里以用一段发射的代码来说明下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 通过反射的方式生成  multiLimit</span><br><span class="line">// 对象，这里比较明显的是，我们需要使用强制类型转换</span><br><span class="line">MultiLimit multiLimit = (MultiLimit)</span><br><span class="line">Class.forName(&quot;com.glmapper.bridge.boot.generic.MultiLimit&quot;).newInstance();</span><br></pre></td></tr></table></figure><p>对于上述代码，在运行期，如果反射的类型不是 MultiLimit 类，那么一定会报 java.lang.ClassCastException 错误。</p><p>对于这种情况，则可以使用下面的代码来代替，使得在在编译期就能直接 检查到类型的问题：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class Test3&#123;</span><br><span class="line">    public static &lt;T&gt; T createInstance(Class&lt;T&gt; clazz) throws IlllegalAccessException, InstantiationException &#123;</span><br><span class="line">        return clazz.newInstance(); </span><br><span class="line">    &#125;</span><br><span class="line">    public static void main(String[] args) throws IlllegalAccessException, InstantiationException &#123;</span><br><span class="line">        A a = createInstance(A.class)</span><br><span class="line">        B b = createInstance(B.class)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class A &#123;&#125;</span><br><span class="line">class B &#123;&#125;</span><br></pre></td></tr></table></figure><p><code>Class&lt;T&gt;</code>在实例化的时候，T 要替换成具体类。<code>Class&lt;?&gt;</code>它是个通配泛型，? 可以代表任何类型，所以主要用于声明时的限制情况。比如，我们可以这样做申明：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 可以</span><br><span class="line">public Class&lt;?&gt; clazz;</span><br><span class="line">// 不可以，因为 T 需要指定类型</span><br><span class="line">public Class&lt;T&gt; clazzT;</span><br></pre></td></tr></table></figure><p>所以当不知道定声明什么类型的 Class 的时候可以定义一 个Class&lt;?&gt;。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class Test3 &#123;</span><br><span class="line">    public Class&lt;?&gt; clazz;</span><br><span class="line">    public Class&lt;T&gt; clazzT;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那如果也想 <code>public Class&lt;T&gt; clazzT;</code>这样的话，就必须让当前的类也指定 T ，</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class Test3&lt;T&gt; &#123;</span><br><span class="line">    public Class&lt;?&gt; clazz;</span><br><span class="line">    // 不会报错</span><br><span class="line">    public Class&lt;T&gt; clazzT;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pip技巧</title>
      <link href="/archives/af6b4628.html"/>
      <url>/archives/af6b4628.html</url>
      
        <content type="html"><![CDATA[<h3 id="1、安装pip"><a href="#1、安装pip" class="headerlink" title="1、安装pip"></a>1、安装pip</h3><p>从Python 3.4开始，pip已经内置在Python中，所以无需再次安装。</p><p>如果你的Python版本没有pip，那可以使用下面两种方法安装。</p><p>(1) 命令行中输入<code>easy_install pip</code>，非常快捷</p><p>(2) 在下面网址中下载pip安装文件，然后解压到python scripts目录中，执行<code>python setup.py install</code>安装即可</p><p>下载网址：<a href="https://pypi.org/project/pip/#files">https://pypi.org/project/pip/#files</a></p><p>下载文件：</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/640.png"></p><h3 id="2、查看pip版本"><a href="#2、查看pip版本" class="headerlink" title="2、查看pip版本"></a>2、查看pip版本</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip --version</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/649.png"></p><h3 id="3、升级pip"><a href="#3、升级pip" class="headerlink" title="3、升级pip"></a>3、升级pip</h3><p>如果pip的版本太低，可以升级当前版本<br><code>pip install --upgrade pip</code></p><h3 id="4、获取帮助"><a href="#4、获取帮助" class="headerlink" title="4、获取帮助"></a>4、获取帮助</h3><p>想了解如何使用pip，以及pip有哪些功能，执行下面语句可以获取详细教程:<br><code>pip help</code></p><h3 id="5、安装库"><a href="#5、安装库" class="headerlink" title="5、安装库"></a>5、安装库</h3><p>使用pip安装第三方库，执行下面语句<br><code>pip install package_name</code></p><p>指定package版本：<br><code>pip install package_name==1.1.2</code></p><p>比如说，我要安装3.4.1版本的matplotlib<br><code>pip install matplotlib==3.4.1</code></p><h3 id="6、批量安装库"><a href="#6、批量安装库" class="headerlink" title="6、批量安装库"></a>6、批量安装库</h3><p>如果一个项目需要安装很多库，那可以批量安装：<br><code>pip install -r e:\\requirements.txt</code></p><p><code>requirements.txt</code>文件内容格式如下：</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/641.png"></p><h3 id="7、使用wheel文件安装库"><a href="#7、使用wheel文件安装库" class="headerlink" title="7、使用wheel文件安装库"></a>7、使用wheel文件安装库</h3><p>这种方法适合离线安装，wheel文件是库的源文件，可以下载后放到本地安装。</p><p>步骤如下：</p><p>(1) 在下面网站里找相应库的.whl文件<br><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a></p><p>(2) 下载.whl文件，注意对应的版本</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/642.png"></p><p>(3) 在.whl所在文件夹内，按Shift键+鼠标右键，打开CMD窗口或者PowerShell</p><p>(4) 输入命令：<br><code>pip install matplotlib‑3.4.1‑cp39‑cp39‑win_amd64.whl</code><br>即可完成安装</p><h3 id="8、卸载库"><a href="#8、卸载库" class="headerlink" title="8、卸载库"></a>8、卸载库</h3><p>安装好的库可以再卸载：<br><code>pip uninstall package_name</code></p><h3 id="9、升级库"><a href="#9、升级库" class="headerlink" title="9、升级库"></a>9、升级库</h3><p>对当前库进行版本升级:<br><code>pip install --upgrade package_name</code></p><h3 id="10、查看库信息"><a href="#10、查看库信息" class="headerlink" title="10、查看库信息"></a>10、查看库信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip show -f package_name</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/643.png"></p><h3 id="11、查看已安装的库"><a href="#11、查看已安装的库" class="headerlink" title="11、查看已安装的库"></a>11、查看已安装的库</h3><p>列出所有已安装的第三方库和对应版本<br><code>pip list</code></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/644.png"></p><h3 id="12、将库列表保存到指定文件中"><a href="#12、将库列表保存到指定文件中" class="headerlink" title="12、将库列表保存到指定文件中"></a>12、将库列表保存到指定文件中</h3><p>把已经安装的库信息保存到到本地txt文件中：<br><code>pip freeze &gt; requirements.txt</code></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/645.png"></p><h3 id="13、查看需要升级的库"><a href="#13、查看需要升级的库" class="headerlink" title="13、查看需要升级的库"></a>13、查看需要升级的库</h3><p>目前已经安装的库中，看哪些需要版本升级<br><code>pip list -o</code></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/646.png"></p><h3 id="14、检查兼容问题"><a href="#14、检查兼容问题" class="headerlink" title="14、检查兼容问题"></a>14、检查兼容问题</h3><p>验证已安装的库是否有兼容依赖问题<br><code>pip check package-name</code></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/647.png"></p><h3 id="15、下载库到本地"><a href="#15、下载库到本地" class="headerlink" title="15、下载库到本地"></a>15、下载库到本地</h3><p>将库下载到本地指定文件，保存为whl格式<br><code>pip download package_name -d &quot;要保存的文件路径&quot;</code></p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/648.png"></p><h3 id="附：更换pip源"><a href="#附：更换pip源" class="headerlink" title="附：更换pip源"></a>附：更换pip源</h3><p>很多人抱怨pip安装库有些时候太慢了，那是pip源的问题。</p><p>前面说过pip从PyPi中下载库文件，但由于PyPi服务器在国外，访问起来很慢。</p><p>但国内提供了很多镜像源，用来替代PyPi，像清华源、豆瓣源、阿里云源等。</p><p>这些镜像源备份了PyPi里的数据，由于服务器在国内，速度会快很多。</p><p>但镜像源数据有滞后性，比如说清华源的pypi 镜像每 5 分钟同步一次。</p><p>使用镜像源有两种方式，以清华源为例：</p><p>(1) 临时使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package matplotlib</span><br></pre></td></tr></table></figure><p>除了matplotlib是要安装的库名外，其他都是固定格式</p><p>(2) 设为默认</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p>设为默认后，以后安装库都是从清华源下载，而且无需再加镜像源网址</p><p>附主流镜像源地址</p><p>清华：<a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a><br>阿里云：<a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a><br>中国科技大学：<a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/</a><br>华中理工大学：<a href="http://pypi.hustunique.com/">http://pypi.hustunique.com/</a><br>山东理工大学：<a href="http://pypi.sdutlinux.org/">http://pypi.sdutlinux.org/</a><br>豆瓣：<a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a></p>]]></content>
      
      
      <categories>
          
          <category> 指令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea快捷键</title>
      <link href="/archives/385c30d.html"/>
      <url>/archives/385c30d.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、IntelliJ-IDEA-快捷键大全-Win-版"><a href="#一、IntelliJ-IDEA-快捷键大全-Win-版" class="headerlink" title="一、IntelliJ IDEA 快捷键大全 Win 版"></a>一、IntelliJ IDEA 快捷键大全 Win 版</h2><h3 id="一、Ctrl-快捷键"><a href="#一、Ctrl-快捷键" class="headerlink" title="一、Ctrl 快捷键"></a>一、Ctrl 快捷键</h3><table><thead><tr><th align="left">快捷键</th><th align="left">说明</th><th align="left">常用</th></tr></thead><tbody><tr><td align="left">Ctrl + F</td><td align="left">在当前文件进行文本查找</td><td align="left">√</td></tr><tr><td align="left">Ctrl + R</td><td align="left">在当前文件进行文本替换</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Z</td><td align="left">撤销</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Y</td><td align="left">删除光标所在行 或 删除选中的行</td><td align="left">√</td></tr><tr><td align="left">Ctrl + X</td><td align="left">剪切光标所在行 或 剪切选择内容</td><td align="left"></td></tr><tr><td align="left">Ctrl + C</td><td align="left">复制光标所在行 或 复制选择内容</td><td align="left"></td></tr><tr><td align="left">Ctrl + D</td><td align="left">复制光标所在行 或 复制选择内容，并把复制内容插入光标位置下面</td><td align="left">√</td></tr><tr><td align="left">Ctrl + W</td><td align="left">递进式选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展选中范围</td><td align="left">√</td></tr><tr><td align="left">Ctrl + E</td><td align="left">显示最近打开的文件记录列表</td><td align="left">√</td></tr><tr><td align="left">Ctrl + N</td><td align="left">根据输入的 名/类名 查找类文件</td><td align="left">√</td></tr><tr><td align="left">Ctrl + G</td><td align="left">在当前文件跳转到指定行处</td><td align="left"></td></tr><tr><td align="left">Ctrl + J</td><td align="left">插入自定义动态代码模板</td><td align="left">√</td></tr><tr><td align="left">Ctrl + P</td><td align="left">方法参数提示显示</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Q</td><td align="left">光标所在的变量 / 类名 / 方法名等上面（也可以在提示补充的时候按），显示文档内容</td><td align="left"></td></tr><tr><td align="left">Ctrl + U</td><td align="left">前往当前光标所在的方法的父类的方法 / 接口定义</td><td align="left">√</td></tr><tr><td align="left">Ctrl + B</td><td align="left">进入光标所在的方法/变量的接口或是定义处，等效于 Ctrl + 左键单击</td><td align="left">√</td></tr><tr><td align="left">Ctrl + K</td><td align="left">版本控制提交项目，需要此项目有加入到版本控制才可用</td><td align="left"></td></tr><tr><td align="left">Ctrl + T</td><td align="left">版本控制更新项目，需要此项目有加入到版本控制才可用</td><td align="left"></td></tr><tr><td align="left">Ctrl + H</td><td align="left">显示当前类的层次结构</td><td align="left"></td></tr><tr><td align="left">Ctrl + O</td><td align="left">选择可重写的方法</td><td align="left"></td></tr><tr><td align="left">Ctrl + I</td><td align="left">选择可继承的方法</td><td align="left"></td></tr><tr><td align="left">Ctrl + +</td><td align="left">展开代码</td><td align="left"></td></tr><tr><td align="left">Ctrl + -</td><td align="left">折叠代码</td><td align="left"></td></tr><tr><td align="left">Ctrl + /</td><td align="left">注释光标所在行代码，会根据当前不同文件类型使用不同的注释符号</td><td align="left">√</td></tr><tr><td align="left">Ctrl + U</td><td align="left">前往当前光标所在的方法的父类的方法 / 接口定义</td><td align="left">√</td></tr><tr><td align="left">Ctrl + B</td><td align="left">进入光标所在的方法/变量的接口或是定义处，等效于 Ctrl + 左键单击</td><td align="left">√</td></tr><tr><td align="left">Ctrl + K</td><td align="left">版本控制提交项目，需要此项目有加入到版本控制才可用</td><td align="left"></td></tr><tr><td align="left">Ctrl + T</td><td align="left">版本控制更新项目，需要此项目有加入到版本控制才可用</td><td align="left"></td></tr><tr><td align="left">Ctrl + H</td><td align="left">显示当前类的层次结构</td><td align="left"></td></tr><tr><td align="left">Ctrl + O</td><td align="left">选择可重写的方法</td><td align="left"></td></tr><tr><td align="left">Ctrl + I</td><td align="left">选择可继承的方法</td><td align="left"></td></tr><tr><td align="left">Ctrl + +</td><td align="left">展开代码</td><td align="left"></td></tr><tr><td align="left">Ctrl + -</td><td align="left">折叠代码</td><td align="left"></td></tr><tr><td align="left">Ctrl + /</td><td align="left">释光标所在行代码，会根据当前不同文件类型使用不同的注释符号</td><td align="left">√</td></tr><tr><td align="left">Ctrl + [</td><td align="left">移动光标到当前所在代码的花括号开始位置</td><td align="left"></td></tr><tr><td align="left">Ctrl + ]</td><td align="left">移动光标到当前所在代码的花括号结束位置</td><td align="left"></td></tr><tr><td align="left">Ctrl + F1</td><td align="left">在光标所在的错误代码处显示错误信息</td><td align="left">√</td></tr><tr><td align="left">Ctrl + F3</td><td align="left">调转到所选中的词的下一个引用位置</td><td align="left">√</td></tr><tr><td align="left">Ctrl + F4</td><td align="left">关闭当前编辑文件</td><td align="left"></td></tr><tr><td align="left">Ctrl + F8</td><td align="left">在 Debug 模式下，设置光标当前行为断点，如果当前已经是断点则去掉断点</td><td align="left"></td></tr><tr><td align="left">Ctrl + F9</td><td align="left">执行 Make Project 操作</td><td align="left"></td></tr><tr><td align="left">Ctrl + F11</td><td align="left">选中文件 / 文件夹，使用助记符设定 / 取消书签</td><td align="left">√</td></tr><tr><td align="left">Ctrl + F12</td><td align="left">弹出当前文件结构层，可以在弹出的层上直接输入，进行筛选</td><td align="left"></td></tr><tr><td align="left">Ctrl + Tab</td><td align="left">编辑窗口切换，如果在切换的过程又加按上 delete，则是关闭对应选中的窗口</td><td align="left"></td></tr><tr><td align="left">Ctrl + End</td><td align="left">跳到文件尾</td><td align="left"></td></tr><tr><td align="left">Ctrl + Home</td><td align="left">跳到文件头</td><td align="left"></td></tr><tr><td align="left">Ctrl + Space</td><td align="left">基础代码补全，默认在 Windows 系统上被输入法占用，需要进行修改，建议 修改为 Ctrl +逗号</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Delete</td><td align="left">删除光标后面的单词或是中文句</td><td align="left">√</td></tr><tr><td align="left">Ctrl +BackSpace</td><td align="left">删除光标前面的单词或是中文句</td><td align="left">√</td></tr><tr><td align="left">Ctrl +1,2,3…9</td><td align="left">定位到对应数值的书签位置</td><td align="left">√</td></tr><tr><td align="left">Ctrl + 左键单击</td><td align="left">在打开的文件标题上，弹出该文件路径</td><td align="left">√</td></tr><tr><td align="left">Ctrl + 光标定位按 Ctrl 不要松开</td><td align="left">会显示光标所在的类信息摘要</td><td align="left"></td></tr><tr><td align="left">Ctrl + 左方向键</td><td align="left">光标跳转到当前单词 / 中文句的左侧开头位置</td><td align="left">√</td></tr><tr><td align="left">Ctrl + 右方向键</td><td align="left">光标跳转到当前单词 / 中文句的右侧开头位置</td><td align="left">√</td></tr><tr><td align="left">Ctrl + 前方向键</td><td align="left">等效于鼠标滚轮向前效果</td><td align="left">√</td></tr><tr><td align="left">Ctrl + 后方向键</td><td align="left">等效于鼠标滚轮向后效果</td><td align="left">√</td></tr></tbody></table><h3 id="二、Alt-快捷键"><a href="#二、Alt-快捷键" class="headerlink" title="二、Alt 快捷键"></a>二、Alt 快捷键</h3><table><thead><tr><th align="left">快捷键</th><th align="left">说明</th><th align="left">常用</th></tr></thead><tbody><tr><td align="left">Alt +</td><td align="left">显示版本控制常用操作菜单弹出层</td><td align="left">√</td></tr><tr><td align="left">Alt + Q</td><td align="left">弹出一个提示，显示当前类的声明 / 上下文信息</td><td align="left"></td></tr><tr><td align="left">Alt + F1</td><td align="left">显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择</td><td align="left">√</td></tr><tr><td align="left">Alt + F2</td><td align="left">对于前面页面，显示各类浏览器打开目标选择弹出层</td><td align="left"></td></tr><tr><td align="left">Alt + F3</td><td align="left">选中文本，逐个往下查找相同文本，并高亮显示</td><td align="left"></td></tr><tr><td align="left">Alt + F7</td><td align="left">查找光标所在的方法 / 变量 / 类被调用的地方</td><td align="left"></td></tr><tr><td align="left">Alt + F8</td><td align="left">在 Debug 的状态下，选中对象，弹出可输入计算表达式调试框，查看该输入内容的调试结果</td><td align="left"></td></tr><tr><td align="left">Alt + Home</td><td align="left">定位 / 显示到当前文件的 Navigation Bar</td><td align="left"></td></tr><tr><td align="left">Alt + Enter</td><td align="left">IntelliJ IDEA 根据光标所在问题，提供快速修复选择，光标放在的位置不同提示 的结果也不同</td><td align="left">√</td></tr><tr><td align="left">Alt + Insert</td><td align="left">代码自动生成，如生成对象的 set / get 方法，构造函数，toString() 等</td><td align="left">√</td></tr><tr><td align="left">Alt + 左方向键</td><td align="left">切换当前已打开的窗口中的子视图，比如 Debug 窗口中有 Output、Debugger 等子视图，用此快捷键就可以在子视图中切换</td><td align="left">√</td></tr><tr><td align="left">Alt + 右方向键</td><td align="left">按切换当前已打开的窗口中的子视图，比如 Debug 窗口中有 Output、Debugger 等子视图，用此快捷键就可以在子视图中切换</td><td align="left">√</td></tr><tr><td align="left">Alt + 前方向键</td><td align="left">当前光标跳转到当前文件的前一个方法名位置</td><td align="left">√</td></tr><tr><td align="left">Alt + 后方向键</td><td align="left">当前光标跳转到当前文件的后一个方法名位置</td><td align="left">√</td></tr><tr><td align="left">Alt +1,2,3…9</td><td align="left">显示对应数值的选项卡，其中 1 是 Project 用得最多</td><td align="left">√</td></tr></tbody></table><h3 id="三、Shift-快捷键"><a href="#三、Shift-快捷键" class="headerlink" title="三、Shift 快捷键"></a>三、Shift 快捷键</h3><table><thead><tr><th align="left">快捷键</th><th align="left">说明</th><th align="left">常用</th></tr></thead><tbody><tr><td align="left">Shift + F1</td><td align="left">如果有外部文档可以连接外部文档</td><td align="left"></td></tr><tr><td align="left">Shift + F2</td><td align="left">跳转到上一个高亮错误 或 警告位置</td><td align="left"></td></tr><tr><td align="left">Shift + F3</td><td align="left">在查找模式下，查找匹配上一个</td><td align="left"></td></tr><tr><td align="left">Shift + F4</td><td align="left">对当前打开的文件，使用新 Windows 窗口打开，旧窗口保留</td><td align="left"></td></tr><tr><td align="left">Shift + F6</td><td align="left">对文件 / 文件夹 重命名</td><td align="left"></td></tr><tr><td align="left">Shift + F7</td><td align="left">在 Debug 模式下，智能步入。断点所在行上有多个方法调用，会弹出进入哪个方法</td><td align="left"></td></tr><tr><td align="left">Shift + F8</td><td align="left">在 Debug 模式下，跳出，表现出来的效果跟 F9 一样</td><td align="left"></td></tr><tr><td align="left">Shift + F9</td><td align="left">等效于点击工具栏的 Debug 按钮</td><td align="left"></td></tr><tr><td align="left">Shift + F10</td><td align="left">等效于点击工具栏的 Run 按钮</td><td align="left"></td></tr><tr><td align="left">Shift + F11</td><td align="left">弹出书签显示层</td><td align="left">√</td></tr><tr><td align="left">Shift + Tab</td><td align="left">取消缩进</td><td align="left">√</td></tr><tr><td align="left">Shift + ESC</td><td align="left">隐藏当前 或 最后一个激活的工具窗口</td><td align="left"></td></tr><tr><td align="left">Shift + End</td><td align="left">选中光标到当前行尾位置</td><td align="left"></td></tr><tr><td align="left">Shift + Home</td><td align="left">选中光标到当前行头位置</td><td align="left"></td></tr><tr><td align="left">Shift + Enter</td><td align="left">开始新一行。光标所在行下空出一行，光标定位到新行位置</td><td align="left">√</td></tr><tr><td align="left">Shift + 左键单击</td><td align="left">在打开的文件名上按此快捷键，可以关闭当前打开文件</td><td align="left">√</td></tr><tr><td align="left">Shift + 滚轮前后滚动</td><td align="left">当前文件的横向滚动轴滚动</td><td align="left">√</td></tr></tbody></table><h3 id="四、Ctrl-Alt-快捷键"><a href="#四、Ctrl-Alt-快捷键" class="headerlink" title="四、Ctrl + Alt 快捷键"></a>四、Ctrl + Alt 快捷键</h3><table><thead><tr><th align="left">快捷键</th><th align="left">说明</th><th align="left">常用</th></tr></thead><tbody><tr><td align="left">Ctrl + Alt + L</td><td align="left">格式化代码，可以对当前文件和整个包目录使用</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Alt + O</td><td align="left">优化导入的类，可以对当前文件和整个包目录使用</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Alt + I</td><td align="left">光标所在行 或 选中部分进行自动代码缩进，有点类似格式化</td><td align="left"></td></tr><tr><td align="left">Ctrl + Alt + T</td><td align="left">对选中的代码弹出环绕选项弹出层</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Alt + J</td><td align="left">弹出模板选择窗口，将选定的代码加入动态模板中</td><td align="left"></td></tr><tr><td align="left">Ctrl + Alt + H</td><td align="left">调用层次</td><td align="left"></td></tr><tr><td align="left">Ctrl + Alt + B</td><td align="left">在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口</td><td align="left"></td></tr><tr><td align="left">Ctrl + Alt + V</td><td align="left">快速引进变量</td><td align="left"></td></tr><tr><td align="left">Ctrl + Alt + Y</td><td align="left">同步、刷新</td><td align="left"></td></tr><tr><td align="left">Ctrl + Alt + S</td><td align="left">打开 IntelliJ IDEA 系统设置</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Alt + F7</td><td align="left">显示使用的地方。寻找被该类或是变量被调用的地方，用弹出框的方式找出来</td><td align="left"></td></tr><tr><td align="left">Ctrl + Alt + F11</td><td align="left">切换全屏模式</td><td align="left"></td></tr><tr><td align="left">Ctrl + Alt + Enter</td><td align="left">光标所在行上空出一行，光标定位到新行</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Alt + Home</td><td align="left">弹出跟当前文件有关联的文件弹出层</td><td align="left"></td></tr><tr><td align="left">Ctrl + Alt + Space</td><td align="left">类名自动完成</td><td align="left"></td></tr><tr><td align="left">Ctrl + Alt + 左方向键</td><td align="left">退回到上一个操作的地方</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Alt + 右方向键</td><td align="left">前进到上一个操作的地方</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Alt + 前方向键</td><td align="left">在查找模式下，跳到上个查找的文件</td><td align="left"></td></tr><tr><td align="left">Ctrl + Alt + 后方向键</td><td align="left">在查找模式下，跳到下个查找的文件</td><td align="left"></td></tr></tbody></table><h3 id="五、Ctrl-Shift-快捷键"><a href="#五、Ctrl-Shift-快捷键" class="headerlink" title="五、Ctrl + Shift 快捷键"></a>五、Ctrl + Shift 快捷键</h3><table><thead><tr><th align="left">快捷键</th><th align="left">说明</th><th align="left">常用</th></tr></thead><tbody><tr><td align="left">Ctrl + Shift + F</td><td align="left">根据输入内容查找整个项目 或 指定目录内文件</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + R</td><td align="left">根据输入内容替换对应内容，范围为整个项目 或 指定目录内文件</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + J</td><td align="left">自动将下一行合并到当前行末尾</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + Z</td><td align="left">取消撤销</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + W</td><td align="left">递进式取消选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展取消选中范围</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + N</td><td align="left">通过文件名定位 / 打开文件 / 目录，打开目录需要在 输入的内容后面多加一个正斜杠</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + U</td><td align="left">对选中的代码进行大 / 小写轮流转换</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + T</td><td align="left">对当前类生成单元测试类，如果已经存在的单元测试类则可以进行选择</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + C</td><td align="left">复制当前文件磁盘路径到剪贴板</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + V</td><td align="left">弹出缓存的最近拷贝的内容管理器弹出层</td><td align="left"></td></tr><tr><td align="left">Ctrl + Shift + E</td><td align="left">显示最近修改的文件列表的弹出层</td><td align="left"></td></tr><tr><td align="left">Ctrl + Shift + H</td><td align="left">显示方法层次结构</td><td align="left"></td></tr><tr><td align="left">Ctrl + Shift + B</td><td align="left">跳转到类型声明处</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + I</td><td align="left">快速查看光标所在的方法 或 类的定义</td><td align="left"></td></tr><tr><td align="left">Ctrl + Shift + A</td><td align="left">查找动作 / 设置</td><td align="left"></td></tr><tr><td align="left">Ctrl + Shift + /</td><td align="left">代码块注释</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + [</td><td align="left">选中从光标所在位置到它的顶部中括号位置</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + ]</td><td align="left">选中从光标所在位置到它的底部中括号位置</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + +</td><td align="left">展开所有代码</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + -</td><td align="left">折叠所有代码</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + F7</td><td align="left">高亮显示所有该选中文本，按 Esc 高亮消失</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + F8</td><td align="left">在 Debug 模式下，指定断点进入条件</td><td align="left"></td></tr><tr><td align="left">Ctrl + Shift + F9</td><td align="left">编译选中的文件 / 包 / Module</td><td align="left"></td></tr><tr><td align="left">Ctrl + Shift + F12</td><td align="left">编辑器最大化</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + Space</td><td align="left">智能代码提示</td><td align="left"></td></tr><tr><td align="left">Ctrl + Shift + Enter</td><td align="left">自动结束代码，行末自动添加分号</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift +Backspace</td><td align="left">退回到上次修改的地方</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift +1,2,3…9</td><td align="left">快速添加指定数值的书签</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + 左键单击</td><td align="left">把光标放在某个类变量上，按此快捷键可以直接定位到该类中</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + 左方向键</td><td align="left">在代码文件上，光标跳转到当前单词 / 中文句的左侧开头位置， 同时选中该单词 / 中文句</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + 右方向键</td><td align="left">在代码文件上，光标跳转到当前单词 / 中文句的右侧开头位置， 同时选中该单词 / 中文句</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + 前方向键</td><td align="left">光标放在方法名上，将方法移动到上一个方法前面，调整方法排序</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + 后方向键</td><td align="left">光标放在方法名上，将方法移动到下一个方法前面，调整方法</td><td align="left"></td></tr><tr><td align="left">Ctrl + Shift + 右方向键</td><td align="left">在代码文件上，光标跳转到当前单词 / 中文句的右侧开头位置， 同时选中该单词 / 中文句</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + 前方向键</td><td align="left">光标放在方法名上，将方法移动到上一个方法前面，调整方法排序</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + 后方向键</td><td align="left">光标放在方法名上，将方法移动到下一个方法前面，调整方法 排序</td><td align="left">√</td></tr></tbody></table><h3 id="六、Alt-Shift-快捷键"><a href="#六、Alt-Shift-快捷键" class="headerlink" title="六、Alt + Shift 快捷键"></a>六、Alt + Shift 快捷键</h3><table><thead><tr><th align="left">快捷键</th><th align="left">说明</th><th align="left">常用</th></tr></thead><tbody><tr><td align="left">Alt + Shift + N</td><td align="left">选择 / 添加 task</td><td align="left">√</td></tr><tr><td align="left">Alt + Shift + F</td><td align="left">显示添加到收藏夹弹出层 / 添加到收藏夹</td><td align="left"></td></tr><tr><td align="left">Alt + Shift + C</td><td align="left">查看最近操作项目的变化情况列表</td><td align="left"></td></tr><tr><td align="left">Alt + Shift + I</td><td align="left">查看项目当前文件</td><td align="left"></td></tr><tr><td align="left">Alt + Shift + F7</td><td align="left">在 Debug 模式下，下一步，进入当前方法体内，如果方法体还有方法，则会进入该内嵌的方法中，依此循环进入</td><td align="left"></td></tr><tr><td align="left">Alt + Shift + F9</td><td align="left">弹出 Debug 的可选择菜单</td><td align="left"></td></tr><tr><td align="left">Alt + Shift + F10</td><td align="left">弹出 Run 的可选择菜单</td><td align="left"></td></tr><tr><td align="left">Alt + Shift + 左键双击</td><td align="left">选择被双击的单词 / 中文句，按住不放，可以同时选择其他单词 / 中文句</td><td align="left">√</td></tr><tr><td align="left">Alt + Shift + 前方向键</td><td align="left">移动光标所在行向上移动</td><td align="left">√</td></tr><tr><td align="left">Alt + Shift + 后方向键</td><td align="left">移动光标所在行向下移动</td><td align="left">√</td></tr></tbody></table><h3 id="七、Ctrl-Shift-Alt-快捷键"><a href="#七、Ctrl-Shift-Alt-快捷键" class="headerlink" title="七、Ctrl + Shift + Alt 快捷键"></a>七、Ctrl + Shift + Alt 快捷键</h3><table><thead><tr><th align="left">快捷键</th><th align="left">说明</th><th align="left">常用</th></tr></thead><tbody><tr><td align="left">Ctrl + Shift + Alt + V</td><td align="left">无格式黏贴</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + Alt + N</td><td align="left">前往指定的变量 / 方法</td><td align="left"></td></tr><tr><td align="left">Ctrl + Shift + Alt + S</td><td align="left">打开当前项目设置</td><td align="left">√</td></tr><tr><td align="left">Ctrl + Shift + Alt + C</td><td align="left">复制参考信息</td><td align="left"></td></tr></tbody></table><h3 id="八、其他快捷键"><a href="#八、其他快捷键" class="headerlink" title="八、其他快捷键"></a>八、其他快捷键</h3><table><thead><tr><th align="left">快捷键</th><th align="left">说明</th><th align="left">常用</th></tr></thead><tbody><tr><td align="left">F2</td><td align="left">跳转到下一个高亮错误 或 警告位置</td><td align="left">√</td></tr><tr><td align="left">F3</td><td align="left">在查找模式下，定位到下一个匹配处</td><td align="left"></td></tr><tr><td align="left">F4</td><td align="left">编辑源</td><td align="left">√</td></tr><tr><td align="left">F7</td><td align="left">在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中</td><td align="left"></td></tr><tr><td align="left">F8</td><td align="left">在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则不进入当前方法体内</td><td align="left"></td></tr><tr><td align="left">F9</td><td align="left">在 Debug 模式下，恢复程序运行，但是如果该断点下面代码还有断点则停在下一个断点上</td><td align="left"></td></tr><tr><td align="left">F11</td><td align="left">添加书签</td><td align="left">√</td></tr><tr><td align="left">F12</td><td align="left">回到前一个工具窗口</td><td align="left">√</td></tr><tr><td align="left">Tab</td><td align="left">缩进</td><td align="left">√</td></tr><tr><td align="left">ESC</td><td align="left">从工具窗口进入代码文件窗口</td><td align="left">√</td></tr><tr><td align="left">连按两次 Shift</td><td align="left">弹出 Search Everywhere 弹出层</td><td align="left">√</td></tr></tbody></table><h2 id="二、IntelliJ-IDEA-快捷键大全-Mac"><a href="#二、IntelliJ-IDEA-快捷键大全-Mac" class="headerlink" title="二、IntelliJ IDEA 快捷键大全 Mac"></a>二、IntelliJ IDEA 快捷键大全 Mac</h2><h3 id="Mac-键盘符号和修饰键说明"><a href="#Mac-键盘符号和修饰键说明" class="headerlink" title="Mac 键盘符号和修饰键说明"></a>Mac 键盘符号和修饰键说明</h3><table><thead><tr><th align="left">按键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">⌘</td><td align="left">Command</td></tr><tr><td align="left">⇧</td><td align="left">Shift</td></tr><tr><td align="left">⌥</td><td align="left">Option</td></tr><tr><td align="left">⌃</td><td align="left">Control</td></tr><tr><td align="left">↩︎</td><td align="left">Return/Enter</td></tr><tr><td align="left">⌫</td><td align="left">Delete</td></tr><tr><td align="left">⌦</td><td align="left">向前删除键（Fn+Delete）</td></tr><tr><td align="left">↑</td><td align="left">上箭头</td></tr><tr><td align="left">↓</td><td align="left">下箭头</td></tr><tr><td align="left">←</td><td align="left">左箭头</td></tr><tr><td align="left">→</td><td align="left">右箭头</td></tr><tr><td align="left">⇞</td><td align="left">Page Up（Fn+↑）</td></tr><tr><td align="left">⇟</td><td align="left">Page Down（Fn+↓）</td></tr><tr><td align="left">Home</td><td align="left">Fn + ←</td></tr><tr><td align="left">End</td><td align="left">Fn + →</td></tr><tr><td align="left">⇥</td><td align="left">右制表符（Tab 键）</td></tr><tr><td align="left">⇤</td><td align="left">左制表符（Shift+Tab）</td></tr><tr><td align="left">⎋</td><td align="left">Escape (Esc)</td></tr></tbody></table><h3 id="一、Editing（编辑）"><a href="#一、Editing（编辑）" class="headerlink" title="一、Editing（编辑）"></a>一、Editing（编辑）</h3><table><thead><tr><th align="left">快捷键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">⌃Space</td><td align="left">基本的代码补全（补全任何类、方法、变量）</td></tr><tr><td align="left">⌃⇧Space</td><td align="left">智能代码补全（过滤器方法列表和变量的预期类型）</td></tr><tr><td align="left">⌘⇧↩</td><td align="left">自动结束代码，行末自动添加分号</td></tr><tr><td align="left">⌘P</td><td align="left">显示方法的参数信息</td></tr><tr><td align="left">⌃J, Mid. button click</td><td align="left">快速查看文档</td></tr><tr><td align="left">⇧F1</td><td align="left">查看外部文档（在某些代码上会触发打开浏览器显示相关文档）</td></tr><tr><td align="left">⌘+鼠标放在代码上</td><td align="left">显示代码简要信息</td></tr><tr><td align="left">⌘F1</td><td align="left">在错误或警告处显示具体描述信息</td></tr><tr><td align="left">⌘N, ⌃↩, ⌃N</td><td align="left">生成代码（getter、setter、构造函数、hashCode/equals,toString）</td></tr><tr><td align="left">⌃O</td><td align="left">覆盖方法（重写父类方法）</td></tr><tr><td align="left">⌃I</td><td align="left">实现方法（实现接口中的方法）</td></tr><tr><td align="left">⌘⌥T</td><td align="left">包围代码（使用 if…else, try…catch, for, synchronized 等包围 选中的代码）</td></tr><tr><td align="left">⌘/</td><td align="left">注释/取消注释与行注释</td></tr><tr><td align="left">⌘⌥/</td><td align="left">注释/取消注释与块注释</td></tr><tr><td align="left">⌥↑</td><td align="left">连续选中代码块</td></tr><tr><td align="left">⌥↓</td><td align="left">减少当前选中的代码块</td></tr><tr><td align="left">⌃⇧Q</td><td align="left">显示上下文信息</td></tr><tr><td align="left">⌥↩</td><td align="left">显示意向动作和快速修复代码</td></tr><tr><td align="left">⌘⌥L</td><td align="left">格式化代码</td></tr><tr><td align="left">⌃⌥O</td><td align="left">优化 import</td></tr><tr><td align="left">⌃⌥I</td><td align="left">自动缩进线</td></tr><tr><td align="left">⇥ / ⇧⇥</td><td align="left">缩进代码 / 反缩进代码</td></tr><tr><td align="left">⌘X</td><td align="left">剪切当前行或选定的块到剪贴板</td></tr><tr><td align="left">⌘C</td><td align="left">复制当前行或选定的块到剪贴板</td></tr><tr><td align="left">⌘V</td><td align="left">从剪贴板粘贴</td></tr><tr><td align="left">⌘⇧V</td><td align="left">从最近的缓冲区粘贴</td></tr><tr><td align="left">⌘D</td><td align="left">复制当前行或选定的块</td></tr><tr><td align="left">⌘⌫</td><td align="left">删除当前行或选定的块的行</td></tr><tr><td align="left">⌃⇧J</td><td align="left">智能的将代码拼接成一行</td></tr><tr><td align="left">⌘↩</td><td align="left">智能的拆分拼接的行</td></tr><tr><td align="left">⇧↩</td><td align="left">开始新的一行</td></tr><tr><td align="left">⌘⇧U</td><td align="left">大小写切换</td></tr><tr><td align="left">⌘⇧] / ⌘⇧[</td><td align="left">选择直到代码块结束/开始</td></tr><tr><td align="left">⌥⌦</td><td align="left">删除到单词的末尾（⌦ 键为 Fn+Delete）</td></tr><tr><td align="left">⌥⌫</td><td align="left">删除到单词的开头</td></tr><tr><td align="left">⌘+ / ⌘-</td><td align="left">展开 / 折叠代码块</td></tr><tr><td align="left">⌘⇧+</td><td align="left">展开所以代码块</td></tr><tr><td align="left">⌘⇧-</td><td align="left">折叠所有代码块</td></tr><tr><td align="left">⌘W</td><td align="left">关闭活动的编辑器选项卡</td></tr></tbody></table><h3 id="二、Search-Replace（查询-替换）"><a href="#二、Search-Replace（查询-替换）" class="headerlink" title="二、Search/Replace（查询/替换）"></a>二、Search/Replace（查询/替换）</h3><table><thead><tr><th align="left">按键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">Double ⇧</td><td align="left">查询任何东西</td></tr><tr><td align="left">⌘F</td><td align="left">文件内查找</td></tr><tr><td align="left">⌘G</td><td align="left">查找模式下，向下查找</td></tr><tr><td align="left">⌘⇧G</td><td align="left">查找模式下，向上查找</td></tr><tr><td align="left">⌘R</td><td align="left">文件内替换</td></tr><tr><td align="left">⌘⇧F</td><td align="left">全局查找（根据路径）</td></tr><tr><td align="left">⌘⇧R</td><td align="left">全局替换（根据路径）</td></tr><tr><td align="left">⌘⇧S</td><td align="left">查询结构（Ultimate Edition 版专用，需要在 Keymap 中设置）</td></tr><tr><td align="left">⌘⇧M</td><td align="left">替换结构（Ultimate Edition 版专用，需要在 Keymap 中设置）</td></tr></tbody></table><h3 id="三、Usage-Search（使用查询）"><a href="#三、Usage-Search（使用查询）" class="headerlink" title="三、Usage Search（使用查询）"></a>三、Usage Search（使用查询）</h3><table><thead><tr><th align="left">按键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">⌥F7 / ⌘F7</td><td align="left">在文件中查找用法 / 在类中查找用法</td></tr><tr><td align="left">⌘⇧F7</td><td align="left">在文件中突出显示的用法</td></tr><tr><td align="left">⌘⌥F7</td><td align="left">显示用法</td></tr></tbody></table><h3 id="四、Compile-and-Run（编译和运行）"><a href="#四、Compile-and-Run（编译和运行）" class="headerlink" title="四、Compile and Run（编译和运行）"></a>四、Compile and Run（编译和运行）</h3><table><thead><tr><th align="left">按键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">⌘F9</td><td align="left">编译 Project</td></tr><tr><td align="left">⌘⇧F9</td><td align="left">编译选择的文件、包或模块</td></tr><tr><td align="left">⌃⌥R</td><td align="left">弹出 Run 的可选择菜单</td></tr><tr><td align="left">⌃⌥D</td><td align="left">弹出 Debug 的可选择菜单</td></tr><tr><td align="left">⌃R</td><td align="left">运行</td></tr><tr><td align="left">⌃D</td><td align="left">调试</td></tr><tr><td align="left">⌃⇧R, ⌃⇧D</td><td align="left">从编辑器运行上下文环境配置</td></tr></tbody></table><h3 id="五、Debugging（调试）"><a href="#五、Debugging（调试）" class="headerlink" title="五、Debugging（调试）"></a>五、Debugging（调试）</h3><table><thead><tr><th align="left">按键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">F8</td><td align="left">进入下一步，如果当前行断点是一个方法，则不进入当前方法体内</td></tr><tr><td align="left">F7</td><td align="left">进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中</td></tr><tr><td align="left">⇧F7</td><td align="left">智能步入，断点所在行上有多个方法调用，会弹出进入哪个方法</td></tr><tr><td align="left">⇧F8</td><td align="left">跳出</td></tr><tr><td align="left">⌥F9</td><td align="left">运行到光标处，如果光标前有其他断点会进入到该断点</td></tr><tr><td align="left">⌥F8</td><td align="left">计算表达式（可以更改变量值使其生效）</td></tr><tr><td align="left">⌘⌥R</td><td align="left">恢复程序运行，如果该断点下面代码还有断点则停在下一个断点上</td></tr><tr><td align="left">⌘F8</td><td align="left">切换断点（若光标当前行有断点则取消断点，没有则加上断点）</td></tr><tr><td align="left">⌘⇧F8</td><td align="left">查看断点信息</td></tr></tbody></table><h3 id="六、Navigation（导航）"><a href="#六、Navigation（导航）" class="headerlink" title="六、Navigation（导航）"></a>六、Navigation（导航）</h3><table><thead><tr><th align="left">按键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">⌘O</td><td align="left">查找类文件</td></tr><tr><td align="left">⌘⇧O</td><td align="left">查找所有类型文件、打开文件、打开目录，打开目录需要在输入的内容前面或后面加一个反斜杠/</td></tr><tr><td align="left">⌘⌥O</td><td align="left">前往指定的变量 / 方法</td></tr><tr><td align="left">⌃← / ⌃→</td><td align="left">左右切换打开的编辑 tab 页</td></tr><tr><td align="left">F12</td><td align="left">返回到前一个工具窗口</td></tr><tr><td align="left">⎋</td><td align="left">从工具窗口进入代码文件窗口</td></tr><tr><td align="left">⇧⎋</td><td align="left">隐藏当前或最后一个活动的窗口，且光标进入代码文件窗口</td></tr><tr><td align="left">⌘⇧F4</td><td align="left">关闭活动 run/messages/find/… tab</td></tr><tr><td align="left">⌘L</td><td align="left">在当前文件跳转到某一行的指定处</td></tr><tr><td align="left">⌘E</td><td align="left">显示最近打开的文件记录列表</td></tr><tr><td align="left">⌘⌥← / ⌘⌥→</td><td align="left">退回 / 前进到上一个操作的地方</td></tr><tr><td align="left">⌘⇧⌫</td><td align="left">跳转到最后一个编辑的地方</td></tr><tr><td align="left">⌥F1</td><td align="left">显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择(如在 代码编辑窗口可以选择显示该文件的 Finder)</td></tr><tr><td align="left">⌘B / ⌘</td><td align="left">鼠标点击 进入光标所在的方法/变量的接口或是定义处</td></tr><tr><td align="left">⌘⌥B</td><td align="left">跳转到实现处，在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口</td></tr><tr><td align="left">⌥ Space, ⌘Y</td><td align="left">快速打开光标所在方法、类的定义</td></tr><tr><td align="left">⌃⇧B</td><td align="left">跳转到类型声明处</td></tr><tr><td align="left">⌘U</td><td align="left">前往当前光标所在方法的父类的方法 / 接口定义</td></tr><tr><td align="left">⌃↓ / ⌃↑</td><td align="left">当前光标跳转到当前文件的前一个/后一个方法名位置</td></tr><tr><td align="left">⌘] / ⌘[</td><td align="left">移动光标到当前所在代码的花括号开始/结束位置</td></tr><tr><td align="left">⌘F12</td><td align="left">弹出当前文件结构层，可以在弹出的层上直接输入进行筛选（可用于搜索类中的方法）</td></tr><tr><td align="left">⌃H</td><td align="left">显示当前类的层次结构</td></tr><tr><td align="left">⌘⇧H</td><td align="left">显示方法层次结构</td></tr><tr><td align="left">⌃⌥H</td><td align="left">显示调用层次结构</td></tr><tr><td align="left">F2 / ⇧F2</td><td align="left">跳转到下一个/上一个突出错误或警告的位置</td></tr><tr><td align="left">F4 / ⌘↓</td><td align="left">编辑/查看代码源</td></tr><tr><td align="left">⌥ Home</td><td align="left">显示到当前文件的导航条</td></tr><tr><td align="left">F3</td><td align="left">选中文件/文件夹/代码行，添加/取消书签</td></tr><tr><td align="left">⌥F3</td><td align="left">选中文件/文件夹/代码行，使用助记符添加/取消书签</td></tr><tr><td align="left">⌃0…⌃9</td><td align="left">定位到对应数值的书签位置</td></tr><tr><td align="left">⌘F3</td><td align="left">显示所有书签</td></tr></tbody></table><h3 id="七、Refactoring（重构）"><a href="#七、Refactoring（重构）" class="headerlink" title="七、Refactoring（重构）"></a>七、Refactoring（重构）</h3><table><thead><tr><th align="left">按键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">F5</td><td align="left">复制文件到指定目录</td></tr><tr><td align="left">F6</td><td align="left">移动文件到指定目录</td></tr><tr><td align="left">⌘⌫</td><td align="left">在文件上为安全删除文件，弹出确认框</td></tr><tr><td align="left">⇧F6</td><td align="left">重命名文件</td></tr><tr><td align="left">⌘F6</td><td align="left">更改签名</td></tr><tr><td align="left">⌘⌥N</td><td align="left">一致性</td></tr><tr><td align="left">⌘⌥M</td><td align="left">将选中的代码提取为方法</td></tr><tr><td align="left">⌘⌥V</td><td align="left">提取变量</td></tr><tr><td align="left">⌘⌥F</td><td align="left">提取字段</td></tr><tr><td align="left">⌘⌥C</td><td align="left">提取常量</td></tr><tr><td align="left">⌘⌥P</td><td align="left">提取参数</td></tr></tbody></table><h3 id="八、VCS-Local-History（版本控制-本地历史记录）"><a href="#八、VCS-Local-History（版本控制-本地历史记录）" class="headerlink" title="八、VCS/Local History（版本控制/本地历史记录）"></a>八、VCS/Local History（版本控制/本地历史记录）</h3><table><thead><tr><th align="left">按键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">⌘K</td><td align="left">提交代码到版本控制器</td></tr><tr><td align="left">⌘T</td><td align="left">从版本控制器更新代码</td></tr><tr><td align="left">⌥⇧C</td><td align="left">查看最近的变更记录</td></tr><tr><td align="left">⌃C</td><td align="left">快速弹出版本控制器操作面板</td></tr></tbody></table><h3 id="九、Live-Templates（动态代码模板）"><a href="#九、Live-Templates（动态代码模板）" class="headerlink" title="九、Live Templates（动态代码模板）"></a>九、Live Templates（动态代码模板）</h3><table><thead><tr><th align="left">按键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">⌘⌥J</td><td align="left">弹出模板选择窗口，将选定的代码使用动态模板包住</td></tr><tr><td align="left">⌘J</td><td align="left">插入自定义动态代码模板</td></tr></tbody></table><h3 id="十、General（通用）"><a href="#十、General（通用）" class="headerlink" title="十、General（通用）"></a>十、General（通用）</h3><table><thead><tr><th align="left">按键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">⌘1…⌘9</td><td align="left">打开相应编号的工具窗口</td></tr><tr><td align="left">⌘S</td><td align="left">保存所有</td></tr><tr><td align="left">⌘⌥Y</td><td align="left">同步、刷新</td></tr><tr><td align="left">⌃⌘F</td><td align="left">切换全屏模式</td></tr><tr><td align="left">⌘⇧F12</td><td align="left">切换最大化编辑器</td></tr><tr><td align="left">⌥⇧F</td><td align="left">添加到收藏夹</td></tr><tr><td align="left">⌥⇧I</td><td align="left">检查当前文件与当前的配置文件</td></tr><tr><td align="left">§⌃, ⌃`</td><td align="left">快速切换当前的 scheme（切换主题、代码样式等）</td></tr><tr><td align="left">⌘,</td><td align="left">打开 IDEA 系统设置</td></tr><tr><td align="left">⌘;</td><td align="left">打开项目结构对话框</td></tr><tr><td align="left">⇧⌘A</td><td align="left">查找动作（可设置相关选项）</td></tr><tr><td align="left">⌃⇥</td><td align="left">编辑窗口标签和工具窗口之间切换（如果在切换的过程加按上 delete，则是关闭对应选中的窗口）</td></tr></tbody></table><h3 id="十一、Other（一些官方文档上没有体现的快捷键）"><a href="#十一、Other（一些官方文档上没有体现的快捷键）" class="headerlink" title="十一、Other（一些官方文档上没有体现的快捷键）"></a>十一、Other（一些官方文档上没有体现的快捷键）</h3><table><thead><tr><th align="left">按键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">⌘⇧8</td><td align="left">竖编辑模式</td></tr></tbody></table><h4 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h4><table><thead><tr><th align="left">按键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">⌘O</td><td align="left">查找类文件 Ctrl + N</td></tr><tr><td align="left">⌘⌥O</td><td align="left">前往指定的变量 / 方法 Ctrl + Shift + Alt + N</td></tr><tr><td align="left">⌃← / ⌃→</td><td align="left">左右切换打开的编辑 tab 页 Alt← / Alt→</td></tr><tr><td align="left">⎋</td><td align="left">从工具窗口进入代码文件窗口 ESC</td></tr><tr><td align="left">⌘L</td><td align="left">在当前文件跳转到某一行的指定处 Ctrl + G</td></tr><tr><td align="left">⌘E</td><td align="left">显示最近打开的文件记录列表 Ctrl + E</td></tr><tr><td align="left">⌘⌥← / ⌘⌥→</td><td align="left">退回 / 前进到上一个操作的地方 Ctrl + Alt + ← Ctrl + Alt + →</td></tr><tr><td align="left">⌘⇧⌫</td><td align="left">跳转到最后一个编辑的地方</td></tr><tr><td align="left">⌃H</td><td align="left">显示当前类的层次结构 Ctrl + H</td></tr><tr><td align="left">⌘⇧H</td><td align="left">显示方法层次结构</td></tr><tr><td align="left">⌃⌥H</td><td align="left">显示调用层次结构</td></tr><tr><td align="left">F4 / ⌘↓</td><td align="left">编辑/查看代码源</td></tr><tr><td align="left">⌘⌥U</td><td align="left">显示类 UML 图</td></tr><tr><td align="left">⌃J</td><td align="left">查看注释</td></tr></tbody></table><h4 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h4><table><thead><tr><th align="left">按键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">⌥⌦</td><td align="left">删除到单词的末尾（⌦ 键为 Fn+Delete）</td></tr><tr><td align="left">⌥⌫</td><td align="left">删除到单词的开头</td></tr><tr><td align="left">⌘+ / ⌘-</td><td align="left">展开 / 折叠代码块</td></tr><tr><td align="left">⌘F1</td><td align="left">在错误或警告处显示具体描述信息</td></tr><tr><td align="left">⌘⌥L</td><td align="left">格式化代码</td></tr><tr><td align="left">⌃⌥O</td><td align="left">优化 import</td></tr><tr><td align="left">⇧↩</td><td align="left">开始新的一行</td></tr><tr><td align="left">⌘⇧↩</td><td align="left">自动结束代码，行末自动添加分号</td></tr><tr><td align="left">⌃I</td><td align="left">实现方法（实现接口中的方法）</td></tr><tr><td align="left">⇧F6</td><td align="left">重命名文件或者变量</td></tr><tr><td align="left">⌘N, ⌃↩, ⌃N</td><td align="left">生成代码（getter、setter、构造函数、hashCode/equals,toString）</td></tr><tr><td align="left">⌘P</td><td align="left">显示方法的参数信息</td></tr></tbody></table><h4 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h4><table><thead><tr><th align="left">按键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">Double⇧</td><td align="left">查找任何东西</td></tr><tr><td align="left">⌘⇧F</td><td align="left">全局查找（根据路径）</td></tr><tr><td align="left">⌘F</td><td align="left">文件内查找</td></tr><tr><td align="left">⌘G</td><td align="left">查找模式下，向下查找</td></tr><tr><td align="left">⌘⇧G</td><td align="left">查找模式下，向上查找</td></tr><tr><td align="left">⌘⌥B</td><td align="left">跳转到接口的实现</td></tr><tr><td align="left">⌘U</td><td align="left">查看接口定义</td></tr><tr><td align="left">⌘⌥← / ⌘⌥→</td><td align="left">退回 / 前进到上一个操作的地方</td></tr><tr><td align="left">⌘B / ⌘</td><td align="left">鼠标点击 进入光标所在的方法/变量的接口或是定义处</td></tr><tr><td align="left">⌃⇧B</td><td align="left">跳转到类型声明处</td></tr><tr><td align="left">⌥ Space, ⌘Y</td><td align="left">快速打开光标所在方法、类的定义</td></tr><tr><td align="left">⌘O</td><td align="left">查找类文件</td></tr><tr><td align="left">⌘⇧O</td><td align="left">查找所有类型文件、打开文件、打开目录，打开目录需要在输入的内容前面或后面加一个反斜杠/</td></tr><tr><td align="left">F12</td><td align="left">返回到前一个工具窗口</td></tr><tr><td align="left">⎋</td><td align="left">从工具窗口进入代码文件窗口</td></tr><tr><td align="left">⇧⎋</td><td align="left">隐藏当前或最后一个活动的窗口，且光标进入代码文件窗口</td></tr><tr><td align="left">F3</td><td align="left">选中文件/文件夹/代码行，添加/取消书签</td></tr><tr><td align="left">⌥F3</td><td align="left">选中文件/文件夹/代码行，使用助记符添加/取消书签</td></tr><tr><td align="left">⌃0…⌃9</td><td align="left">定位到对应数值的书签位置</td></tr><tr><td align="left">⌘F3</td><td align="left">显示所有书签</td></tr><tr><td align="left">⌥F1</td><td align="left">显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择(如在代码编辑窗口可以选择显示该文件的 Finder)</td></tr><tr><td align="left">⌘F12</td><td align="left">弹出当前文件结构层，可以在弹出的层上直接输入进行筛选（可用于搜索类中的方法）</td></tr></tbody></table><h4 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h4><table><thead><tr><th align="left">按键</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">⌃⌘F</td><td align="left">切换全屏模式</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 指令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea操作</title>
      <link href="/archives/358cc2b5.html"/>
      <url>/archives/358cc2b5.html</url>
      
        <content type="html"><![CDATA[<h3 id="提高效率的常用配置"><a href="#提高效率的常用配置" class="headerlink" title="提高效率的常用配置"></a><strong>提高效率的常用配置</strong></h3><ol><li>自动导包和优化多余的包</li></ol><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/Snipaste_2022-07-30_15-53-00.png"></p><p>在开发的时候，我们发现有些包一直存在我们的项目中，但就是使用不了，而你的同事却用的很好，这时候你就会怀疑你的编译器是不是出问题了，就会出现清除缓存，重启ide等一系列骚操作。其实没有必要只需按上图配置Auto Import，你会发现很多问题都好了。</p><ol start="2"><li>忽略大小写，进行提示</li></ol><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/Snipaste_2022-07-30_15-54-15.png"></p><ol start="3"><li>CTRL + 滑动滚轮 调整窗口显示大小</li></ol><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/Snipaste_2022-07-30_15-56-08.png"></p><h3 id="提高效率的常用插件-Plugins"><a href="#提高效率的常用插件-Plugins" class="headerlink" title="提高效率的常用插件(Plugins)"></a><strong>提高效率的常用插件(Plugins)</strong></h3><ol><li><p>Alibaba Java Coding Guidelines</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/Snipaste_2022-07-30_15-57-24.png"></p></li></ol><p>alibaba java coding guidelines这个插件是阿里巴巴规约的工具。通过鼠标悬浮代码或右键后选择“编码规约扫描”，可以看不符合规约的代码，并提出建设性意见，让我们的代码更加安全，简洁，美观。</p><ol start="2"><li><p>MybatisX（MybatisX 是一款基于 IDEA 的快速开发插件，为效率而生）</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/Snipaste_2022-07-30_16-00-01.png"></p></li></ol><p>可以快速定位分析sql,它的作用并不仅仅是定位，自动生成</p><ol start="3"><li>Lombok</li></ol><p>  lombok是java自动生成代码的插件。它能提高开发效率，减少自己编写繁琐的代码，让代码看起来更整洁简略，比如getter、setter、equals以及construct等方法。</p><p><img src="https://cdn.jsdelivr.net/gh/zhou200018/picdemo/img/Snipaste_2022-07-30_16-00-56.png"></p>]]></content>
      
      
      <categories>
          
          <category> 优化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考研安排</title>
      <link href="/archives/afa3d4ad.html"/>
      <url>/archives/afa3d4ad.html</url>
      
        <content type="html"><![CDATA[<h1 id="考研安排"><a href="#考研安排" class="headerlink" title="考研安排"></a>考研安排</h1><h2 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h2><p><strong>暑期</strong></p><p>真题词汇2、每天一篇真题阅读</p><blockquote><p><strong>9月</strong> 单词、阅读（要2刷，一次四篇，一周3次）<br><strong>10月</strong> 翻译、完形、新题型（性价比高，可多花时间。做10年后真题，做完看讲解视频。)<br><strong>11月</strong> 大小作文 背模版和好的句子</p></blockquote><h2 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h2><p>按顺序:<br>高数基础 建议时间（30天）<br>线代基础（10天）<br>高数强化、线代强化（50天）强化课要听<br>概率论基础+强化<br><strong>到国庆</strong><br>温习、复习错题<br>数二: 05～22刷真题 2遍<br>数一、数三：<strong>10月底</strong>概率要搞完05～22真题3星期，一天两套<br><strong>下一阶段</strong>：跟着咋子哥写李林模拟卷，查缺补漏</p><h2 id="政治9月开始～11月"><a href="#政治9月开始～11月" class="headerlink" title="政治9月开始～11月"></a>政治9月开始～11月</h2><p>顺序：马原、史纲、毛中特、思修上强化课，写1000题或小程序刷题<br><strong>12月</strong> 肖8 刷三遍背肖四，准备大题（不要过于死磕）</p>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂记</title>
      <link href="/archives/430d67de.html"/>
      <url>/archives/430d67de.html</url>
      
        <content type="html"><![CDATA[<h1 id="查看了自己的号码有注册有什么号"><a href="#查看了自己的号码有注册有什么号" class="headerlink" title="查看了自己的号码有注册有什么号"></a>查看了自己的号码有注册有什么号</h1><p>打开微信搜索中国信通院，点击一证通查，点击互联网账号，然后输入相关信息，点击点击查询，这时你就会看见手机号绑定的所有互联网账号，然后按照说明进行解绑</p><h1 id="快递公司投诉电话"><a href="#快递公司投诉电话" class="headerlink" title="快递公司投诉电话"></a>快递公司投诉电话</h1><table><thead><tr><th>中国邮政</th><th>11185</th></tr></thead><tbody><tr><td>邮政快递（EMS）</td><td>11183</td></tr><tr><td>顺丰快递</td><td>95338</td></tr><tr><td>宅急送</td><td>4006789000</td></tr><tr><td>申通快递</td><td>4008895543</td></tr><tr><td>圆通快递</td><td>95554</td></tr><tr><td>韵达快递</td><td>95546</td></tr><tr><td>中通快递</td><td>95311</td></tr><tr><td>天天</td><td>4001888888</td></tr><tr><td>百世汇通</td><td>4009565656</td></tr><tr><td>全峰快递</td><td>4001000001</td></tr><tr><td>国通</td><td>4001111123</td></tr><tr><td>速尔</td><td>4001589888</td></tr><tr><td>优速</td><td>4001111119</td></tr><tr><td>德邦快递</td><td>95353</td></tr></tbody></table><p>我的快递丢了，麻烦在2小时之内回复解决办法不然我会继续投诉。24小时之内不解决，我将继续投诉到邮局管理（12305）并且不做撤销</p><h1 id="跑鞋推荐"><a href="#跑鞋推荐" class="headerlink" title="跑鞋推荐"></a>跑鞋推荐</h1><p>rider26、next、赤兔5pro、马赫2、invincible、飞马</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github官方初始化指令</title>
      <link href="/archives/fb9ff7d3.html"/>
      <url>/archives/fb9ff7d3.html</url>
      
        <content type="html"><![CDATA[<h3 id="在命令行上创建新的存储库"><a href="#在命令行上创建新的存储库" class="headerlink" title="在命令行上创建新的存储库"></a>在命令行上创建新的存储库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;# blog&quot; &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git branch -M main</span><br><span class="line">git remote add origin https://github.com/zhou200018/blog.git</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><h3 id="从命令行推送现有存储库"><a href="#从命令行推送现有存储库" class="headerlink" title=".从命令行推送现有存储库"></a>.从命令行推送现有存储库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add origin https://github.com/zhou200018/blog.git</span><br><span class="line">git branch -M main</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 指令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QuickStart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git团队基本操作流程</title>
      <link href="/archives/a4469409.html"/>
      <url>/archives/a4469409.html</url>
      
        <content type="html"><![CDATA[<h2 id="git操作"><a href="#git操作" class="headerlink" title="git操作"></a>git操作</h2><p>组长在码云创建一个工程,然后组长clone下来</p><p>组长搭建好项目骨架之后,进行下面这些动作</p><ol><li><p>组长在码云上创建一个空的工程</p></li><li><p>组长需要在本地搭建好springboot的环境</p></li><li><p>组长需要将本地仓库和远程仓库进行一个关联动作进入到项目的根目录下执行</p></li><li><p>将本地仓库和远程仓库进行绑定/关联git remote add origin 远程仓库地址</p></li><li><p>执行git pull origin master</p></li><li><p>编辑从远程仓库拉下来的.gitignore文件.作用:可以配置忽略的文件[不受git管理]</p></li><li><p> 添加并且提交</p></li><li><p>推到远程仓库的master分支</p></li><li><p>组长开始邀请开发人员,再在远程创建分支,然后把链接分享给组员.组员执行git clone操作,将项目导入到idea中.</p><p>组员在本地新建本地分支,切换到本地分支进行项目的开发,开发之后将本地分支推送到远程对应的远程自己的分支</p><p>然后组员拉pr,然后组员看pr,然后进行项目的合并[远程的其余分支的内容合并到远程的master分支]</p><blockquote><p>在桌面新建了一个git-xx目录</p><p>从终端进入到这个git-xx目录</p><p>将git-xx目录初始化为一个git的本地仓库执行完之后的效果是在git-xx的目录下会自动创建一个隐藏的.git目录,之后的git的操作只能在git本地仓库所在的目录下进行操作。</p><p>查看当前所在分支</p><p>新建分支git branch 分支名</p><p>切换分支分支的继承性 - 在哪个分支下新建的分支,那么这个新的分支默认会保留当前这个分支下所有的数据.</p><p>在git-xx目录下新建一个文件h.txt</p><p>查看本地仓库的状态的命令 - git status信息提示是红色的 - 说明当前的改变仅仅是在工作区的改变</p><p>工作区的改变添加到暂存区中 git add命令</p><p>git add 具体的文件/目录的名称</p><p>git add .</p><p>继续查看当前本地仓库的状态，信息提示变成绿色</p><p>把暂存区的修改同步到版本库中去</p><p>继续查看当前本地仓库的状态，默认是在master分支上的改变.</p><p>组员需要将本地分支的内容提到到自己对应的远程分支上面去, 组长需要在远程查看各个分支下是否存在已经上传的数据</p><p>拉一个PR</p><p>组长需要一一处理合并分支的请求</p></blockquote></li><li><p>第二天,组员接着开发,git pull origin master</p></li></ol><h2 id="个人git详细操作"><a href="#个人git详细操作" class="headerlink" title="个人git详细操作"></a>个人git详细操作</h2><p><img src="../img/git1.png" alt="图片"></p><p><img src="../img/git2.png" alt="图片"></p><p><img src="../img/git3.png" alt="图片"></p><h2 id="补充一下可能推送出现错误的补救措施"><a href="#补充一下可能推送出现错误的补救措施" class="headerlink" title="补充一下可能推送出现错误的补救措施"></a>补充一下可能推送出现错误的补救措施</h2><h3 id="错误信息："><a href="#错误信息：" class="headerlink" title="错误信息："></a>错误信息：</h3><p>当使用此命令 <code>$ git push origin master</code>时，它会显示一条错误消息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">! [rejected]        master -&gt; master (fetch first)</span><br><span class="line">error: failed to push some refs to &#x27;git@github.com:zapnaa/abcappp.git&#x27;</span><br></pre></td></tr></table></figure><h3 id="措施："><a href="#措施：" class="headerlink" title="措施："></a>措施：</h3><p>pull 始终是正确的方法，但当您尝试将非 Git 文件系统转换为 Github 存储库时可能会有一个例外。在那里你必须强制第一次提交。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git remote add origin https://github.com/userName/repoName.git</span><br><span class="line">git push --force origin master</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务体系</title>
      <link href="/archives/2378dcd7.html"/>
      <url>/archives/2378dcd7.html</url>
      
        <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="maven环境"><a href="#maven环境" class="headerlink" title="maven环境"></a>maven环境</h2><blockquote><ol><li>官方下载地址 - <a href="https://maven.apache.org/download.cgi">https://maven.apache.org/download.cgi</a> - 解压缩即可</li><li>Apache下的项目,采用java语言开发的.计算机中要求已经<strong>预先安装好jdk</strong></li><li>强大的<strong>项目的构建工具</strong>以及项目中的<strong>依赖[jar]管理工具</strong></li><li>国外已经在逐步使用gradle[使用的是groovy语法]来替代maven.</li></ol></blockquote><h3 id="环境变量的配置"><a href="#环境变量的配置" class="headerlink" title="环境变量的配置"></a>环境变量的配置</h3><blockquote><p>右击计算机 - 高级 - 环境变量 - 定位到系统变量,接下来执行两个动作</p><ol><li><p><strong>新建</strong>变量名 MAVEN_HOME</p><p>变量值: maven的解压缩[根目录]的绝对路径</p></li><li><p>操作系统中内置了很多环境变量名,在系统变量中,查找一个变量名叫做path,点击<strong>编辑</strong></p><p>win8以下 - 所有的路径都是在一行中显示.  路径1;路径2;路径3**;%MAVEN_HOME%\bin**</p><p>win8及其以上 - 新建 - <strong>%MAVEN_HOME%\bin</strong></p></li></ol></blockquote><blockquote><p>所有的符号一定是英文模式下的符号.</p></blockquote><blockquote><p>所有的系统配置完毕之后,窗口点击确定,然后关闭所有的窗口.打开/重启 cmd</p></blockquote><h3 id="测试maven环境"><a href="#测试maven环境" class="headerlink" title="测试maven环境"></a>测试maven环境</h3><blockquote><ol><li>检查path是否已经配置了maven的绝对路径 - 在终端中输入<strong>path</strong></li><li>输入mvn -v</li></ol></blockquote><h2 id="为什么使用maven"><a href="#为什么使用maven" class="headerlink" title="为什么使用maven"></a>为什么使用maven</h2><blockquote><p>没有使用maven,就需要采用传统的方式一一去下载jar包,然后一一导入jar包到项目中.</p><p>弊端:</p><ol><li>找jar费时间 - 需要关注jar的版本问题</li><li>jar的版本是需要兼容的.</li><li>jar与jar之间存在依赖的关系的,有的时候删除一个jar,也会引发一系列的连锁反应.</li><li>手动维护项目中的这些依赖肯定是难以维护的</li><li>每个项目需要手动导入jar到lib目录,肯定是造成磁盘的容量的缩减的.</li></ol></blockquote><h2 id="修改maven镜像"><a href="#修改maven镜像" class="headerlink" title="修改maven镜像"></a>修改maven镜像</h2><blockquote><p>目的 - 就是为了提高下载jar的速度.使用的是阿里云镜像</p></blockquote><blockquote><ol><li><p>创建<strong>本地的仓库</strong>目录 - repo - 后面用来存放本地的jar</p></li><li><p>到C盘的用户主目录下去寻找一个.m2的目录,如果找不到则新建.</p></li><li><p>将setttings.xml文件直接放入到.m2目录中</p><p>需要修改成本地计算机中的repo的绝对路径D:/maven/repo</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/Users/admin/Documents/success/d/apache-maven-3.3.9/repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mirror</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol></blockquote><h1 id="搭建一个maven的java工程"><a href="#搭建一个maven的java工程" class="headerlink" title="搭建一个maven的java工程"></a>搭建一个maven的java工程</h1><blockquote><p><code>maven的工程的目录结构</code></p><ol><li><strong>src/main/java - 存储项目的源代码的目录</strong></li><li><strong>src/main/resources - 存储项目的配置文件的目录</strong></li><li><strong>src/test/java - 存储项目的单元测试的目录</strong></li><li>src/test/resources - 存储项目的测试时候需要的测试的配置文件</li></ol></blockquote><h1 id="POM坐标"><a href="#POM坐标" class="headerlink" title="POM坐标"></a>POM坐标</h1><ul><li>GroupId - 相当于包名[项目的根包],一般采用公司域名倒置 - com.baidu</li><li>ArtifactId - 相当于项目的名称 - mvn-tech</li><li>Version - 使用的是快照版本1.0-SNAPSHOT</li></ul><p><strong>pom.xml文件一旦修改了,那么pom.xml文件需要刷新才能生效的.</strong></p><h1 id="maven常用命令"><a href="#maven常用命令" class="headerlink" title="maven常用命令"></a>maven常用命令</h1><blockquote><ol><li><p>mvn compile - 编译项目.就会在项目的根目录下生成一个target目录,包含源代码的字节码文件[.class]</p><p>有的时候刷新pom.xml文件,没有生效[可能是网络中断],需要手动进行编译.<strong>编译的过程也会帮助我们去下载依赖</strong></p></li><li><p>mvn clean - 删除target目录</p></li><li><p>maven命令可以一起并用 - <strong>mvn clean compile</strong></p></li><li><p>mvn package - 打包</p><p>4-1. mvn package命令肯定是包含了mvn compile命令 - 也会生成target目录</p><p>4-2. 默认的打包命令会执行了单元测试的代码,一旦执行,可能造成数据的混乱 - 不合理的.</p></li><li><p>打包但是跳过单元测试 - 推荐</p><p>mvn package -Dmaven.test.skip=true</p><p>推荐<strong>mvn clean package -Dmaven.test.skip=true</strong></p><p>效果就是可以看到target - 出现了mvn-tech-1.0-SNAPSHOT.jar</p></li><li><p>mvn test - 执行所有的单元测试 </p><p>自动化的测试 - testng - 选择性去测试哪些方法.</p></li></ol></blockquote><h1 id="依赖添加"><a href="#依赖添加" class="headerlink" title="依赖添加"></a>依赖添加</h1><blockquote><p>比如项目中需要使用mysql的依赖了,需要百度搜索maven仓库</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.27<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>会将远程仓库的jar下载到本地仓库[repo目录],只要第一次下载成功之后,后面就是直接使用了[直接引用坐标].</p><p><strong>groupId,artifactId,version - 依赖的坐标</strong>,根据坐标找到它在本地仓库的位置.</p></blockquote><h1 id="父子工程"><a href="#父子工程" class="headerlink" title="父子工程"></a>父子工程</h1><blockquote><p>父工程和子模块</p><ol><li><p>子模块加上下面的配置之后,子模块默认会继承父工程中所有的依赖</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--  指定一下sub01模块的父工程--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baidu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mvn-tech<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p>考虑把各个子模块共用的依赖配置到父工程中.</p></li><li><p><strong>父工程除了可以存放共用的这些依赖,还可以来管理这些依赖的版本</strong></p><p>父工程</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="comment">&lt;!--  用来管理依赖的版本 - 父工程统一进行管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.27<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>子模块</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>父工程一旦对依赖的版本进行统一的管理之后,子工程默认是不会自动导入这些依赖的.</p><p>需要手动导入,但是可以不用加上version</p></li></ol></blockquote><h1 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h1><blockquote><p><strong>版本2.6.0</strong></p></blockquote><blockquote><p>早期完成一个web项目仅仅需要<strong>servelt技术</strong>即可.诞生了struts1.x和struts2.x这种第三方的mvc框架.</p><p>早期说的<strong>ssh</strong> - spring <strong>struts2.x</strong> <strong>hibernate</strong></p><p>struts本身也是一个项目,本身就漏洞百出,配置也比较繁琐.后来虽然也支持了注解的开发方式,但是依然很繁琐</p></blockquote><blockquote><p>并且由于struts框架不属于spring全家桶里面的产品,导致spring每次进行一个版本的升级,那么都是需要考虑和</p><p>struts的兼容性.所以springmvc技术诞生了,对比struts技术来讲,配置要简单一些,是因为springmvc本身就是属于</p><p>spring模块中的webmvc模块,属于spring全家桶中的产品,可以和spring产品无缝对接.</p><p>无论是struts还是<strong>springmvc</strong>本身都是属于mvc框架[是一种开发的思想],底层都是对传统的javaee技术-<strong>servlet技术</strong></p><p>的高级封装.</p><p><strong>但是springmvc目前又被springboot替代了.</strong></p><p><strong>hibernate是全自动的orm框架,对sql要求几乎没有.封装的特别完美,导致我们不能进行sql优化</strong> - 企业内部系统</p><p>但是mybatis是半自动的orm框架,仍然是需要手动写sql语句的.因此在互联网大数据时代,可以对sql进行优化 - 互联网项目</p></blockquote><blockquote><p>听过<strong>ssm</strong> - spring <strong>springmvc</strong> <strong>mybatis</strong></p></blockquote><blockquote><p>Spring全家桶技术</p></blockquote><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><blockquote><ol><li>springboot作为<strong>微服务</strong>开发的首选</li><li>和springmvc对比的话,配置要更加简洁 - “零配置”</li><li>springboot提供了很多场景启动器 - 依赖的统一管理比springmvc还要方便.</li><li>涉及到<strong>springboot自动化的配置</strong> - 解释一下springboot自动化配置的原理</li></ol></blockquote><h2 id="搭建springboot工程"><a href="#搭建springboot工程" class="headerlink" title="搭建springboot工程"></a>搭建springboot工程</h2><blockquote><p>使用脚手架 - spring Initializr来快速搭建springboot工程</p></blockquote><h1 id="场景启动器"><a href="#场景启动器" class="headerlink" title="场景启动器"></a>场景启动器</h1><blockquote><ol><li>Developer Tools - 开发工具<ul><li>Spring Boot DevTools - 热部署</li><li>Lombok</li></ul></li><li>Web<ul><li><strong>Spring Web  √</strong> - web项目需要的最小配置</li></ul></li><li>SQL<ul><li><strong>Spring Data JPA - 持久层的框架</strong>√</li><li><strong>MyBatis Framework - mybatis框架</strong></li><li>MySQL Driver - mysql驱动</li></ul></li><li>NoSQL<ul><li>Spring Data Redis - redis相关的</li></ul></li><li>IO<ul><li><strong>Java Mail Sender - 邮件发送</strong></li></ul></li></ol></blockquote><h1 id="“依赖总管家”"><a href="#“依赖总管家”" class="headerlink" title="“依赖总管家”"></a>“依赖总管家”</h1><blockquote><p>利用脚手架新建的springboot工程,默认是继承了父工程</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>鼠标放在了spring-boot-starter-parent,ctrl单击</p></blockquote><blockquote><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p>spring-boot-dependencies - “依赖总管家”,对常见的依赖都进行了一个统一版本的管理</p></blockquote><blockquote><p>项目的实际开发中如果需要引入一个新的依赖的时候</p><ol><li>优先先到”依赖总管家”去查找这个依赖是否被版本管理了,如果依赖管家中已经管理了,只需要拷贝过来,但是不需要加version</li><li>如果依赖总管家中没有对新的依赖的版本进行管理,那么我们就需要百度搜索 - maven仓库 - 找到对应的依赖,但是必须要加上version</li></ol></blockquote><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><blockquote><p><strong>项目中的配置文件也是一定交给”一位同学去管理的”</strong></p></blockquote><blockquote><p>src/main/resources - 存放springboot相关的配置文件</p><p>默认的是application**.properties文件**,优先级别是最高的.在springboot工程中推荐使用的是yml文件,使用的是<strong>yarn语法</strong></p><p><strong>无论是properties文件还是yml文件,它的命名一定是application,并且一定是放在了src/main/resources目录的根目录下 - “约定”</strong></p></blockquote><h2 id="配置文件的占位符"><a href="#配置文件的占位符" class="headerlink" title="配置文件的占位符"></a>配置文件的占位符</h2><blockquote><p>默认的端口号是8080</p></blockquote><blockquote><p>项目流程中涉及到多种环境,每个环境的配置可能有差别,需要给不同的环境单独创建不同的配置文件.配置文件的格式是有要求的</p><p><strong>application-{profile}.yml</strong></p><ol><li><p>开发环境 - application-dev.yml</p></li><li><p>测试环境 - application-test.yml</p></li><li><p>生产环境 - application-prod.yml</p></li><li><p><strong>即使配置了n个环境的配置文件,但是springboot工程始终认可的主配置文件仍然是application.yml</strong></p></li><li><p>需要在主配置文件application.yml文件中去指定我激活的文件</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><h1 id="启动springboot工程"><a href="#启动springboot工程" class="headerlink" title="启动springboot工程"></a>启动springboot工程</h1><blockquote><ol><li>找到springboot的主入口程序</li></ol></blockquote><h1 id="打包部署"><a href="#打包部署" class="headerlink" title="打包部署"></a>打包部署</h1><blockquote><p>springboot内置了tomcat[服务器]</p><ol><li><p>打包mvn clean package -Dmaven.test.skip=true</p></li><li><p>将target下生成的baidu-boot-demo-0.0.1-SNAPSHOT.jar上传到远程的服务器上去[linux或者阿里云服务器]</p></li><li><p>进入到这个jar所在的目录</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">java -jar baidu-boot-demo-<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>-SNAPSHOT.jar</span><br></pre></td></tr></table></figure></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QuickStart_newPost</title>
      <link href="/archives/3afc68d7.html"/>
      <url>/archives/3afc68d7.html</url>
      
        <content type="html"><![CDATA[<h5 id="新建一篇文章"><a href="#新建一篇文章" class="headerlink" title="新建一篇文章"></a>新建一篇文章</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure><h5 id="在本地进行运行"><a href="#在本地进行运行" class="headerlink" title="在本地进行运行"></a>在本地进行运行</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo server</span><br><span class="line">或者简写成</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h5 id="清楚缓存"><a href="#清楚缓存" class="headerlink" title="清楚缓存"></a>清楚缓存</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">或者简写成</span><br><span class="line">hexo cl</span><br></pre></td></tr></table></figure><h5 id="生成静态网页"><a href="#生成静态网页" class="headerlink" title="生成静态网页"></a>生成静态网页</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">或者简写成</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>小技巧：</p><ul><li><p>当你在本地预览时想要不输入输入以下繁琐的内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean hexo generate hexo server</span><br></pre></td></tr></table></figure><p>就可以在<strong>package.json</strong>中修改以下内容</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;:</span> &#123;</span><br><span class="line"> <span class="attr">&quot;build&quot;:</span> <span class="string">&quot;hexo generate&quot;</span>,</span><br><span class="line"> <span class="attr">&quot;clean&quot;:</span> <span class="string">&quot;hexo clean&quot;</span>,</span><br><span class="line"> <span class="attr">&quot;deploy&quot;:</span> <span class="string">&quot;hexo deploy&quot;</span>,</span><br><span class="line"> <span class="attr">&quot;server&quot;:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后直接在控制台上输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm run server</span><br></pre></td></tr></table></figure></li></ul><h5 id="发布到自己的网站上"><a href="#发布到自己的网站上" class="headerlink" title="发布到自己的网站上"></a>发布到自己的网站上</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br><span class="line">或者简写成</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;My New Post&quot;</span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 指令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QuickStart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/archives/4a17b156.html"/>
      <url>/archives/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 指令 </category>
          
          <category> yaml </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello </tag>
            
            <tag> world </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
